{"version":3,"sources":["utils/index.ts","api/index.ts","api/web3.ts","components/widget/common_style.ts","components/widget/fresh_button.tsx","components/widget/notify.tsx","components/widget/metamask/icon.tsx","components/widget/utils.tsx","components/widget/metamask/Wallet.tsx","components/home/Home.tsx","router.tsx","reportWebVitals.ts","index.tsx"],"names":["convertTimestamp","ts","Date","parseInt","toLocaleTimeString","hex2dec","num","BigInt","toString","dec2hex","shannon2CKB","JSBI","divide","CKB2shannon","isObjectInArray","item","arr","i","length","JSON","stringify","arrayBufferToBuffer","ab","buf","Buffer","alloc","byteLength","view","Uint8Array","get_env_mode","mode","asyncSleep","ms","Promise","r","setTimeout","axios","defaults","withCredentials","Api","base_url","this","utils","config","development_server_url","production_server_url","a","get","params","res","data","eth_address","to_id","amount","fee","post","contract_code","raw_l2tx","signature","type","l2_script_args","tx_hash","account_id","Web3Api","url","web3_server_url","jsonrpc","id","method","headers","response","result","util","getTransactionReceipt","tx_receipt","console","log","styles","page","maxWidth","margin","textAlign","content","width","marginTop","main_color","color","background_color","wide_card","padding","wide_card_title","blockquote","background","borderLeft","clear_path","clear","li","listStyleType","marginLeft","ul","paddingLeft","status_bar","justifyContent","status_bar_title","float","fontSize","fontWeight","status_bar_btn","marginRight","modal","maxHeight","overflowY","height","display","alignItems","paper","backgroundColor","border","boxShadow","outline","hidden_btn","cursor","single_line_code","borderRadius","explain_text","input_wrap","marginBottom","input","overflowX","verticalAlign","describe_img_wrapper","describe_img","describe_img_footnote","commonStyle","loader","animation","btn","btndiv","btn_hover","Loader","style","FreshButton","props","useState","ref","useRef","isLoadingMissed","undefined","isLoading","showLoader","setShowLoader","setIsLoading","isHover","setIsHover","extendedOnClick","onClick","useEffect","timeout","clearTimeout","fadeOutProps","useSpring","opacity","fadeInProps","toogleHover","wh_style","hover_style","btn_style","mystyle","custom_style","final_style","onMouseEnter","onMouseLeave","div","text","commomStyle","panel","toast","NotifyPlace","toastStyle","notify","message","error","success","warn","info","dark","MetaMaskIcon","name","svg","viewBox","defaultSize","Error","Icon","sx","SvgIcon","children","displayName","memo","forwardRef","createIcon","d","fill","stroke","strokeLinecap","strokeLinejoin","wallet_container","maxHeigth","status","status_item","boder","balance","dark_green","Wallet","onUpdateWalletAddress","getBalanceMethod","triggerUpdateBalanceMethod","selectedAddress","setSelectedAddress","setMetamaskStatus","chainIdStatus","setChainIdStatus","networkStatus","setNetworkStatus","setBalance","WrongChainTips","RightChainTips","DisconnectedNetworkTips","ConnectedNetworkTips","init","isMetaMaskOnborad","window","ethereum","isConnected","checkChainIdIsOk","listenForChainIdChanged","listenForAccountChanged","listenForNetworkChanged","MetaMaskOnboarding","isMetaMaskInstalled","request","current_chain_id","chain_id","on","_chainId","location","reload","account","connectMetamask","getBalance","web3Api","slice","displayShortEthAddress","ckb_balance","eth","parseFloat","toFixed","toEthBalance","common_styles","header","minHeight","address","button","contract_container","contract_li","descrip_sudt","placeholder_for_experimental","Home","inputFile","sudtBalance","setSudtBalance","deployedContracts","setDeployedContracts","sudtToken","setSudtToken","sudtTotalAmount","setSudtTotalAmount","getSudtBalance","getSudtToken","getSudtTotalAmount","sudt_token","updateBalance","api","getSudtTokenTotalAmount","total_amount","deposit","depositSudt","deposit_sudt","l2_sudt_script_hash","issueToken","clickUploadContract","current","click","_deployContract","contractCode","godwokenWeb3","transactionParameters","nonce","gasPrice","gas","to","from","value","chainId","txHash","waitForTransactionReceipt","txReceipt","contractAddr","contractAddress","oldArray","deployContract","e","codefile","target","files","readContractCode","code_hex","deployErc20ProxyContract","contract_code_with_constructor","resolve","reject","reader","FileReader","onload","event","onerror","err","onabort","readAsBinaryString","sudt_token_info","className","Grid","container","spacing","xs","new_wallet_addr","onChange","hidden","language","gruvboxDark","join","MyRouter","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c107c022.chunk.js","sourcesContent":["import JSBI from 'jsbi';\nimport { mode } from '../config/constant.json';\n\nconst convertTimestamp = (ts: string | number) => {\n    if(typeof ts === 'string'){\n        return new Date(parseInt(ts)).toLocaleTimeString();\n    }else{\n        return new Date(ts).toLocaleTimeString();\n    }\n}\n\nconst hex2dec =  (num: string) => {\n    return BigInt(num).toString(10);\n}\n\nconst dec2hex = (num: string) => {\n    return BigInt(num).toString(16);\n}\n\nconst shannon2CKB = (num: number | string | BigInt) => {\n    // return BigInt(num).toString(10).substring(0, BigInt(num).toString(10).length-7) \n    //        + '.' + \n    //        BigInt(num).toString(10).substring(BigInt(num).toString(10).length-7);\n    return JSBI.divide(JSBI.BigInt(num), JSBI.BigInt(100000000)).toString(10);\n}\n\nconst CKB2shannon = (num: number | string | BigInt) => {\n    return BigInt(num).toString(10) + '00000000';\n}\n\n// notice: the order of key-value pair in Object\n// does matter in this funciton.\n// (meaning that they will not be the same and return false)\nconst isObjectInArray = (item: object, arr: object[]) => {\n   for(let i=0;i<arr.length;i++){\n        if( JSON.stringify(arr[i]) === JSON.stringify(item) ){\n            return true;\n        } \n   }\n   return false;\n}\n\nconst arrayBufferToBuffer = (ab: ArrayBuffer) => {\n    var buf = Buffer.alloc(ab.byteLength);\n    var view = new Uint8Array(ab);\n    for (var i = 0; i < buf.length; ++i) {\n      buf[i] = view[i];\n    }\n    return buf;\n}\n\nconst get_env_mode = () => {\n    //todo: maybe auto test using os === 'ubuntu' or something.\n    return mode === 'development' ? 'development' : 'production';\n}\n\nconst asyncSleep = (ms = 0) => {\n    return new Promise((r) => setTimeout(r, ms));\n }\n\nexport default {\n    convertTimestamp: convertTimestamp,\n    hex2dec: hex2dec,\n    dec2hex: dec2hex,\n    shannon2CKB: shannon2CKB,\n    CKB2shannon: CKB2shannon,\n    isObjectInArray: isObjectInArray,\n    arrayBufferToBuffer: arrayBufferToBuffer,\n    get_env_mode: get_env_mode,\n    asyncSleep: asyncSleep,\n}\n","import { RawL2Transaction } from '@godwoken-examples/godwoken';\nimport axios from 'axios';\nimport config from '../config/constant.json';\nimport { OpType } from '../types/polyjuice';\nimport utils from '../utils/index';\n\naxios.defaults.withCredentials = true;\n\nclass Api{\n\n    base_url: string;\n\n    constructor(){\n        this.base_url = utils.get_env_mode() === 'development' ? config.development_server_url : config.production_server_url;\n    };\n\n    async getRollupTypeHash(){\n        let res = await axios.get(`${this.base_url}/get_rollup_type_hash`, { \n            params:{\n            }\n        });\n        return res.data;\n    };\n    \n    async getEthAccountLockConfig(){\n        let res = await axios.get(`${this.base_url}/get_eth_acccount_lock`, {\n            params:{\n            }\n        });\n        return res.data;\n    };\n\n    async getBalance(eth_address: string){\n        let res = await axios.get(`${this.base_url}/get_layer2_balance`, { \n            params:{\n                eth_address: eth_address\n            }\n        });\n        return res.data;\n    };  \n\n    async getSudtBalance(eth_address: string){\n        let res = await axios.get(`${this.base_url}/get_layer2_sudt_balance`, { \n            params:{\n                eth_address: eth_address\n            }\n        });\n        return res.data;\n    };  \n\n    async issueToken(){\n        let res = await axios.get(`${this.base_url}/issue_token`, { \n            params:{\n            }\n        });\n        return res.data; \n    }\n\n    async getSudtToken(){\n        let res = await axios.get(`${this.base_url}/get_sudt_token`, {\n\n        });\n        return res.data;\n    }\n\n    async getSudtTokenTotalAmount(){\n        let res = await axios.get(`${this.base_url}/get_sudt_token_total_amount`, {\n\n        });\n        return res.data;\n    }\n\n    async deposit(eth_address: string){\n        let res = await axios.get(`${this.base_url}/deposit`, { \n            params:{\n                eth_address: eth_address\n            }\n        });\n        return res.data;\n    }; \n\n    async deposit_sudt(eth_address: string){\n        let res = await axios.get(`${this.base_url}/deposit_sudt`, { \n            params:{\n                eth_address: eth_address\n            }\n        });\n        return res.data;\n    }\n\n  async transfer(to_id: string, amount: string, fee: string, eth_address: string) {\n    let res = await axios.post(`${this.base_url}/transfer`, {\n      data: {\n        to_id: to_id,\n        amount: amount,\n        fee: fee,\n        eth_address: eth_address,\n      }\n    });\n    return res.data;\n  }\n\n    async deployContract(contract_code: string, eth_address: string ){\n        let res = await axios.post(`${this.base_url}/deploy_contract`, { \n            data:{\n                contract_code: contract_code,\n                eth_address: eth_address,\n            }\n        });\n        return res.data;\n    };\n\n    async deployErc20ProxyContract(eth_address: string){\n        let res = await axios.post(`${this.base_url}/deploy_erc20_proxy_contract`, { \n            data:{\n                eth_address: eth_address,\n            }\n        });\n        return res.data;\n    }; \n\n    async deploySudtContract() {\n        let res = await axios.post(`${this.base_url}/deploy_sudt_contract`, { \n            data:{\n            }\n        });\n        return res.data; \n    }\n\n    async sendL2Transaction(raw_l2tx: RawL2Transaction, signature: string, type: OpType, l2_script_args?: string){\n        let res = await axios.post(`${this.base_url}/send_l2_tx`, { \n            data:{\n                raw_l2tx: raw_l2tx,\n                signature: signature,\n                type: type,\n                l2_script_args: l2_script_args\n            }\n        });\n        return res.data;\n    };\n\n    async getTransactionReceipt(tx_hash: string){\n        let res = await axios.get(`${this.base_url}/get_tx_receipt`, { \n            params:{\n                tx_hash: tx_hash\n            }\n        });\n        return res.data;\n    }\n    //\n    async getContractAddrByAccountId(account_id: string){\n        let res = await axios.get(`${this.base_url}/get_contract_addr_by_account_id`, { \n            params:{\n                account_id: account_id\n            }\n        });\n        return res.data;\n    }\n\n}\n\nexport default Api;\n","import axios from 'axios';\nimport config from '../config/constant.json';\nimport util from '../utils/index';\n\naxios.defaults.withCredentials = false;\n\nexport default class Web3Api{\n\n    url: string;\n\n    constructor(){\n        this.url = config.web3_server_url;\n    };\n\n\n    async getBalance(eth_address: string){\n        let response = await axios.post(this.url, {\n            jsonrpc: '2.0',\n            id: + new Date(),\n            method: 'eth_getBalance',\n            params: [eth_address],\n        }, {\n              headers: {\n                'Content-Type': 'application/json',\n              },\n            \n        });\n        return response.data.result;\n    }\n\n    async getTransactionReceipt(tx_hash: string){\n        let response = await axios.post(this.url, {\n            jsonrpc: '2.0',\n            id: + new Date(),\n            method: 'eth_getTransactionReceipt',\n            params: [tx_hash],\n        }, {\n              headers: {\n                'Content-Type': 'application/json',\n              },\n        });\n        return response.data.result;\n    }\n\n    async waitForTransactionReceipt(tx_hash: string){\n        while (true) {\n          await util.asyncSleep(1000);\n          const tx_receipt = await this.getTransactionReceipt(\n            tx_hash\n          );\n          console.log(`tx_receipt: ${tx_receipt}`);\n      \n          if (tx_receipt) {\n            break;\n          }\n        }\n        return;\n    }\n\n}\n","const styles = {\n    page: {\n        maxWidth: '700px',\n        margin: 'atuo',\n        textAlign: 'center' as const\n    },\n    content: {\n        width: '100%',\n        marginTop: '20px',\n        textAlign: 'left' as const\n    },\n    main_color: {\n        color: '#3CC68A'\n    },\n    background_color: {\n        color: '#282c34'\n    },\n    wide_card: {\n        padding: '10px',\n        textAlign: 'left' as const\n    },\n    wide_card_title: {\n        color: '#3CC68A',\n        textAlign: 'center' as const\n    },\n    blockquote: {\n        background: '#f9f9f9',\n        borderLeft: '10px solid #3CC68A',\n        margin: '1.5em 10px',\n        padding: '1em 2em',\n        color: 'black',\n    },\n    clear_path: {\n        clear: 'both' as const\n    },\n    li: {\n        listStyleType: 'none',\n        marginLeft: '0'\n    },\n    ul: {\n        listStyleType: 'none',\n        paddingLeft: '0'\n    },\n    status_bar: {\n        width: '100%',\n        padding: '5px',\n        margin: '10px 0px',\n        clear: 'both' as const,\n        justifyContent: 'center' as const,\n    },\n    status_bar_title: {\n        float: 'left' as const,\n        fontSize: '16px',\n        fontWeight: 'bolder' as const\n    },\n    status_bar_btn: {\n        float: 'right' as const,\n        textAlign: 'center' as const,\n        marginRight: '20px'\n    },\n    modal: {\n      maxWidth: '700px',\n      maxHeight: '80%',\n      overflowY: 'scroll' as const,\n      padding: '20px',\n      height: '100%',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      margin: '0 auto'\n    },\n    paper: {\n      backgroundColor: 'gray',\n      border: '2px solid #000',\n      boxShadow: '10px',\n      padding: '10px',\n      width: '100%',\n      outline: 'none'\n    },\n    hidden_btn: {\n      width:'100%', \n      border:'0', \n      backgroundColor: 'rgb(0,0,0, 0)',\n      height: '0',\n      cursor: 'auto'\n    },\n    single_line_code: {\n        background: 'white',\n        color: 'gray',\n        padding: '2px',\n        borderRadius: '5px',\n    },\n    explain_text: {\n        fontSize: '14px',\n        color: 'gray',\n        margin: '20px',\n    },\n    input_wrap: {\n        padding: '2px 5px',\n        marginBottom: '10px',\n        display: 'block',\n        background: 'white',\n    },\n    input: {\n        width: '100%',\n        outline: 'none',\n        fontSize: '14px',\n        border: '0',\n        overflowX: 'scroll' as const,\n        verticalAlign: 'text-bottom',\n    },\n    describe_img_wrapper: {\n        maxWidth: '100px',\n        margin: '40px auto',\n    },\n    describe_img: {\n        width: '100%',\n        height: '100%',\n        background: '#282c34',\n    },\n    describe_img_footnote: {\n        textAlign: 'center' as const,\n        fontSize: '11px',\n    }\n}\n\nexport default styles;","/**** \n * improve: \n *  - [x] every button instance of this componet  must create its own isLoading and setIsLoading, this is ugly and unacceptable.\n *  - [ ] should provide css customize option for user\n *  - [ ] try export this as a standalone button for re-use\n */\nimport React, {useState, useEffect, useRef, CSSProperties} from \"react\";\nimport commonStyle from \"./common_style\";\nimport { useSpring, animated } from \"react-spring\";\nimport \"./button.css\";\n\nexport type Props = {\n    custom_style?: CSSProperties\n    isLoading?: boolean\n    text: string\n    onClick: () => void\n}\n\nconst styles = {...commonStyle, ...{\n    loader: {\n        border: '4px solid rgba(60, 198, 138, 0.2)',\n        borderLeft: '4px solid',\n        animation: 'load 1s infinite linear',\n        borderRadius: '50%',\n        width: '25px',\n        height: '25px',\n        margin: '0 auto'\n    },\n    btn: {\n        padding: '0.5rem 1rem',\n        fontSize: '12px',\n        color: 'white',\n        borderRadius: '6px',\n        border: '1px solid ' + commonStyle.main_color.color,\n        outline:'none',\n        backgroundColor: 'rgb(255,255,255, 0)',\n        cursor: 'pointer'\n    },\n    btndiv: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        height: '100%'\n    },\n    btn_hover: {\n        padding: '0.5rem 1rem',\n        fontSize: '12px',\n        color: 'white',\n        borderRadius: '6px',\n        border: '1px solid ' + commonStyle.main_color.color,\n        outline:'none',\n        backgroundColor: commonStyle.main_color.color,\n        cursor: 'pointer'\n    }\n}}\n\nconst Loader = () => <div style={styles.loader} />;\n\nexport default function FreshButton(props: Props){\n\n    /* Capture the dimensions of the button before the loading happens\n    so it doesn’t change size when showing the loader */\n    const [width, setWidth] = useState(0);\n    const [height, setHeight] = useState(0);\n    const ref = useRef<HTMLButtonElement>(null);\n\n\n    const isLoadingMissed = props.isLoading === undefined;\n\n    const [showLoader, setShowLoader] = useState(false);\n    const [isLoading, setIsLoading] = useState( isLoadingMissed ? false : props.isLoading);\n    const [isHover, setIsHover] = useState(false);\n\n    const extendedOnClick = async () => {\n      if(isLoadingMissed)setIsLoading(true);\n      await props.onClick();\n      if(isLoadingMissed)setIsLoading(false);\n    }\n\n    useEffect(() => {\n        if(props.isLoading !== undefined)\n          setIsLoading(props.isLoading);\n\n        if (isLoading) {\n          setShowLoader(true);\n        }\n    \n        // Show loader a bits longer to avoid loading flash\n        if (!isLoading && showLoader) {\n          const timeout = setTimeout(() => {\n            setShowLoader(false);\n          }, 400);\n    \n          return () => {\n            clearTimeout(timeout);\n          };\n        }\n      }, [props.isLoading, isLoading, showLoader]);\n  \n    // Hooks used to fade in/out the loader or the button contents\n    const fadeOutProps = useSpring({ opacity: showLoader ? 1 : 0 });\n    const fadeInProps = useSpring({ opacity: showLoader ? 0 : 1 });\n    \n    /*\n    useEffect(() => {\n        if (ref.current && ref.current.getBoundingClientRect().width) {\n          setWidth(ref.current.getBoundingClientRect().width);\n        }\n        if (ref.current && ref.current.getBoundingClientRect().height) {\n          setHeight(ref.current.getBoundingClientRect().height);\n        }\n      }, [props.text]);\n    */\n\n    const toogleHover = () => {\n        setIsHover(!isHover);\n    }\n\n    const wh_style = width && height\n    ? {\n        width: `${width}px`,\n        height: `${height}px`,\n      }\n    : {};\n    const hover_style = isHover ? styles.btn_hover : styles.btn;\n    const btn_style = {...hover_style, ...wh_style};\n    const mystyle = props.custom_style === \"undefined\" ? {} : props.custom_style; \n    const final_style = {...btn_style, ...mystyle};\n\n    return(\n      <button style={final_style} onClick={extendedOnClick} onMouseEnter={toogleHover} onMouseLeave={toogleHover} ref={ref} >\n      {showLoader ? (\n            <animated.div style={fadeOutProps}>\n              <Loader />\n            </animated.div>\n          ) : (\n            <animated.div style={fadeInProps}>{props.text}</animated.div>\n      )}\n      </button>\n    )\n}","import React, { useRef, useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './notify.css';\nimport commomStyle from '../widget/common_style';\n\nconst styles = {...commomStyle, ...{\n    panel: {\n        //maxWidth: \"700px\",\n    },\n    toast: {\n        padding: '10px',\n        fontSize: '14px',\n        \n    }\n}};\n\nexport default function NotifyPlace(){\n    return(\n        <div>\n            <ToastContainer style={styles.panel} toastStyle={styles.toast} />\n        </div>\n    )\n}\n\nexport type MsgType = 'error' | 'success' | 'info' | 'warning' | 'dark';\n\nconst notify = (message: string, type?: MsgType) => {\n    switch (type) {\n        case 'error':\n            toast.error(message);\n            break;\n        \n        case 'success':\n            toast.success(message);\n            break;\n        \n        case 'warning':\n            toast.warn(message);\n            break;\n        \n        case 'info':\n            toast.info(message);\n            break;\n\n        case 'dark':\n            toast.dark(message);\n            break;\n\n        default:\n            toast.error(message);\n            break;\n    }\n}\n\nexport { notify }","  \nimport { createIcon } from '../utils'\nexport const MetaMaskIcon = createIcon(\n    'MetaMask',\n    <>\n        <path\n            d=\"M0 12C0 5.373 5.373 0 12 0h24c6.627 0 12 5.373 12 12v24c0 6.627-5.373 12-12 12H12C5.373 48 0 42.627 0 36V12z\"\n            fill=\"#fff\"\n        />\n        <path\n            d=\"M38.709 10l-11.8 8.75 2.195-5.157L38.709 10z\"\n            fill=\"#E17726\"\n            stroke=\"#E17726\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n        />\n        <path\n            d=\"M11.493 10l11.694 8.832-2.09-5.239L11.494 10zM34.464 30.288l-3.14 4.807 6.722 1.855 1.926-6.557-5.508-.105zM10.247 30.393l1.914 6.557 6.71-1.855-3.127-4.807-5.497.105z\"\n            fill=\"#E27625\"\n            stroke=\"#E27625\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n        />\n        <path\n            d=\"M18.509 22.168l-1.867 2.824 6.652.303-.222-7.175-4.563 4.048zM31.696 22.168l-4.633-4.13-.152 7.257 6.652-.303-1.867-2.824zM18.872 35.095l4.027-1.948-3.466-2.707-.56 4.655zM27.31 33.147l4.014 1.948-.549-4.655-3.466 2.707z\"\n            fill=\"#E27625\"\n            stroke=\"#E27625\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n        />\n        <path\n            d=\"M31.322 35.095l-4.015-1.948.327 2.613-.035 1.108 3.723-1.773zM18.87 35.095l3.735 1.773-.023-1.108.315-2.613-4.026 1.948z\"\n            fill=\"#D5BFB2\"\n            stroke=\"#D5BFB2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n        />\n        <path\n            d=\"M22.674 28.713l-3.338-.98 2.358-1.085.98 2.065zM27.528 28.713l.98-2.065 2.37 1.085-3.35.98z\"\n            fill=\"#233447\"\n            stroke=\"#233447\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n        />\n        <path\n            d=\"M18.87 35.095l.583-4.806-3.71.104 3.127 4.702zM30.75 30.288l.571 4.807 3.14-4.701-3.712-.105zM33.566 24.992l-6.652.303.618 3.418.98-2.065 2.37 1.085 2.684-2.741zM19.336 27.733l2.357-1.085.98 2.065.619-3.418-6.652-.303 2.696 2.741z\"\n            fill=\"#CC6228\"\n            stroke=\"#CC6228\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n        />\n        <path\n            d=\"M16.64 24.992l2.79 5.448-.094-2.707-2.696-2.741zM30.874 27.733l-.105 2.707 2.79-5.448-2.685 2.741zM23.29 25.295l-.618 3.418.781 4.037.176-5.32-.339-2.135zM26.912 25.295l-.327 2.123.163 5.332.782-4.037-.619-3.418z\"\n            fill=\"#E27525\"\n            stroke=\"#E27525\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n        />\n        <path\n            d=\"M27.528 28.713l-.782 4.037.56.397 3.466-2.707.105-2.707-3.35.98zM19.336 27.733l.094 2.707 3.466 2.707.56-.397-.782-4.037-3.338-.98z\"\n            fill=\"#F5841F\"\n            stroke=\"#F5841F\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n        />\n        <path\n            d=\"M27.6 36.868l.035-1.108-.303-.257h-4.458l-.292.257.023 1.108-3.734-1.773 1.307 1.073L22.827 38h4.54l2.66-1.832 1.296-1.073-3.723 1.773z\"\n            fill=\"#C0AC9D\"\n            stroke=\"#C0AC9D\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n        />\n        <path\n            d=\"M27.308 33.147l-.56-.397h-3.29l-.561.397-.315 2.613.292-.257h4.458l.303.257-.327-2.613z\"\n            fill=\"#161616\"\n            stroke=\"#161616\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n        />\n        <path\n            d=\"M39.211 19.322l.992-4.83L38.71 10l-11.402 8.458 4.388 3.71 6.197 1.809 1.365-1.599-.595-.431.945-.864-.723-.56.945-.723-.619-.478zM10 14.492l1.004 4.83-.642.478.957.723-.724.56.945.864-.595.431 1.366 1.599 6.197-1.809 4.388-3.71L11.494 10 10 14.492z\"\n            fill=\"#763E1A\"\n            stroke=\"#763E1A\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n        />\n        <path\n            d=\"M37.896 23.977L31.7 22.168l1.867 2.824-2.789 5.448 3.688-.047h5.508l-2.077-6.416zM18.51 22.168l-6.198 1.809-2.065 6.416h5.496l3.688.047-2.789-5.448 1.867-2.824zM26.913 25.295l.397-6.837 1.797-4.865h-8.006l1.798 4.865.396 6.837.152 2.147.012 5.308h3.29l.013-5.308.151-2.147z\"\n            fill=\"#F5841F\"\n            stroke=\"#F5841F\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n        />\n    </>,\n    '0 0 48 48',\n)","\nimport SvgIcon from '@material-ui/core/SvgIcon'\nimport { ReactNode, forwardRef, memo } from 'react'\n\n/**\n * Create a icon from svg fragment\n * @internal\n * @param name Name of the Icon\n * @param svg SVG content. Do not include <svg> tag\n * @param viewBox The viewbox\n * @param defaultSize Only use this when the icon is not square. Unit: px\n * @returns A component that same type as icons from @material-ui/icons\n */\nexport function createIcon(\n    name: string,\n    svg: ReactNode,\n    viewBox?: string,\n    defaultSize?: [width: number | undefined, height: number | undefined],\n): typeof SvgIcon {\n    const [width, height] = defaultSize || []\n    if (width === height && typeof width === 'number') throw new Error('Only define this when the icon is not a square')\n    const Icon = function Icon({ sx, ...props }: any, ref: any) {\n        const style = defaultSize ? { width, height, ...sx } : sx\n        return <SvgIcon viewBox={viewBox} {...props} ref={ref} children={svg} sx={style} />\n    } as any\n    Icon.displayName = `Icon (${name})`\n    return memo(forwardRef(Icon)) as unknown as typeof SvgIcon\n}","import React, { useEffect, useState } from 'react';\nimport { MetaMaskIcon } from './icon'\nimport MetaMaskOnboarding from '@metamask/onboarding';\nimport { notify } from '../notify';\nimport { chain_id } from '../../../config/constant.json';\nimport FreshButton from '../fresh_button';\nimport NetworkCheckIcon from '@material-ui/icons/NetworkCheck';\nimport LinkIcon from '@material-ui/icons/Link';\nimport LinkOffIcon from '@material-ui/icons/LinkOff';\nimport Web3Api from '../../../api/web3';\nimport utils from '../../../utils/index';\n\nconst styles = {\n  wallet_container: {\n    maxWidth: '300px',\n    maxHeigth: '20px',\n    margin: '40px auto',\n    display: 'flex' as const,\n    padding: '5px',\n    alignItems: 'center' as const,\n    borderRadius: '30px',\n    justifyContent: 'center',\n    backgroundColor: 'rgb(60, 198, 138)',\n  },\n  status: {\n    fontSize: '18px', \n    color: 'gray',\n    margin: '20px',\n  },\n  status_item: {\n    boder: '1px solid gray',\n    padding: '5px',\n    marginRight: '10px',\n  },\n  balance: {\n    color: 'whitesmoke',\n    fontSize: '20px',\n  },\n  dark_green: {\n    color: '#065a06'\n  }\n}\n\nexport type WalletStatus = \n   | 'connect-failed' // metamask account status\n   | 'diconnect' // metamask account status \n   | 'connected' // metamask account status\n   | 'not-installed' \n   | 'installed'\n  \nexport interface WalletProps {\n  onUpdateWalletAddress?: (wallet_addr: string | undefined) => void\n  triggerUpdateBalanceMethod?: () => void\n}\n\nexport default function Wallet (props: WalletProps) {\n\n    const { onUpdateWalletAddress } = props;\n    var { triggerUpdateBalanceMethod: getBalanceMethod } = props;\n\n    const [selectedAddress, setSelectedAddress] = useState<string>();\n    const [metamaskStatus, setMetamaskStatus] = useState<WalletStatus>();\n    const [chainIdStatus, setChainIdStatus] = useState<boolean>();\n    const [networkStatus, setNetworkStatus] = useState<boolean>(true); // todo: remove initail value\n    const [balance, setBalance] = useState<string>('0');\n\n    const WrongChainTips = <span style={{color: 'red'}}> <LinkOffIcon />  wrong network </span>\n    const RightChainTips = <span style={{color: styles.dark_green.color}}> <LinkIcon /> Polyjucie ☑️ </span> \n    const DisconnectedNetworkTips = <span style={{color: 'red'}}> <NetworkCheckIcon></NetworkCheckIcon> Disconnected </span>\n    const ConnectedNetworkTips = <span style={{color: styles.dark_green.color}}> <NetworkCheckIcon></NetworkCheckIcon> Connected </span> \n\n    const init = async () => {\n        if( !isMetaMaskOnborad() ){\n            notify(\"please install MetaMask!\");\n            throw new Error(\"please install MetaMask!\");\n        }\n\n        console.log(window.ethereum.isConnected());\n\n        if( window.ethereum.isConnected() ){\n          console.log('is conneted...')\n          setNetworkStatus(true);\n        }\n\n        await checkChainIdIsOk();\n\n        listenForChainIdChanged();\n        listenForAccountChanged();\n        listenForNetworkChanged();\n\n        // connectMetamask();\n    }\n\n    const getProvider = () => {\n        return window.ethereum;   \n    }\n\n    const isMetaMaskOnborad = async () => {\n      if (MetaMaskOnboarding.isMetaMaskInstalled()) {\n        await setMetamaskStatus('installed');\n        return true;\n      }else{\n        await setMetamaskStatus('not-installed');\n        return false;\n      }\n    }\n\n    const checkChainIdIsOk = async () => {\n        try {\n          const current_chain_id = await window.ethereum.request({ method: 'eth_chainId' });\n          console.log(`current chain id: ${current_chain_id}`);\n          if(current_chain_id !== chain_id){\n            console.error(`current chain id not equals ${current_chain_id} !== polyjuice chain id ${chain_id}`);\n            await setChainIdStatus(false);\n            notify('wrong network!');\n            return false\n          }\n          await setChainIdStatus(true);\n          return true;\n        } catch (error) {\n          notify(JSON.stringify(error, null, 2));\n          return false;\n        }\n    }\n\n    const listenForChainIdChanged = () => {\n        window.ethereum.on('chainChanged', handleChainChanged);\n        function handleChainChanged(_chainId: string) {\n          console.log('chain_id changed!');\n          window.location.reload();\n        }\n    }\n\n    const listenForAccountChanged = () => {\n      window.ethereum.on('accountsChanged', handleAccountChanged);\n      function handleAccountChanged(account: string) {\n        if(account.length > 0)\n          setSelectedAddress(account[0]);\n        else{\n          setSelectedAddress(undefined);\n          setMetamaskStatus('diconnect');\n          notify('please reconnect to metamask!');\n        }\n      } \n    }\n\n    // todo: the connect event seems not emit forever\n    const listenForNetworkChanged = () => {\n      window.ethereum.on('connect', handleConnect);\n      function handleConnect() {\n        console.log('connect!!!');\n        setNetworkStatus(true);\n      } \n\n      window.ethereum.on('disconnect', handleDisconnect);\n      function handleDisconnect() {\n        setNetworkStatus(false);\n      } \n    }\n\n    const connectMetamask = async () => {\n      try {\n        await window.ethereum.request({ method: 'eth_requestAccounts' });\n        setMetamaskStatus('connected');\n        setSelectedAddress(window.ethereum.selectedAddress);\n      } catch (error) {\n        notify(JSON.stringify(error, null, 2));\n        setMetamaskStatus('connect-failed');\n        console.error(error);\n      }\n    }\n\n    const getBalance = async () => {\n      if(!selectedAddress)return;\n      const web3Api = new Web3Api(); \n      try {\n        console.log(selectedAddress);\n        const data = await web3Api.getBalance(selectedAddress);\n        console.log(data);\n        if(!data)\n          return console.log(`balance is undefinded.`);\n          \n        const balance = BigInt(data).toString();\n        console.log(balance);\n        await setBalance(utils.shannon2CKB(balance));\n        console.log(utils.shannon2CKB(balance));\n      } catch (error) {\n        console.log(`get bablance error`);\n        console.log(error);\n        notify(JSON.stringify(error));\n      }\n    }\n\n    const toEthBalance = (ckb_balance: string) => {\n      const ckb = parseFloat(ckb_balance);\n      const eth = ckb / parseFloat('10000000000');\n      if(eth > 0)\n        return eth.toFixed(10 - ckb_balance.length + 1);\n      else\n        return eth.toFixed(2);\n    }\n\n    useEffect( () => {\n        if(getBalanceMethod){\n          // todo: this is tricky\n          getBalanceMethod = () => {\n            getBalance();\n          }\n        }\n        init();\n        getBalance();\n    }, []);\n\n    useEffect( () => {\n      if(onUpdateWalletAddress)\n        onUpdateWalletAddress(selectedAddress);\n      \n      getBalance();\n    }, [selectedAddress] );\n\n    const displayShortEthAddress = (eth_address: string) => {\n      const length = eth_address.length;\n      if(length !== 42){\n        return eth_address;\n      }\n      return eth_address.slice(0,8) + '...' + eth_address.slice(length - 6);\n    }\n\n    return(\n        <div>\n          <div style={styles.wallet_container}>\n            <MetaMaskIcon />\n            <FreshButton \n              custom_style={{fontSize: '25px', fontWeight: 'bolder', border: 'none' }}\n              text={ displayShortEthAddress(selectedAddress ? selectedAddress : 'Connect Wallet') } \n              onClick={ selectedAddress ? function(){} : connectMetamask } />\n          </div>\n          <div style={styles.status}>\n            <span style={styles.status_item}>\n              { chainIdStatus ? RightChainTips : WrongChainTips }\n            </span>\n            <span style={styles.status_item}> \n              { networkStatus ?  ConnectedNetworkTips : DisconnectedNetworkTips }\n            </span>\n          </div>\n          <div>\n            <div style={styles.balance}> <span>{balance} CKB ( {toEthBalance(balance)}  pETH )</span></div>\n          </div>\n        </div>\n    )\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport Api from '../../api/index';\nimport Web3Api from '../../api/web3';\nimport FreshButton from '../widget/fresh_button';\nimport NotifyPlace, {notify} from '../widget/notify';\nimport { MsgSignType  } from '../../types/polyjuice';\nimport { Grid } from '@material-ui/core';\nimport common_styles from '../widget/common_style';\nimport utils from '../../utils/index';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { gruvboxDark } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { MetaMaskIcon } from '../widget/metamask/icon';\nimport MetamaskWallet from '../widget/metamask/Wallet';\nimport './Home.css';\n\ndeclare global {\n  interface Window { ethereum: any; }\n}\n\nconst styles = {...common_styles, ...{\n  header: {\n    minHeight: '300px',\n    margin: '10px',\n  },\n  address: {\n    color: '#a0eec0',\n  },\n  balance: {\n    color: 'whitesmoke',\n    fontSize: '20px',\n  },\n  button: {\n    fontSize: '25px',\n    width: '100%',\n    maxWidth: '700px',\n    margin: '10px',\n    padding: '0.7rem 1.2rem',\n  },\n  contract_container: {\n    width: '100%',\n    maxWidth: '700px',\n    margin: '30px auto',\n    textAlign: 'left' as const,\n    fontSize: '15px',\n    border: '1px solid gray',\n    color: 'gray',\n  },\n  contract_li: {\n    listStyleType: 'none' as const,\n  },\n  descrip_sudt: {\n    width: '600px',\n    fontSize: '13px',\n    margin: '30px auto',\n    textAlign: 'left' as const,\n  },\n  placeholder_for_experimental: {\n    width: '700px',\n    margin: '0 auto',\n    marginTop: '50px',\n  }\n}\n}\n\nexport interface EthAccountLockConfig {\n  code_hash: string;\n  hash_type: 'hash' | 'type';\n}\n\nfunction Home() {\n  const inputFile = useRef<HTMLInputElement>(null);\n  const [selectedAddress, setSelectedAddress] = useState<string>();\n  \n  const [sudtBalance, setSudtBalance] = useState<string>('0');\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [deployedContracts, setDeployedContracts] = useState<string[]>([]);\n  const [rollupTypeHash, setRollupTypeHash] = useState<string>();\n  const [ethAccountLockConfig, setEthAccountLockConfig] = useState<EthAccountLockConfig>();\n  const [sudtToken, setSudtToken] = useState<string>();\n  const [sudtTotalAmount, setSudtTotalAmount] = useState<string>();\n\n  const updateWallet = (new_wallet_addr?: string) => {\n    if(new_wallet_addr){\n      setSelectedAddress(new_wallet_addr);\n    }\n  } \n\n  useEffect(() => {\n    if(selectedAddress){\n      getSudtBalance();\n      getSudtToken();\n      getSudtTotalAmount();\n    };\n  }, [selectedAddress]);\n\n\n  var updateBalance = () => {};\n\n  const getSudtBalance = async () => {\n    if(!selectedAddress)return;\n    const api = new Api();\n    try {\n      const res = await api.getSudtBalance(selectedAddress);\n      if(res.status !== 'ok')\n        return console.error(`failed to get sudt balance from account. issue sudt token then ${JSON.stringify(res.error)}`);\n      await setSudtBalance(utils.shannon2CKB(res.data));\n      console.log(utils.shannon2CKB(res.data));\n    } catch (error) {\n      console.log(`get sudt bablance error`);\n      console.log(error);\n      notify(JSON.stringify(error));\n    }\n  }\n\n  const getSudtToken = async () => {\n    const api = new Api();\n    try {\n      const res = await api.getSudtToken();\n      console.log(res);\n      if(res.status !== 'ok')\n        return console.log(`failed to get sudt token. ${JSON.stringify(res.error)}`);\n\n      await setSudtToken(res.data.sudt_token);\n    } catch (error) {\n      console.log(`get sudt token error`);\n      console.log(error);\n      notify(JSON.stringify(error));\n    } \n  }\n\n  const getSudtTotalAmount = async () => {\n    const api = new Api();\n    try {\n      const res = await api.getSudtTokenTotalAmount();\n      console.log(res);\n      if(res.status !== 'ok')\n        return console.log(`failed to get sudt token. ${JSON.stringify(res.error)}`);\n\n      await setSudtTotalAmount(res.data.total_amount);\n    } catch (error) {\n      console.log(`get sudt token amount error`);\n      console.log(error);\n      notify(JSON.stringify(error));\n    }  \n  }\n\n  const getRollupTypeHash = async () => {\n    const api = new Api();\n    try {\n      const res = await api.getRollupTypeHash();\n      if(res.status !== 'ok')\n        return notify(`failed to get rollup type hash. ${JSON.stringify(res.error)}`);\n      setRollupTypeHash(res.data);\n    } catch (error) {\n      console.log(`get rollup type hash error`);\n      console.log(error);\n      notify(JSON.stringify(error));\n    } \n  }\n\n  const getEthAccountLockConfig = async () => {\n    const api = new Api();\n    try {\n      const res = await api.getEthAccountLockConfig();\n      if(res.status !== 'ok')\n        return notify(`failed to get eth_account_lock config. ${JSON.stringify(res.error)}`);\n      setEthAccountLockConfig(res.data);\n    } catch (error) {\n      console.log(`get eth account lock error`);\n      console.log(error);\n      notify(JSON.stringify(error));\n    } \n  }\n\n  const deposit =  async () => {\n    if(!selectedAddress)return notify(`metamask account not found.`);\n    const api = new Api();\n    try {\n      const res = await api.deposit(selectedAddress);\n      console.log(res);\n      if(res.status === 'ok'){\n        notify(`your account id: ${res.data.account_id}`, 'success');\n        updateBalance();\n      }else{\n        notify(JSON.stringify(res.error));\n      }\n    } catch (error) {\n      notify(JSON.stringify(error));\n    }\n  }\n\n const depositSudt =  async () => {\n   if(!selectedAddress)return notify(`metamask account not found.`);\n   const api = new Api();\n   try {\n     const res = await api.deposit_sudt(selectedAddress);\n     console.log(res);\n     if(res.status === 'ok'){\n       notify(`your account id: ${res.data.account_id}`, 'success');\n       console.log(`res.data.l2_sudt_script_hash: ${res.data.l2_sudt_script_hash}`)\n       await getSudtBalance();\n     }else{\n       notify(JSON.stringify(res.error));\n     }\n   } catch (error) {\n     notify(JSON.stringify(error));\n   }\n }\n\n const issueToken = async () => {\n   const api = new Api();\n   try{\n     const res = await api.issueToken();\n     console.log(res);\n     if(res.status === 'ok'){\n       notify(`issue a sudt token: ${res.data.sudt_token}`, 'success');\n     }else{\n       notify(JSON.stringify(res.error, null, 2));\n     }\n   } catch (error) {\n     notify(JSON.stringify(error));\n   }\n }\n\n  const clickUploadContract = async () => {\n    if(!inputFile)return notify(`input ref not found.`);\n    inputFile.current!.click();\n  } \n\n  const _deployContract = async (contractCode: string) => {\n    if(!contractCode)return notify(`upload contract binary file first!`);\n    if(!selectedAddress)return notify(`window.ethereum.selectedAddress not found.`);\n\n    const godwokenWeb3 = new Web3Api();\n    try {\n      const transactionParameters = {\n        nonce: '0x0', // ignored by MetaMask\n        gasPrice: '0x9184e72a000', // customizable by user during MetaMask confirmation.\n        gas: '0x2710', // customizable by user during MetaMask confirmation.\n        to: '0x', // Required except during contract publications.\n        from: window.ethereum.selectedAddress, // must match user's active address.\n        value: '0x00', // Only required to send ether to the recipient from the initiating external account.\n        data: contractCode, // Optional, but used for defining smart contract creation and interaction.\n        chainId: '0x3', // Used to prevent transaction reuse across blockchains. Auto-filled by MetaMask.\n      };\n      const txHash = await window.ethereum.request({\n        method: 'eth_sendTransaction',\n        params: [transactionParameters],\n      });\n      console.log(`txHash: ${txHash}`);\n      \n      await godwokenWeb3.waitForTransactionReceipt(txHash);\n\n      const txReceipt = await godwokenWeb3.getTransactionReceipt(txHash); \n      console.log(`txReceipt: ${JSON.stringify(txReceipt, null, 2)}`);\n\n      const contractAddr = txReceipt.contractAddress; \n      console.log(`contract address: ${contractAddr}`);\n\n      notify(`your contract address: ${contractAddr}`, 'success');\n      setDeployedContracts(oldArray => [...oldArray, contractAddr]);\n    } catch (error) {\n      console.log(error);\n      return notify(`could not finished signing process. \\n\\n ${JSON.stringify(error)}`);\n    }\n  }\n\n  const deployContract = async (e: any) => {\n    const codefile = e.target.files[0]; \n    setIsLoading(true);\n    const res: any = await readContractCode(codefile);\n    if(res.status !== 'ok'){\n      setIsLoading(false);\n      return notify(`can not read contract code from file.`);\n    };\n\n    const code_hex = res.data;\n    console.log('reading contract code hex:');\n    console.log(code_hex);\n    await _deployContract(code_hex);\n    setIsLoading(false);\n  }\n\n  const deployErc20ProxyContract = async () => {\n    if(!selectedAddress)return notify(`window.ethereum.selectedAddress not found.`);\n\n    const api = new Api();\n    const godwokenWeb3 = new Web3Api();\n    try {\n      const res: any = await api.deployErc20ProxyContract(selectedAddress); \n      if(res.status !== 'ok')\n        notify(JSON.stringify(res.error, null, 2));\n\n      const contract_code_with_constructor = res.data;\n      console.log(JSON.stringify(contract_code_with_constructor, null, 2));\n\n      try {\n        const transactionParameters = {\n          nonce: '0x0', // ignored by MetaMask\n          gasPrice: '0x9184e72a000', // customizable by user during MetaMask confirmation.\n          gas: '0x2710', // customizable by user during MetaMask confirmation.\n          to: '0x', // Required except during contract publications.\n          from: window.ethereum.selectedAddress, // must match user's active address.\n          value: '0x00', // Only required to send ether to the recipient from the initiating external account.\n          data: contract_code_with_constructor, // Optional, but used for defining smart contract creation and interaction.\n          chainId: '0x3', // Used to prevent transaction reuse across blockchains. Auto-filled by MetaMask.\n        };\n        const txHash = await window.ethereum.request({\n          method: 'eth_sendTransaction',\n          params: [transactionParameters],\n        });\n        console.log(`txHash: ${txHash}`);\n\n        await godwokenWeb3.waitForTransactionReceipt(txHash);\n\n        const txReceipt = await godwokenWeb3.getTransactionReceipt(txHash); \n        console.log(`txReceipt: ${JSON.stringify(txReceipt, null, 2)}`);\n\n        const contractAddr = txReceipt.contractAddress; \n        console.log(`contract address: ${contractAddr}`);\n\n        notify(`your contract address: ${contractAddr}`, 'success');\n        setDeployedContracts(oldArray => [...oldArray, contractAddr]);\n      } catch (error) {\n        console.log(error);\n        return notify(`could not finished signing process. \\n\\n ${JSON.stringify(error)}`);\n      }\n    } catch (error) {\n      notify(JSON.stringify(error));\n    } \n  }\n\n  const readContractCode = (codefile: Blob) => {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = (event: any) => {\n            const code_hex = `0x${event.target.result}`;\n            resolve({status:'ok', data: code_hex});\n        };\n        reader.onerror = (err) => {\n            resolve({status:'failed', error: err});\n        };\n        reader.onabort = () => {\n          resolve({status:'failed', error: 'user abort.'});\n        }\n        reader.readAsBinaryString(codefile);\n    });  \n  }\n\n  const displayShortEthAddress = (eth_address: string) => {\n    const length = eth_address.length;\n    if(length !== 42){\n      return eth_address;\n    }\n\n    return eth_address.slice(0,6) + '...' + eth_address.slice(length - 4);\n  }\n\n  const displayShortSudtToken = (sudt_token: string | undefined) => {\n    if(!sudt_token)\n      return 'undefined';\n\n    return sudt_token.slice(0, 6) + '...' + sudt_token.slice(sudt_token.length - 4);\n  }\n\n  \n\nconst sudt_token_info = `\nsymbol: MLMC\nsudt token: ${ displayShortSudtToken(sudtToken) }\ntotal amount: ${ utils.shannon2CKB(sudtTotalAmount || '') }\ndecimal places: 8 (same with CKB)\n`\n\n\n  return (\n    <div>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <NotifyPlace />\n\n          <Grid container spacing={3}>\n            <Grid item xs={12} style={styles.header}>\n              <MetamaskWallet onUpdateWalletAddress={updateWallet} triggerUpdateBalanceMethod={updateBalance} />\n            </Grid>\n          </Grid>\n\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <FreshButton text={\"Deposit CKB\"} onClick={deposit} custom_style={styles.button} />\n            </Grid>\n          </Grid>\n\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <FreshButton text={\"Deploy ETH Contract\"} isLoading={isLoading} onClick={clickUploadContract} custom_style={styles.button} />\n              <input\n                  type=\"file\"\n                  ref={inputFile}\n                  onChange={deployContract}\n                  hidden\n              />\n            </Grid>\n          </Grid>\n\n          <hr></hr>\n\n\n          <Grid container spacing={3}>\n            <Grid item xs={12} style={styles.contract_container}>\n              Contract Address: \n              <SyntaxHighlighter language=\"javascript\" style={gruvboxDark}>\n                {deployedContracts.length > 0 ? deployedContracts.join('\\n') : 'nothing.'}\n              </SyntaxHighlighter>\n            </Grid>\n          </Grid>\n\n          <hr></hr>\n\n\n\n          <div style={styles.placeholder_for_experimental}>\n            <hr style={{width: '100%'}}></hr>\n          </div>\n\n          <h4> Sudt Section (experimental) </h4>\n\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <div style={styles.balance}>Balance: <span>{sudtBalance} MLMC </span></div>\n            </Grid>\n          </Grid>\n\n          <hr></hr>\n\n         <Grid container spacing={5}>\n            <Grid item xs={12}>\n              <div style={styles.descrip_sudt}>\n                <p>you should issue sudt token first if sudt token total amount is 0.</p>\n                <p>depositting sudt by defaut will give you 400 sudt each time. and the capacity of ckb required is also 400 ckb, so the balance of your layer2 ckb will also increase. </p>\n              </div>\n            </Grid>\n          </Grid> \n\n          <Grid container spacing={3}>\n            <Grid item xs={12} style={styles.contract_container}>\n              <h5>My Little Meow Coin</h5>\n              <SyntaxHighlighter language=\"javascript\" style={gruvboxDark}>\n                {sudt_token_info}\n              </SyntaxHighlighter>\n            </Grid>\n          </Grid>\n\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <FreshButton text={\"Issue Sudt Token\"} onClick={issueToken} custom_style={styles.button} />\n            </Grid>\n          </Grid>\n\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <FreshButton text={\"Deposit Sudt\"} onClick={depositSudt} custom_style={styles.button} />\n            </Grid>\n          </Grid>\n\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <FreshButton text={\"Deploy Erc20-Proxy Contract\"} onClick={deployErc20ProxyContract} custom_style={styles.button} />\n            </Grid>\n          </Grid>\n\n        </header>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Home from './components/home/Home';\n\n\nexport default function MyRouter() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path='/'>\n          <Home></Home>\n        </Route>\n     </Switch> \n    </BrowserRouter>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MyRouter from './router';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MyRouter />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}