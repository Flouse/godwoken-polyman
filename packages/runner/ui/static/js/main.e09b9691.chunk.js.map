{"version":3,"sources":["utils/index.ts","api/index.ts","components/widget/common_style.ts","components/widget/notify.tsx","components/widget/metamask/icon.tsx","components/widget/utils.tsx","components/widget/fresh_button.tsx","api/web3.ts","components/widget/metamask/Wallet.tsx","components/widget/tabs/simpleTabs.tsx","components/widget/chainInfo/ChainInfo.tsx","components/widget/features/accounts.tsx","components/widget/contract-debugger/ContractDebugger.tsx","components/widget/features/contracts.tsx","components/widget/features/erc20ProxyDemo.tsx","components/home/Home.tsx","components/widget/godwokenInfo/SimpleJsonInfo.tsx","components/widget/godwokenInfo/GodwokenInfo.tsx","router.tsx","reportWebVitals.ts","index.tsx"],"names":["asyncSleep","ms","Promise","r","setTimeout","convertTimestamp","ts","Date","parseInt","toLocaleTimeString","hex2dec","num","BigInt","toString","dec2hex","shannon2CKB","JSBI","divide","CKB2shannon","isObjectInArray","item","arr","i","length","JSON","stringify","arrayBufferToBuffer","ab","buf","Buffer","alloc","byteLength","view","Uint8Array","get_env_mode","mode","readDataFromFile","codefile","resolve","reject","reader","FileReader","onload","event","data","target","result","status","onerror","err","error","onabort","readAsBinaryString","axios","defaults","withCredentials","Api","constructor","base_url","this","utils","config","development_server_url","production_server_url","getUrl","get","params","eth_address","to_id","amount","fee","post","contract_code","raw_l2tx","signature","type","l2_script_args","tx_hash","account_id","styles","page","maxWidth","margin","textAlign","content","width","marginTop","main_color","color","background_color","wide_card","padding","wide_card_title","blockquote","background","borderLeft","clear_path","clear","li","listStyleType","marginLeft","ul","paddingLeft","status_bar","justifyContent","status_bar_title","float","fontSize","fontWeight","status_bar_btn","marginRight","modal","maxHeight","overflowY","height","display","alignItems","paper","backgroundColor","border","boxShadow","outline","hidden_btn","cursor","single_line_code","borderRadius","explain_text","input_wrap","marginBottom","input","overflowX","verticalAlign","describe_img_wrapper","describe_img","describe_img_footnote","commomStyle","panel","toast","NotifyPlace","style","toastStyle","notify","message","success","warn","info","dark","MetaMaskIcon","name","svg","viewBox","defaultSize","Error","Icon","sx","props","ref","SvgIcon","children","displayName","memo","forwardRef","createIcon","d","fill","stroke","strokeLinecap","strokeLinejoin","commonStyle","loader","animation","btn","btndiv","btn_hover","Loader","FreshButton","setWidth","useState","setHeight","useRef","isLoadingMissed","undefined","isLoading","showLoader","setShowLoader","setIsLoading","isHover","setIsHover","useEffect","timeout","clearTimeout","fadeOutProps","useSpring","opacity","fadeInProps","toogleHover","final_style","custom_style","onClick","async","onMouseEnter","onMouseLeave","div","text","Web3Api","url","web3_server_url","jsonrpc","id","method","headers","loopInterval","index","tx_receipt","getTransactionReceipt","console","log","util","wallet_container","maxHeigth","status_item","boder","balance","dark_green","Wallet","onUpdateWalletAddress","updateChainId","getChainIdCallback","updateBalanceTrigger","chainId","setChainId","selectedAddress","setSelectedAddress","metamaskStatus","setMetamaskStatus","chainIdStatus","setChainIdStatus","networkStatus","setNetworkStatus","setBalance","fetchChainId","current_chain_id","window","ethereum","request","isMetaMaskOnborad","MetaMaskOnboarding","isMetaMaskInstalled","checkChainIdIsOk","api","res","getChainId","chain_id","listenForChainIdChanged","on","_chainId","location","reload","listenForAccountChanged","account","listenForNetworkChanged","connectMetamask","getBalance","web3Api","newBalance","isConnected","init","slice","displayShortEthAddress","ckb_balance","eth","parseFloat","toFixed","toEthBalance","TabPanel","value","other","role","hidden","minHeight","Box","p","Typography","a11yProps","useStyles","makeStyles","theme","root","flexGrow","palette","grey","common","black","SimpleTabs","classes","setValue","React","names","tabs","tabsNameJsx","map","Tab","label","tabPanelJsx","tab","className","Paper","square","Tabs","onChange","newValue","centered","ChainInfo","rollupTypeHash","setRollupTypeHash","ethAccountLockConfig","setEthAccountLockConfig","creatorId","setCreatorId","contractTypeHash","setContractTypeHash","serverConfig","setServerConfig","getCreatorId","getRollupTypeHash","getEthAccountLockConfig","getPolyjucieContractTypeHash","getPolyjuiceContractValidatorTypeHash","getServerConfig","AllApis","createData","chainInfoRows","code_hash","chainInfoTable","TableContainer","component","Table","TableHead","TableRow","TableBody","row","TableCell","scope","createSystemWalletData","addr","pk","systemWalletRows","miner_ckb_devnet_addr","miner_private_key","user_ckb_devnet_addr","user_private_key","systemWalletTable","ApiInfo","Grid","container","spacing","xs","language","gruvboxDark","href","createStyles","formControl","minWidth","selectEmpty","formControlButton","paddingTop","hint","freshBtn","Accounts","addressVec","hints","setHints","inputEthAddressRef","addressItems","MenuItem","_deposit","deposit","ethAddress","variant","gutterBottom","FormControl","InputLabel","Select","labelId","TextField","inputRef","current","Web3EthAbi","require","method_item","method_box","method_name","return_value","param_input","submit_btn","select_abi_file","contract_addr_input_container","contract_addr_input","setting_container","log_container","log_container_title","log_main_area","SIMPLE_STORAGE_ABI","ContractDebbuger","rollup_type_hash","eth_account_lock_code_hash","eth_account_lock_hash_type","godwoken_config","abi","setAbi","contractAddr","setContractAddr","callLogs","setCallLogs","init_web3_provider","godwoken_web3_rpc_url","provider_config","ethAccountLockCodeHash","abiItems","web3Url","provider","PolyjuiceHttpProvider","Web3","placeholder","files","parse","Array","isArray","readContractAbiFile","filter","item_index","input_params","output_values","payable_value_in_wei","hanleChange","assemble_call_view_tx","encodeFunctionCall","eth_tx","gasPrice","gas","to","repeat","from","web3","call","decode_res_arr","decodeParameters","outputs","o","__length__","oldArray","assemble_send_payable_tx","payable","txReceipt","sendTransaction","transactionHash","toWei","inputs","push","abi_item","stateMutability","assemble_tx","method_list","common_styles","header","address","button","contract_container","contract_li","descrip_sudt","placeholder_for_experimental","Contracts","inputFile","deployedContracts","setDeployedContracts","_deployContract","contractCode","transactionObject","nonce","contractAddress","click","e","contractBytecode","bytecode","readContractFileAsArtifacts","code_hex","readContractFileAsBinary","join","Divider","hash_type","Erc20ProxyDemo","sudtBalance","setSudtBalance","sudtToken","setSudtToken","sudtTotalAmount","setSudtTotalAmount","erc20ProxyContractAddress","setErc20ProxyContractAddress","getSudtBalance","getSudtToken","getSudtTotalAmount","sudt_token","getSudtTokenTotalAmount","total_amount","sudt_token_info","issueToken","deposit_sudt","l2_sudt_script_hash","deployErc20ProxyContract","contract_code_with_constructor","Home","setUpdateBalanceTrigger","tabsContent","new_wallet_addr","SimpleJsonInfo","title","jsonInfo","displayJsonInfo","setDisplayJsonInfo","GodwokenInfo","scripts","setScripts","setConfig","fetchInfo","getGodwokenScriptDeployResultFile","getGodwokenConfigFile","MyRouter","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4IAAA,4EAGO,MAqDMA,EAAa,CAACC,EAAK,IACrB,IAAIC,SAASC,GAAMC,WAAWD,EAAGF,KAsC7B,KACXI,iBA7F6BC,GACZ,kBAAPA,EACC,IAAIC,KAAKC,SAASF,IAAKG,qBAEvB,IAAIF,KAAKD,GAAIG,qBA0FxBC,QAtFqBC,GACdC,OAAOD,GAAKE,SAAS,IAsF5BC,QAnFoBH,GACbC,OAAOD,GAAKE,SAAS,IAmF5BE,YAhFwBJ,GAIjBK,IAAKC,OAAOD,IAAKJ,OAAOD,GAAMK,IAAKJ,OAAO,MAAYC,SAAS,IA6EtEK,YA1EwBP,GACjBC,OAAOD,GAAKE,SAAS,IAAM,WA0ElCM,gBApE2B,CAACC,EAAcC,KAC3C,IAAI,IAAIC,EAAE,EAAEA,EAAED,EAAIE,OAAOD,IACpB,GAAIE,KAAKC,UAAUJ,EAAIC,MAAQE,KAAKC,UAAUL,GAC1C,OAAO,EAGhB,OAAO,GA+DNM,oBA5DgCC,IAGhC,IAFA,IAAIC,EAAMC,EAAOC,MAAMH,EAAGI,YACtBC,EAAO,IAAIC,WAAWN,GACjBL,EAAI,EAAGA,EAAIM,EAAIL,SAAUD,EAChCM,EAAIN,GAAKU,EAAKV,GAEhB,OAAOM,GAuDPM,aApDwB,IAER,gBAATC,OAAyB,cAAgB,aAmDhDnC,WAAYA,EACZoC,iBA7C6BC,GACtB,IAAInC,SAAQ,CAACoC,EAASC,KACzB,MAAMC,EAAS,IAAIC,WACnBD,EAAOE,OAAUC,IACb,MAAMC,EAAOD,EAAME,OAAOC,OAC1BR,EAAQ,CAACS,OAAO,KAAMH,KAAMA,KAEhCJ,EAAOQ,QAAWC,IACdX,EAAQ,CAACS,OAAO,SAAUG,MAAOD,KAErCT,EAAOW,QAAU,KACfb,EAAQ,CAACS,OAAO,SAAUG,MAAO,iBAEnCV,EAAOY,mBAAmBf,S,grBCnElCgB,IAAMC,SAASC,iBAAkB,EAgMlBC,MA9Lf,MAIIC,cAAc,KAFdC,cAEa,EACTC,KAAKD,SAAoC,gBAAzBE,IAAM1B,eAAmC2B,EAAOC,uBAAyBD,EAAOE,sBAGpGC,SACI,OAAOL,KAAKD,SAGK,wBAKjB,aAJgBL,IAAMY,IAAK,GAAEN,KAAKD,8BAA+B,CAC7DQ,OAAO,MAGAtB,KAGwB,0CAKnC,aAJgBS,IAAMY,IAAK,GAAEN,KAAKD,kDAAmD,CACjFQ,OAAO,MAGAtB,KAGY,8BAKvB,aAJgBS,IAAMY,IAAK,GAAEN,KAAKD,+BAAgC,CAC9DQ,OAAO,MAGAtB,KAGQ,0BAKnB,aAJgBS,IAAMY,IAAK,GAAEN,KAAKD,gCAAiC,CAC/DQ,OAAO,MAGAtB,KAGc,gCAKzB,aAJgBS,IAAMY,IAAK,GAAEN,KAAKD,iCAAkC,CAChEQ,OAAO,MAGAtB,KAGC,iBAACuB,GAMb,aALgBd,IAAMY,IAAK,GAAEN,KAAKD,8BAA+B,CAC7DQ,OAAO,CACHC,YAAaA,MAGVvB,KAGK,qBAACuB,GAMjB,aALgBd,IAAMY,IAAK,GAAEN,KAAKD,mCAAoC,CAClEQ,OAAO,CACHC,YAAaA,MAGVvB,KAGC,mBAKZ,aAJgBS,IAAMY,IAAK,GAAEN,KAAKD,uBAAwB,CACtDQ,OAAO,MAGAtB,KAGG,qBAId,aAHgBS,IAAMY,IAAK,GAAEN,KAAKD,0BAA2B,KAGlDd,KAGc,gCAIzB,aAHgBS,IAAMY,IAAK,GAAEN,KAAKD,uCAAwC,KAG/Dd,KAGF,cAACuB,GAMV,aALgBd,IAAMY,IAAK,GAAEN,KAAKD,mBAAoB,CAClDQ,OAAO,CACHC,YAAaA,MAGVvB,KAGG,mBAACuB,GAMf,aALgBd,IAAMY,IAAK,GAAEN,KAAKD,wBAAyB,CACvDQ,OAAO,CACHC,YAAaA,MAGVvB,KAGH,eAACwB,EAAeC,EAAgBC,EAAaH,GASzD,aARgBd,IAAMkB,KAAM,GAAEZ,KAAKD,oBAAqB,CACtDd,KAAM,CACJwB,MAAOA,EACPC,OAAQA,EACRC,IAAKA,EACLH,YAAaA,MAGNvB,KAGS,qBAAC4B,EAAuBL,GAOxC,aANgBd,IAAMkB,KAAM,GAAEZ,KAAKD,2BAA4B,CAC3Dd,KAAK,CACD4B,cAAeA,EACfL,YAAaA,MAGVvB,KAGe,+BAACuB,GAM3B,aALgBd,IAAMkB,KAAM,GAAEZ,KAAKD,uCAAwC,CACvEd,KAAK,CACDuB,YAAaA,MAGVvB,KAGS,2BAKpB,aAJgBS,IAAMkB,KAAM,GAAEZ,KAAKD,gCAAiC,CAChEd,KAAK,MAGEA,KAGQ,wBAAC6B,EAA4BC,EAAmBC,EAAcC,GASjF,aARgBvB,IAAMkB,KAAM,GAAEZ,KAAKD,sBAAuB,CACtDd,KAAK,CACD6B,SAAUA,EACVC,UAAWA,EACXC,KAAMA,EACNC,eAAgBA,MAGbhC,KAGY,4BAACiC,GAMxB,aALgBxB,IAAMY,IAAK,GAAEN,KAAKD,0BAA2B,CACzDQ,OAAO,CACHW,QAASA,MAGNjC,KAGiB,iCAACkC,GAM7B,aALgBzB,IAAMY,IAAK,GAAEN,KAAKD,2CAA4C,CAC1EQ,OAAO,CACHY,WAAYA,MAGTlC,KAGC,mBAMZ,aALgBS,IAAMY,IAAK,GAAEN,KAAKD,wBAAyB,CACvDQ,OAAO,MAIAtB,O,sBCnEJmC,MA9HA,CACXC,KAAM,CACFC,SAAU,QACVC,OAAQ,OACRC,UAAW,UAEfC,QAAS,CACLC,MAAO,OACPC,UAAW,OACXH,UAAW,QAEfI,WAAY,CACRC,MAAO,WAEXC,iBAAkB,CACdD,MAAO,WAEXE,UAAW,CACPC,QAAS,OACTR,UAAW,QAEfS,gBAAiB,CACbJ,MAAO,UACPL,UAAW,UAEfU,WAAY,CACRC,WAAY,UACZC,WAAY,qBACZb,OAAQ,aACRS,QAAS,UACTH,MAAO,SAEXQ,WAAY,CACRC,MAAO,QAEXC,GAAI,CACAC,cAAe,OACfC,WAAY,KAEhBC,GAAI,CACAF,cAAe,OACfG,YAAa,KAEjBC,WAAY,CACRlB,MAAO,OACPM,QAAS,MACTT,OAAQ,WACRe,MAAO,OACPO,eAAgB,UAEpBC,iBAAkB,CACdC,MAAO,OACPC,SAAU,OACVC,WAAY,UAEhBC,eAAgB,CACZH,MAAO,QACPvB,UAAW,SACX2B,YAAa,QAEjBC,MAAO,CACL9B,SAAU,QACV+B,UAAW,MACXC,UAAW,SACXtB,QAAS,OACTuB,OAAQ,OACRC,QAAS,OACTC,WAAY,SACZZ,eAAgB,SAChBtB,OAAQ,UAEVmC,MAAO,CACLC,gBAAiB,OACjBC,OAAQ,iBACRC,UAAW,OACX7B,QAAS,OACTN,MAAO,OACPoC,QAAS,QAEXC,WAAY,CACVrC,MAAM,OACNkC,OAAO,IACPD,gBAAiB,gBACjBJ,OAAQ,IACRS,OAAQ,QAEVC,iBAAkB,CACd9B,WAAY,QACZN,MAAO,OACPG,QAAS,MACTkC,aAAc,OAElBC,aAAc,CACVnB,SAAU,OACVnB,MAAO,OACPN,OAAQ,QAEZ6C,WAAY,CACRpC,QAAS,UACTqC,aAAc,OACdb,QAAS,QACTrB,WAAY,SAEhBmC,MAAO,CACH5C,MAAO,OACPoC,QAAS,OACTd,SAAU,OACVY,OAAQ,IACRW,UAAW,SACXC,cAAe,eAEnBC,qBAAsB,CAClBnD,SAAU,QACVC,OAAQ,aAEZmD,aAAc,CACVhD,MAAO,OACP6B,OAAQ,OACRpB,WAAY,WAEhBwC,sBAAuB,CACnBnD,UAAW,SACXwB,SAAU,S,OCpHlB,MAAM5B,EAAS,IAAIwD,EACfC,MAAO,GAGPC,MAAO,CACH9C,QAAS,OACTgB,SAAU,SAKH,SAAS+B,IACpB,OACI,8BACI,cAAC,IAAD,CAAgBC,MAAO5D,EAAOyD,MAAOI,WAAY7D,EAAO0D,UAOpE,MAAMI,EAAS,CAACC,EAAiBnE,KAC7B,OAAQA,GACJ,IAAK,QACD8D,IAAMvF,MAAM4F,GACZ,MAEJ,IAAK,UACDL,IAAMM,QAAQD,GACd,MAEJ,IAAK,UACDL,IAAMO,KAAKF,GACX,MAEJ,IAAK,OACDL,IAAMQ,KAAKH,GACX,MAEJ,IAAK,OACDL,IAAMS,KAAKJ,GACX,MAEJ,QACIL,IAAMvF,MAAM4F,K,sBChDjB,MAAMK,ECWN,SACHC,EACAC,EACAC,EACAC,GAEA,MAAOlE,EAAO6B,GAAUqC,GAAe,GACvC,GAAIlE,IAAU6B,GAA2B,kBAAV7B,EAAoB,MAAM,IAAImE,MAAM,kDACnE,MAAMC,EAAO,UAAc,GAAEC,KAAOC,GAAcC,GAC9C,MAAMjB,EAAQY,EAAc,CAAElE,QAAO6B,YAAWwC,GAAOA,EACvD,OAAO,cAACG,EAAA,EAAD,CAASP,QAASA,KAAaK,EAAOC,IAAKA,EAAKE,SAAUT,EAAKK,GAAIf,KAG9E,OADAc,EAAKM,YAAe,SAAQX,KACrBY,eAAKC,qBAAWR,IDxBCS,CACxB,WACA,qCACI,sBACIC,EAAE,+GACFC,KAAK,SAET,sBACID,EAAE,+CACFC,KAAK,UACLC,OAAO,UACPC,cAAc,QACdC,eAAe,UAEnB,sBACIJ,EAAE,0KACFC,KAAK,UACLC,OAAO,UACPC,cAAc,QACdC,eAAe,UAEnB,sBACIJ,EAAE,+NACFC,KAAK,UACLC,OAAO,UACPC,cAAc,QACdC,eAAe,UAEnB,sBACIJ,EAAE,2HACFC,KAAK,UACLC,OAAO,UACPC,cAAc,QACdC,eAAe,UAEnB,sBACIJ,EAAE,8FACFC,KAAK,UACLC,OAAO,UACPC,cAAc,QACdC,eAAe,UAEnB,sBACIJ,EAAE,yOACFC,KAAK,UACLC,OAAO,UACPC,cAAc,QACdC,eAAe,UAEnB,sBACIJ,EAAE,uNACFC,KAAK,UACLC,OAAO,UACPC,cAAc,QACdC,eAAe,UAEnB,sBACIJ,EAAE,sIACFC,KAAK,UACLC,OAAO,UACPC,cAAc,QACdC,eAAe,UAEnB,sBACIJ,EAAE,0IACFC,KAAK,UACLC,OAAO,UACPC,cAAc,QACdC,eAAe,UAEnB,sBACIJ,EAAE,0FACFC,KAAK,UACLC,OAAO,UACPC,cAAc,QACdC,eAAe,UAEnB,sBACIJ,EAAE,4PACFC,KAAK,UACLC,OAAO,UACPC,cAAc,QACdC,eAAe,UAEnB,sBACIJ,EAAE,oRACFC,KAAK,UACLC,OAAO,UACPC,cAAc,QACdC,eAAe,aAGvB,a,6BE5EJ,MAAMxF,EAAS,IAAIyF,EACfC,OAAQ,CACJlD,OAAQ,oCACRxB,WAAY,YACZ2E,UAAW,0BACX7C,aAAc,MACdxC,MAAO,OACP6B,OAAQ,OACRhC,OAAQ,UAEZyF,IAAK,CACDhF,QAAS,cACTgB,SAAU,OACVnB,MAAO,QACPqC,aAAc,MACdN,OAAQ,aAAeiD,EAAYjF,WAAWC,MAC9CiC,QAAQ,OACRH,gBAAiB,sBACjBK,OAAQ,WAEZiD,OAAQ,CACJzD,QAAS,OACTX,eAAgB,SAChBY,WAAY,SACZ/B,MAAO,OACP6B,OAAQ,QAEZ2D,UAAW,CACPlF,QAAS,cACTgB,SAAU,OACVnB,MAAO,QACPqC,aAAc,MACdN,OAAQ,aAAeiD,EAAYjF,WAAWC,MAC9CiC,QAAQ,OACRH,gBAAiBkD,EAAYjF,WAAWC,MACxCmC,OAAQ,YAIVmD,EAAS,IAAM,qBAAKnC,MAAO5D,EAAO0F,SAEzB,SAASM,EAAYpB,GAIhC,MAAOtE,EAAO2F,GAAYC,mBAAS,IAC5B/D,EAAQgE,GAAaD,mBAAS,GAC/BrB,EAAMuB,iBAA0B,MAGhCC,OAAsCC,IAApB1B,EAAM2B,WAEvBC,EAAYC,GAAiBP,oBAAS,IACtCK,EAAWG,GAAgBR,oBAAUG,GAA0BzB,EAAM2B,YACrEI,EAASC,GAAcV,oBAAS,GAQvCW,qBAAU,KASN,QARuBP,IAApB1B,EAAM2B,WACPG,EAAa9B,EAAM2B,WAEjBA,GACFE,GAAc,IAIXF,GAAaC,EAAY,CAC5B,MAAMM,EAAUzL,YAAW,KACzBoL,GAAc,KACb,KAEH,MAAO,KACLM,aAAaD,OAGhB,CAAClC,EAAM2B,UAAWA,EAAWC,IAGlC,MAAMQ,EAAeC,YAAU,CAAEC,QAASV,EAAa,EAAI,IACrDW,EAAcF,YAAU,CAAEC,QAASV,EAAa,EAAI,IAapDY,EAAc,KAChBR,GAAYD,IAYVU,EAAc,IAFF,IADEV,EAAU3G,EAAO8F,UAAY9F,EAAO4F,OANvCtF,GAAS6B,EACxB,CACE7B,MAAQ,GAAEA,MACV6B,OAAS,GAAEA,OAEb,OAGqC,cAAvByC,EAAM0C,aAA+B,GAAK1C,EAAM0C,cAGhE,OACE,wBAAQ1D,MAAOyD,EAAaE,QAzDNC,UACnBnB,GAAgBK,GAAa,SAC1B9B,EAAM2C,UACTlB,GAAgBK,GAAa,IAsDsBe,aAAcL,EAAaM,aAAcN,EAAavC,IAAKA,EAAjH,SACC2B,EACK,cAAC,IAASmB,IAAV,CAAc/D,MAAOoD,EAArB,SACE,cAACjB,EAAD,MAGF,cAAC,IAAS4B,IAAV,CAAc/D,MAAOuD,EAArB,SAAmCvC,EAAMgD,S,0DCrIrDtJ,IAAMC,SAASC,iBAAkB,EAElB,MAAMqJ,EAIjBnJ,cAAc,KAFdoJ,SAEa,EACTlJ,KAAKkJ,IAAMhJ,EAAOiJ,gBAGY,qCAYhC,aAXqBzJ,IAAMkB,KAAKZ,KAAKkJ,IAAK,CACtCE,QAAS,MACTC,IAAM,IAAIzM,KACV0M,OAAQ,oCACR/I,OAAQ,IACT,CACGgJ,QAAS,CACP,eAAgB,uBAIRtK,KAIA,qBAYhB,aAXqBS,IAAMkB,KAAKZ,KAAKkJ,IAAK,CACtCE,QAAS,MACTC,IAAM,IAAIzM,KACV0M,OAAQ,oBACR/I,OAAQ,IACT,CACGgJ,QAAS,CACP,eAAgB,uBAIRtK,KAGF,mBAYd,aAXqBS,IAAMkB,KAAKZ,KAAKkJ,IAAK,CACtCE,QAAS,MACTC,IAAM,IAAIzM,KACV0M,OAAQ,cACR/I,OAAQ,IACT,CACGgJ,QAAS,CACP,eAAgB,uBAIRtK,KAGF,iBAACuB,GAYb,aAXqBd,IAAMkB,KAAKZ,KAAKkJ,IAAK,CACtCE,QAAS,MACTC,IAAM,IAAIzM,KACV0M,OAAQ,iBACR/I,OAAQ,CAACC,EAAa,YACvB,CACG+I,QAAS,CACP,eAAgB,uBAIRtK,KAAKE,OAGE,4BAAC+B,GAWxB,aAVqBxB,IAAMkB,KAAKZ,KAAKkJ,IAAK,CACtCE,QAAS,MACTC,IAAM,IAAIzM,KACV0M,OAAQ,4BACR/I,OAAQ,CAACW,IACV,CACGqI,QAAS,CACP,eAAgB,uBAGRtK,KAAKE,OAGM,gCAAC+B,EAAiBgH,EAAkB,IAAKsB,EAAe,GACrF,IAAK,IAAIC,EAAQ,EAAGA,EAAQvB,EAASuB,GAASD,EAAc,CAExD,MAAME,QAAmB1J,KAAK2J,sBAC5BzI,GAMF,GAHA0I,QAAQC,IAAK,iCAAgC3I,iBAAuBuI,mBAC9DK,IAAKzN,WAA0B,IAAfmN,GAEH,OAAfE,EACF,OAGJ,MAAM,IAAI7D,MAAO,mCAAkC3E,QAAcgH,cC3FzE,MAAM9G,EAAS,CACb2I,iBAAkB,CAChBzI,SAAU,QACV0I,UAAW,OACXzI,OAAQ,YACRiC,QAAS,OACTxB,QAAS,MACTyB,WAAY,SACZS,aAAc,OACdrB,eAAgB,SAChBc,gBAAiB,qBAEnBvE,OAAQ,CACN4D,SAAU,OACVnB,MAAO,OACPN,OAAQ,QAEV0I,YAAa,CACXC,MAAO,iBACPlI,QAAS,MACTmB,YAAa,QAEfgH,QAAS,CACPtI,MAAO,aACPmB,SAAU,QAEZoH,WAAY,CACVvI,MAAO,YAiBI,SAASwI,EAAQrE,GAE5B,MAAM,sBAAEsE,EAAuBC,cAAeC,GAAuBxE,EACrE,IAAI,qBAAEyE,GAAyBzE,EAE/B,MAAO0E,EAASC,GAAcrD,sBACvBsD,EAAiBC,GAAsBvD,sBACvCwD,EAAgBC,GAAqBzD,sBACrC0D,EAAeC,GAAoB3D,sBACnC4D,EAAeC,GAAoB7D,oBAAkB,IACrD6C,EAASiB,GAAc9D,mBAAiB,KAgCzC+D,GA9BgD,IACVjK,EAAOgJ,WAAWvI,MAAU,IACT,IACbT,EAAOgJ,WAAWvI,MAAU,IA2BzD+G,UACnB,MAAM0C,QAAyBC,OAAOC,SAASC,QAAQ,CAAEnC,OAAQ,gBAKjE,aAJMqB,EAAWW,GACdd,GACDA,EAAmBc,GAEdA,IAGHI,EAAoB9C,SACpB+C,IAAmBC,6BACfb,EAAkB,cACjB,UAEDA,EAAkB,kBACjB,GAILc,EAAmBjD,UACrB,IACE,MAAM0C,QAAyBD,IAC/BzB,QAAQC,IAAK,qBAAoByB,KACjC,MAAMQ,EAAM,IAAIjM,EACVkM,QAAYD,EAAIE,aACtBpC,QAAQC,IAAIkC,GACZ,MAAME,EAAWF,EAAI9M,KACrB,OAAGqM,IAAqBW,GACtBrC,QAAQrK,MAAO,+BAA8B+L,4BAA2CW,WAClFhB,GAAiB,IAEhB,UAEHA,GAAiB,IAChB,GACP,MAAO1L,GAEP,OADA2F,EAAOrH,KAAKC,UAAUyB,EAAO,KAAM,KAC5B,IAIP2M,EAA0B,KAC5BX,OAAOC,SAASW,GAAG,gBACnB,SAA4BC,GAC1BxC,QAAQC,IAAI,qBACZc,EAAWyB,GACXb,OAAOc,SAASC,aAIhBC,EAA0B,KAC9BhB,OAAOC,SAASW,GAAG,mBACnB,SAA8BK,GACzBA,EAAQ5O,OAAS,EAClBiN,EAAmB2B,EAAQ,KAE3B3B,OAAmBnD,GACnBqD,EAAkB,aAClB7F,EAAO,sCAMPuH,EAA0B,KAC9BlB,OAAOC,SAASW,GAAG,WACnB,WACEvC,QAAQC,IAAI,cACZsB,GAAiB,MAGnBI,OAAOC,SAASW,GAAG,cACnB,WACEhB,GAAiB,OAIfuB,EAAkB9D,UACtB,UACQ2C,OAAOC,SAASC,QAAQ,CAAEnC,OAAQ,wBACxCyB,EAAkB,aAClBF,EAAmBU,OAAOC,SAASZ,iBACnC,MAAOrL,GACP2F,EAAOrH,KAAKC,UAAUyB,EAAO,KAAM,IACnCwL,EAAkB,kBAClBnB,QAAQrK,MAAMA,KAIZoN,EAAa/D,UACjB,IAAIgC,EAAgB,OACpB,MAAMgC,EAAU,IAAI3D,EACpB,IACE,MAAMhK,QAAa2N,EAAQD,WAAW/B,GACtC,IAAI3L,EACF,OAAO2K,QAAQC,IAAK,0BAEtB,MAAMgD,EAAa5P,OAAOgC,GAAM/B,WAChC,GAAGiN,IAAYlK,IAAM7C,YAAYyP,GAAY,CAE3CjD,QAAQC,IAAI,6DAENxN,YAAW,KACjB,MAAM4C,QAAa2N,EAAQD,WAAW/B,GACtC,IAAI3L,EACF,OAAO2K,QAAQC,IAAK,0BAEtB,MAAMgD,EAAa5P,OAAOgC,GAAM/B,WAGhC,aAFMkO,EAAWnL,IAAM7C,YAAYyP,SACnCjD,QAAQC,IAAI,wBAAyB5J,IAAM7C,YAAYyP,GAAa,UAIhEzB,EAAWnL,IAAM7C,YAAYyP,IACnCjD,QAAQC,IAAI,wBAAyB5J,IAAM7C,YAAYyP,GAAa,IACpE,MAAOtN,GACPqK,QAAQC,IAAK,sBACbD,QAAQC,IAAItK,GACZ2F,EAAOrH,KAAKC,UAAUyB,MAa1B0I,qBAAW,KA5JEW,WACT,IAAK8C,IAED,MADAxG,EAAO,4BACD,IAAIW,MAAM,4BAGhB0F,OAAOC,SAASsB,eAClB3B,GAAiB,SAGbE,UAEAQ,IAENK,IACAK,IACAE,IAEAC,KA2IAK,GACAJ,MACD,IAEH1E,qBAAU,KACR0E,MACC,CAAClC,IAEJxC,qBAAW,KACNqC,GACDA,EAAsBM,GAExB+B,MACC,CAAC/B,IAUJ,OACI,gCACE,sBAAK5F,MAAO5D,EAAO2I,iBAAnB,UACE,cAACvE,EAAD,IACA,cAAC4B,EAAD,CACEsB,aAAc,CAAC1F,SAAU,OAAQC,WAAY,SAAUW,OAAQ,QAC/DoF,KAdsBxI,KAC9B,MAAM5C,EAAS4C,EAAY5C,OAC3B,OAAc,KAAXA,EACM4C,EAEFA,EAAYwM,MAAM,EAAE,GAAK,MAAQxM,EAAYwM,MAAMpP,EAAS,IASpDqP,CAAuBrC,GAAoC,kBAClEjC,QAAUiC,EAAkB,aAAe8B,OAW/C,8BACE,sBAAK1H,MAAO5D,EAAO+I,QAAnB,cAA6B,iCAAOA,EAAP,UApDf+C,KACpB,MACMC,EADMC,WAAWF,GACLE,WAAW,eAC7B,OAAGD,EAAM,EACAA,EAAIE,QAAQ,GAAKH,EAAYtP,OAAS,GAEtCuP,EAAIE,QAAQ,IA8CqCC,CAAanD,GAApC,sB,iECjQzC,SAASoD,EAASvH,GAChB,MAAM,SAAEG,EAAF,MAAYqH,EAAZ,MAAmB/D,KAAUgE,GAAUzH,EAE7C,OACE,qBACE0H,KAAK,WACLC,OAAQH,IAAU/D,EAClBJ,GAAK,mBAAkBI,IACvB,kBAAkB,cAAaA,IAC/BzE,MAAO,CACL4I,UAAW,YAETH,EARN,SAUGD,IAAU/D,GACT,cAACoE,EAAA,EAAD,CAAKC,EAAG,EAAR,SACE,cAACC,EAAA,EAAD,UAAa5H,QAOvB,SAAS6H,EAAUvE,GACjB,MAAO,CACLJ,GAAK,cAAaI,IAClB,gBAAkB,mBAAkBA,KAIxC,MAAMwE,EAAYC,aAAYC,IAAD,CAC3BC,KAAM,CACJC,SAAU,EACV1K,gBAAiBwK,EAAMG,QAAQC,KAAK,KACpC1M,MAAOsM,EAAMG,QAAQE,OAAOC,WASjB,SAASC,EAAW1I,GACjC,MAAM2I,EAAUV,KACTT,EAAOoB,GAAYC,IAAMvH,SAAS,IAEnC,MAAEwH,EAAF,KAASC,GAAS/I,EAElBgJ,EAAcF,EAAMG,KAAI,CAACxJ,EAAMgE,IAC5B,cAACyF,EAAA,EAAD,CAAKC,MAAO1J,KAAUuI,EAAUvE,OAGnC2F,EAAcL,EAAKE,KAAI,CAACI,EAAK5F,IAE/B,cAAC8D,EAAD,CAAUC,MAAOA,EAAO/D,MAAOA,EAA/B,SACG4F,MASP,OACE,sBAAKC,UAAWX,EAAQP,KAAxB,UACE,cAACmB,EAAA,EAAD,CAAOC,QAAM,EAAb,SACE,cAACC,EAAA,EAAD,CACEjC,MAAOA,EACPkC,SATa,CAAC1Q,EAA8B2Q,KAClDf,EAASe,IASH,aAAW,sBACXC,UAAU,EAJZ,SAMGZ,MAGHI,K,uFCvER,MAAMnB,GAAYC,YAAW,CAC3BE,KAAM,CACJ5M,UAAW,UASA,SAASqO,KACtB,MAAMlB,EAAUV,MAET6B,EAAgBC,GAAqBzI,sBACrC0I,EAAsBC,GAC3B3I,sBACKoD,EAASC,GAAcrD,sBACvB4I,EAAWC,GAAgB7I,sBAC3B8I,EAAkBC,GAAuB/I,sBACzCgJ,EAAcC,GAAmBjJ,qBAmGxCW,qBAAU,KAjGSW,WACjB,MAAMgE,EAAU,IAAI3D,EACpB,IACE,MAAMhK,QAAa2N,EAAQZ,aAE3B,GADApC,QAAQC,IAAI5K,GACRA,EAAKM,MAAO,OAAO2F,EAAQ,2BAA2BjG,EAAKM,aAEzDoL,EAAW1L,EAAKE,QACtB,MAAOI,GACPqK,QAAQC,IAAK,sBACbD,QAAQC,IAAItK,GACZ2F,EAAO3F,EAAM4F,WAuFf6G,GAnFmBpD,WACnB,MAAMgE,EAAU,IAAI3D,EACpB,IACE,MAAMhK,QAAa2N,EAAQ4D,eAE3B,GADA5G,QAAQC,IAAI5K,GACRA,EAAKM,MAAO,OAAO2F,EAAQ,6BAA6BjG,EAAKM,aAE3D4Q,EAAalR,EAAKE,QACxB,MAAOI,GACPqK,QAAQC,IAAK,wBACbD,QAAQC,IAAItK,GACZ2F,EAAO3F,EAAM4F,WAyEfqL,GAlDwB5H,WACxB,MAAMkD,EAAM,IAAIjM,EAChB,IACE,MAAMkM,QAAYD,EAAI2E,oBACtB,GAAmB,OAAf1E,EAAI3M,OACN,OAAO8F,EACJ,mCAAkCrH,KAAKC,UAAUiO,EAAIxM,UAE1DwQ,EAAkBhE,EAAI9M,MACtB,MAAOM,GACPqK,QAAQC,IAAK,8BACbD,QAAQC,IAAItK,GACZ2F,EAAO3F,EAAM4F,WAuCfsL,GAnC8B7H,WAC9B,MAAMkD,EAAM,IAAIjM,EAChB,IACE,MAAMkM,QAAYD,EAAI4E,0BACtB,GAAmB,OAAf3E,EAAI3M,OACN,OAAO8F,EACJ,0CAAyCrH,KAAKC,UAAUiO,EAAIxM,UAEjE0Q,EAAwBlE,EAAI9M,MAC5B,MAAOM,GACPqK,QAAQC,IAAK,8BACbD,QAAQC,IAAItK,GACZ2F,EAAO3F,EAAM4F,WAwBfuL,GAvE4C9H,WAC5C,MAAMgE,EAAU,IAAI3D,EACpB,IACE,MAAMhK,QAAa2N,EAAQ+D,+BAE3B,GADA/G,QAAQC,IAAI5K,GACRA,EAAKM,MACP,OAAO2F,EACJ,yDACDjG,EAAKM,aAGH8Q,EAAoBpR,EAAKE,QAC/B,MAAOI,GACPqK,QAAQC,IAAK,wBACbD,QAAQC,IAAItK,GACZ2F,EAAO3F,EAAM4F,WAyDfyL,GArBsBhI,WACtB,MAAMkD,EAAM,IAAIjM,EAChB,IACE,MAAMkM,QAAYD,EAAI+E,kBACtB,GAAmB,OAAf9E,EAAI3M,OACN,OAAO8F,EACJ,gCAA+BrH,KAAKC,UAAUiO,EAAIxM,UAEvDgR,EAAgBxE,EAAI9M,MACpB,MAAOM,GACPqK,QAAQC,IAAK,2BACbD,QAAQC,IAAItK,GACZ2F,EAAO3F,EAAM4F,WAUf0L,KACC,IAEH,MAAMC,EAAW,kCAEJ,IAAI7H,GAAUC,iWAQd,IAAIrJ,GAAMQ,4CACO,IAAIR,GAAMQ,kEACV,IAAIR,GAAMQ,wEACH,IAAIR,GAAMQ,2KAS/C,SAAS0Q,EAAWtL,EAAc+H,GAChC,MAAO,CAAE/H,OAAM+H,SAGjB,MAAMwD,EAAgB,CACpBD,EAAW,WAAYrG,GACvBqG,EAAW,4BAA6Bb,GACxCa,EAAW,qBAAsBjB,GACjCiB,EAAW,wBAAD,OAA0Bf,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAsBiB,WAC1DF,EAAW,+BAAgCX,IAGvCc,EACJ,cAACC,EAAA,EAAD,CAAgBC,UAAW7B,IAA3B,SACE,eAAC8B,EAAA,EAAD,CAAO,aAAW,eAAlB,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,MAEF,cAACC,EAAA,EAAD,UACGR,EAAc/B,KAAKwC,GAClB,eAACF,EAAA,EAAD,WACE,cAACG,EAAA,EAAD,CAAWN,UAAU,KAAKO,MAAM,MAAhC,SACGF,EAAIhM,OAEP,cAACiM,EAAA,EAAD,UAAYD,EAAIjE,UAJHiE,EAAIhM,eAY7B,SAASmM,EACPnM,EACAoM,EACAC,GAEA,MAAO,CAAErM,OAAMoM,OAAMC,MAGvB,MAAMC,EAAmB,CACvBH,EAAuB,OAAQ,cAAe,eAC9CA,EACE,gCADoB,OAEpBtB,QAFoB,IAEpBA,OAFoB,EAEpBA,EAAc0B,sBAFM,OAGpB1B,QAHoB,IAGpBA,OAHoB,EAGpBA,EAAc2B,mBAEhBL,EACE,qCADoB,OAEpBtB,QAFoB,IAEpBA,OAFoB,EAEpBA,EAAc0B,sBAFM,OAGpB1B,QAHoB,IAGpBA,OAHoB,EAGpBA,EAAc2B,mBAEhBL,EACE,qCADoB,OAEpBtB,QAFoB,IAEpBA,OAFoB,EAEpBA,EAAc4B,qBAFM,OAGpB5B,QAHoB,IAGpBA,OAHoB,EAGpBA,EAAc6B,mBAIZC,EACJ,cAACjB,EAAA,EAAD,CAAgBC,UAAW7B,IAA3B,SACE,eAAC8B,EAAA,EAAD,CAAO,aAAW,eAAlB,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,MAEF,cAACC,EAAA,EAAD,UACGO,EAAiB9C,KAAKwC,GACrB,eAACF,EAAA,EAAD,WACE,cAACG,EAAA,EAAD,CAAWN,UAAU,KAAKO,MAAM,MAAhC,SACGF,EAAIhM,OAEP,cAACiM,EAAA,EAAD,UAAYD,EAAII,OAChB,cAACH,EAAA,EAAD,UAAYD,EAAIK,OALHL,EAAIhM,eAavB4M,EACJ,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACE,eAACF,EAAA,EAAD,CAAM7U,MAAI,EAACgV,GAAI,GAAf,UACE,cAAC1E,EAAA,EAAD,wBACA,cAAC,KAAD,CAAmB2E,SAAS,KAAK1N,MAAO2N,KAAxC,SACG7B,SAMT,OACE,sBAAKxB,UAAWX,EAAQP,KAAxB,UACE,cAACL,EAAA,EAAD,UACE,cAAC,IAAD,CAAM7O,OAAO,SAAS0T,KAAO,iBAA7B,mCAIF,uBACC1B,EAED,uBACA,uBAEA,cAACnD,EAAA,EAAD,yCACA,uBACCqE,EAED,uBACA,uBAECC,K,gECtQP,MAAMpE,GAAYC,aAAYC,GAC5B0E,aAAa,CACXzE,KAAM,CACJpL,SAAU,OACVxB,UAAW,SACXoM,UAAW,SAEbkF,YAAa,CACXvR,OAAQ4M,EAAMqE,QAAQ,GACtBO,SAAU,IACV/P,SAAU,QAEZgQ,YAAa,CACXrR,UAAWwM,EAAMqE,QAAQ,IAE3BS,kBAAmB,CACjBC,WAAY,OACZH,SAAU,KAEZI,KAAM,CACJzR,MAAO,OACPF,UAAW,SACXwB,SAAU,OACVnB,MAAO,YAKPT,GAAS,CACbgS,SAAU,CACRpQ,SAAU,OACVnB,MAAO,QACP0B,OAAQ,SASG,SAAS8P,GAASrN,GAC/B,MAAM2I,EAAUV,MACV,WAAEqF,EAAF,qBAAc7I,GAAyBzE,GACtC4E,EAAiBC,GAAsBgE,IAAMvH,SAAS,KACtDiM,EAAOC,GAAYlM,mBAAiB,IACrCmM,EAAqBjM,mBAMrBkM,EAAeJ,EAAWrE,KAC9B,CAAC4C,EAA0BpI,IAClB,cAACkK,GAAA,EAAD,CAAUnG,MAAOqE,EAAjB,SAAwBA,MAe7B+B,EAAWhL,UACf,MAAMkD,EAAM,IAAIjM,EAChB,IACE2T,EAAS,uEACT,MAAMzH,QAAYD,EAAI+H,QAAQC,GAC9BlK,QAAQC,IAAI,oBAAqBkC,GACd,OAAfA,EAAI3M,QACN8F,EACG,qCAAoC6G,EAAI9M,KAAKkC,cAC9C,WAECsJ,GAAsBA,KAEzBvF,EAAOrH,KAAKC,UAAUiO,EAAIxM,QAE5BiU,EAAS,IACT,MAAOjU,GACP2F,EAAOrH,KAAKC,UAAUyB,IACtBiU,EAAS3V,KAAKC,UAAUyB,EAAM4F,YAIlC,OACE,qBAAKmK,UAAWX,EAAQP,KAAxB,SACE,eAACmB,EAAA,EAAD,WACE,cAAC+C,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACE,cAACF,EAAA,EAAD,CAAM7U,MAAI,EAACgV,GAAI,GAAf,SACE,cAAC1E,EAAA,EAAD,CAAYgG,QAAQ,KAAKC,cAAY,EAArC,oCAMJ,eAAC1B,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,eAACF,EAAA,EAAD,CAAM7U,MAAI,EAACgV,GAAI,GAAf,UACE,eAACwB,GAAA,EAAD,CAAa3E,UAAWX,EAAQmE,YAAhC,UACE,cAACoB,GAAA,EAAD,CAAY7K,GAAG,2BAAf,2BAGA,cAAC8K,GAAA,EAAD,CACEC,QAAQ,2BACR/K,GAAG,qBACHmE,MAAO5C,EACP8E,SAhEQ1Q,IACpB6L,EAAmB7L,EAAME,OAAOsO,QA2DtB,SAMGkG,OAGL,cAACO,GAAA,EAAD,CAAa3E,UAAWX,EAAQsE,kBAAhC,SACE,cAAC7L,EAAD,CACEsB,aAActH,GAAOgS,SACrBpK,KAAM,kBACNL,QA/DEC,UACd,IAAKgC,EAAiB,OAAO1F,EAAQ,iDAC/B0O,EAAShJ,WAiET,cAAC0H,EAAA,EAAD,CAAM7U,MAAI,EAACgV,GAAI,GAAf,SACE,cAAC1E,EAAA,EAAD,6CAEF,eAACuE,EAAA,EAAD,CAAM7U,MAAI,EAACgV,GAAI,GAAf,UACE,cAACwB,GAAA,EAAD,CAAa3E,UAAWX,EAAQmE,YAAhC,SACE,cAACuB,GAAA,EAAD,CACEhL,GAAG,iBACH8F,MAAM,aACNmF,SAAUb,MAGd,cAACQ,GAAA,EAAD,CAAa3E,UAAWX,EAAQsE,kBAAhC,SACE,cAAC7L,EAAD,CACEsB,aAActH,GAAOgS,SACrBpK,KAAM,kBACNL,QA7EGC,UAAa,IAAD,EAC3B,MAAMiJ,EAAI,OAAG4B,QAAH,IAAGA,GAAH,UAAGA,EAAoBc,eAAvB,aAAG,EAA6B/G,MAC1C,IAAKqE,GAAuB,IAAfA,EAAKjU,OAAc,OAAOsH,EAAQ,8BACzC0O,EAAS/B,WA8ET,qBAAKvC,UAAWX,EAAQwE,KAAxB,SACE,cAACpF,EAAA,EAAD,UAAawF,c,+DC1JzB,MAAMiB,GAAaC,EAAQ,KAMrBrT,GAAS,IAAIyF,EACf0L,UAAW,GAGXmC,YAAa,CACTlT,UAAW,OACXF,SAAU,QACVC,OAAQ,UAEZoT,WAAY,CACR3R,SAAU,OACVY,OAAQ,iBACR5B,QAAS,OACTR,UAAW,OACXF,SAAU,QACVC,OAAQ,SACRiC,QAAS,SAEboR,YAAa,CACTpT,UAAW,OACXwB,SAAU,OACVhB,QAAS,SACTH,MAAOgF,EAAYjF,WAAWC,OAElCgT,aAAc,CACVjR,OAAQ,iBACR5B,QAAS,OAEb8S,YAAa,CACTpT,MAAO,OACPM,QAAS,OAEb+S,WAAY,CACR/S,QAAS,OAEbgT,gBAAiB,CACbhS,SAAU,QAGdiS,8BAA+B,CAC3B3T,SAAU,QACVC,OAAQ,UAEZ2T,oBAAqB,CACjBxT,MAAO,OACPM,QAAS,MACTgB,SAAU,QAEdmS,kBAAmB,CACf7T,SAAU,QACVsC,OAAQ,iBACRrC,OAAQ,YACRS,QAAS,UAEboT,cAAe,CACX9T,SAAU,QACVsC,OAAQ,iBACRrC,OAAQ,YACRS,QAAS,SACTR,UAAW,QAEf6T,oBAAqB,CACjBrS,SAAU,OACVnB,MAAOgF,EAAYjF,WAAWC,MAC9BL,UAAW,UAEf8T,cAAe,CACXtS,SAAU,OACVxB,UAAW,OACXQ,QAAS,OACTT,OAAQ,QAKVgU,GAAgC,GAUvB,SAASC,GAAkBxP,GAEtC,MAAM,iBAAEyP,EAAF,2BAAoBC,EAApB,2BAAgDC,GAA+B3P,EAAM4P,iBAGpFC,EAAKC,IADI,IAAI7M,EACE3B,mBAAoBiO,MACnCQ,EAAcC,GAAmB1O,sBAEjC2O,EAAUC,GAAe5O,mBAAmB,IAEnDW,qBAAU,QAEP,IAEH,MAAMkO,EAAqB,KACvB,MAAMC,EAAwBlW,EAAOiJ,gBAC/BkN,EAAmC,CACvCvG,eAAgB2F,GAAoB,GACpCa,uBAAwBZ,GAA8B,GACtDa,SAAUV,EACVW,QAASJ,GAELK,EAAW,IAAIC,yBACnBN,EACAC,GAGF,OADW,IAAIM,KAAKF,IAkKxB,OACI,sBAAKzR,MAAO5D,GAAOmR,UAAnB,UACI,sBAAKvN,MAAO5D,GAAO+T,kBAAnB,UACI,oBAAGnQ,MAAO5D,GAAO4T,gBAAjB,UACA,8DACI,uBACEhU,KAAK,OACL4V,YAAY,WACZlH,SAhJU9G,UACxB,MAAMiN,OAvBkBjN,WACxB,MAAMlK,EAAWM,EAAME,OAAO2X,MAAM,GAC9B9K,QAAiB9L,IAAMxB,iBAAiBC,GAE9C,GADAkL,QAAQC,IAAIkC,GACM,OAAfA,EAAI3M,OAEL,MADA8F,EAAQ,wCACF,IAAIW,MAAM,wCAGlB,MAAM5G,EAAOpB,KAAKiZ,MAAM/K,EAAI9M,MAC5B,GAAK8X,MAAMC,QAAQ/X,GAEf,OAAOA,EACL,GAAoB,kBAATA,GAAqBA,EAAK4W,IAEvC,OAAO5W,EAAK4W,IAGZ,MADA3Q,EAAQ,yBACF,IAAIW,MAAM,0BAKFoR,CAAoBjY,SAChC8W,EAAOD,SAiJL,mBAAG7Q,MAAO5D,GAAO6T,8BAAjB,SACG,uBAAOjU,KAAK,OAAO4V,YAAY,2BAA2B5R,MAAO5D,GAAO8T,oBAAqBxF,SA/I1E1Q,IAC9BgX,EAAgBhX,EAAME,OAAOsO,eAkJzB,sBAAKxI,MAAO5D,GAAOgU,cAAnB,UACI,qBAAKpQ,MAAO5D,GAAOiU,oBAAnB,yBACA,qBAAKrQ,MAAO5D,GAAOkU,cAAnB,SAEOW,EAAShH,KAAI,CAACpF,EAAIlM,IAAI,+BAAaA,EAAb,KAAkBkM,IAATlM,UAnJ7BkY,IAEVA,EAAIqB,QAASzZ,GAAuB,aAAdA,EAAKuD,OAAsBiO,KAAK,CAACxR,EAAe0Z,KAC5E,IAAD,EACQC,EAAyB,GACzBC,EAA0B,GAC1BC,EAA+B,IAEnC,MAAMC,EAAevY,IACjBoY,EAAava,SAASmC,EAAME,OAAOuG,OAASzG,EAAME,OAAOsO,OA8BvDgK,EAAwB5O,MAAOnL,EAAe2Z,KAA4B,IAAD,EAC3E,MAAMnY,EAAOuV,GAAWiD,mBAAmBha,EAAM2Z,GAC3CM,EAAS,CACbC,SAAU,SACVC,IAAK,gBACLC,GAAI9B,GAAgB,KAAK,IAAI+B,OAAO,IACpCC,KAAMxM,OAAOC,SAASZ,gBACtB3L,KAAMA,GAER2K,QAAQC,IAAI6N,GAKZ,MAAMM,EAAO7B,IACPhX,QAAe6Y,EAAK7K,IAAI8K,KAAKP,GACnC9N,QAAQC,IAAK,yBAAwBhM,KAAKC,UAAUqB,EAAQ,KAAM,MAClE,MAAM+Y,EAAiB1D,GAAW2D,iBAAX,UAA4B1a,EAAK2a,eAAjC,aAA4B,EAAcnJ,KAAIoJ,GAAGA,EAAErX,OAAO7B,GACjFyK,QAAQC,IAAIqO,GACZ,IAAI,IAAIva,EAAI,EAAGA,EAAIua,EAAeI,WAAY3a,IAC1C0Z,EAAc1Z,GAAKua,EAAeva,EAAE,IAExCiM,QAAQC,IAAIwN,GAGZnS,EAAOrH,KAAKC,UAAUuZ,EAAe,KAAM,GAAI,iBAEzCnB,GAAYqC,GAAY,IAAIA,EAAW,SAAQ9a,EAAKgI,gCAAgC5H,KAAKC,UAAUuZ,SAGvGmB,EAA2B5P,MAAOnL,EAAe2Z,KACnD,MAAMnY,EAAOuV,GAAWiD,mBAAmBha,EAAM2Z,GACjDxN,QAAQC,IAAIyN,GACZ,MAAM9J,EAAQ/P,EAAKgb,QAAU,KAAOxb,OAAOqa,GAAsBpa,SAAS,IAAM,OAC1Ewa,EAAS,CACbC,SAAU,SACVC,IAAK,gBACLC,GAAI9B,GAAgB,KAAK,IAAI+B,OAAO,IACpCC,KAAMxM,OAAOC,SAASZ,gBACtB4C,MAAOA,EACPvO,KAAMA,GAER2K,QAAQC,IAAI6N,GAKZ,MAAMM,EAAO7B,IACPuC,QAAkBV,EAAK7K,IAAIwL,gBAAgBjB,GACjD9N,QAAQC,IAAK,cAAahM,KAAKC,UAAU4a,EAAW,KAAM,MAE1DxT,EAAO,0DAA2D,iBAE5DgR,GAAYqC,GAAY,IAAIA,EAAW,SAAQ9a,EAAKgI,aAAaiT,EAAUE,gCAWrF,OACA,sBAAK5T,MAAO5D,GAAOsT,YAAnB,UACI,uBAAM1P,MAAO5D,GAAOwT,YAApB,cAAmCuC,EAAa,EAAhD,KAAqD1Z,EAAKgI,KAA1D,OACA,qBAAqBT,MAAO5D,GAAOuT,WAAnC,UACElX,EAAKgb,SACH,4BACG,uBAAOzT,MAAO5D,GAAO0T,YAAapF,SAjGZ1Q,IAC7B4K,QAAQC,IAAI7K,EAAME,OAAOsO,OACzB8J,EAAuBuB,iBAAM7Z,EAAME,OAAOsO,QA+FkC/H,KAAM,SAAS0R,EAAYnW,KAAK,OAAO4V,YAAY,iBAG/H,4CAAKnZ,EAAKqb,cAAV,aAAK,EAAa7J,KAAK,CAAC3K,EAAO3G,KAC3ByZ,EAAa2B,KAAK,IACX,6BACN,4BACE,uBAAO/T,MAAO5D,GAAO0T,YAAapF,SAAU6H,EAAa9R,KAAM9H,EAAE,GAAIqD,KAAK,OAAO4V,YAAatS,EAAMtD,UAFvF,WAAWrD,SAQ/B,yBAAQqH,MAAO5D,GAAO2T,WAAYpM,QAAS,KAzG3BC,OAAOoQ,EAAmB5B,KAC1C,GAAsB,aAAlB4B,EAAShY,KACT,MAAM,IAAI6E,MAAM,qBAEpB,GAAiC,SAA7BmT,EAASC,gBACT,UACUzB,EAAsBwB,EAAU5B,GACxC,MAAO7X,GACLqK,QAAQC,IAAItK,GACZ2F,EAAOrH,KAAKC,UAAUyB,EAAO,KAAM,IAI3C,GAAiC,SAA7ByZ,EAASC,gBACT,UACUT,EAAyBQ,EAAU5B,GAC3C,MAAO7X,GACL2F,EAAOrH,KAAKC,UAAUyB,EAAO,KAAM,MAwFK2Z,CAAYzb,EAAM2Z,IAAlE,cAA8G,SAAzB3Z,EAAKwb,gBAA6B,OAAS,UAAhI,SAhBS9B,GAFb,UAgDCgC,CAAYtD,MC1SzB,MAAMzU,GAAS,IACVgY,EAEDC,OAAQ,CACNzL,UAAW,QACXrM,OAAQ,QAEV+X,QAAS,CACPzX,MAAO,WAETsI,QAAS,CACPtI,MAAO,aACPmB,SAAU,QAEZuW,OAAQ,CACNvW,SAAU,OACVtB,MAAO,OACPJ,SAAU,QACVC,OAAQ,OACRS,QAAS,gBACTH,MAAO,SAET2X,mBAAoB,CAClB9X,MAAO,OACPJ,SAAU,QACVC,OAAQ,YACRC,UAAW,OACXwB,SAAU,OACVY,OAAQ,iBACR/B,MAAO,QAET4X,YAAa,CACXjX,cAAe,QAEjBkX,aAAc,CACZhY,MAAO,QACPsB,SAAU,OACVzB,OAAQ,YACRC,UAAW,QAEbmY,6BAA8B,CAC5BjY,MAAO,QACPH,OAAQ,SACRI,UAAW,SAWF,SAASiY,GAAU5T,GAChC,MAAM6T,EAAYrS,iBAAyB,OACpCG,EAAWG,GAAgBR,oBAAkB,IAC7CwS,EAAmBC,GAAwBzS,mBAAmB,IACrEA,qBACA,MAAM,gBAAEsD,EAAF,eAAmBkF,EAAnB,qBAAmCE,GAAyBhK,EAwC5DgU,EAAkBpR,UACtB,IAAKqR,EACH,OAAO/U,EAAQ,4DACjB,IAAK0F,EACH,OAAO1F,EAAQ,8CAEjB,MAAM8S,EA5CmB,MACzB,MAAM5B,EAAwBlW,EAAOiJ,gBAC/BkN,EAAmC,CACvCvG,eAAgBA,GAAkB,GAClCwG,wBAA4C,OAApBtG,QAAoB,IAApBA,OAAA,EAAAA,EAAsBiB,YAAa,GAC3DuF,QAASJ,GAELK,EAAW,IAAIC,yBACnBN,EACAC,GAGF,OADW,IAAIM,KAAKF,IAiCPN,GACb,IACE,MAAM+D,EAAoB,CACxBC,MAAO,EACPxC,SAAU,SACVC,IAAK,gBACLC,GAAI,KAAO,IAAIC,OAAO,IACtBC,KAAMxM,OAAOC,SAASZ,gBACtB4C,MAAO,OACPvO,KAAMgb,GAERrQ,QAAQC,IAAIqQ,GACZ,MAAMxB,QAAkBV,EAAK7K,IAAIwL,gBAAgBuB,GACjDtQ,QAAQC,IAAK,cAAahM,KAAKC,UAAU4a,EAAW,KAAM,MAE1D,MAAM3C,EAAe2C,EAAU0B,gBAE/B,GADAxQ,QAAQC,IAAK,qBAAoBkM,MAC5BA,EACH,OAAO7Q,EACJ,sDAAqDwT,KAG1DxT,EAAQ,0BAAyB6Q,IAAgB,WACjDgE,GAAsBxB,GAAa,IAAIA,EAAUxC,KACjD,MAAOxW,GAEP,OADAqK,QAAQC,IAAItK,GACL2F,EACJ,4CAA2CrH,KAAKC,UAAUyB,QA4CjE,OACE,gCACE,cAAC+S,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACE,eAACF,EAAA,EAAD,CAAM7U,MAAI,EAACgV,GAAI,GAAf,UACE,cAACrL,EAAD,CACE4B,KAAM,kBACNrB,UAAWA,EACXgB,QAzFkBC,UAC1B,IAAKiR,EAAW,OAAO3U,EAAQ,wBAC/B2U,EAAUtF,QAAS8F,SAwFX3R,aAActH,GAAOmY,SAEvB,uBAAOvY,KAAK,OAAOiF,IAAK4T,EAAWnK,SAhCpB9G,UACrB,MAAMlK,EAAW4b,EAAEpb,OAAO2X,MAAM,GAChC,IAAI0D,EAEJ,IACEA,OAnFgC3R,WAClC,MAAMlK,EAAWM,EAAME,OAAO2X,MAAM,GAC9B9K,QAAiB9L,IAAMxB,iBAAiBC,GAE9C,GADAkL,QAAQC,IAAIkC,GACO,OAAfA,EAAI3M,OAEN,MADA8F,EAAQ,wCACF,IAAIW,MAAM,wCAElB,MAAM5G,EAAOpB,KAAKiZ,MAAM/K,EAAI9M,MAC5B,GAAoB,kBAATA,GAAqBA,EAAKub,SAEnC,OAAOvb,EAAKub,SAGZ,MADAtV,EAAQ,+BACF,IAAIW,MAAM,gCAqES4U,CAA4BH,GACrD,MAAO/a,GAEP,MAAMwM,OAzBwBrN,IACzB,IAAInC,SAAQ,CAACoC,EAASC,KAC3B,MAAMC,EAAS,IAAIC,WACnBD,EAAOE,OAAUC,IACf,MAAM0b,EAAY,KAAI1b,EAAME,OAAOC,SACnCR,EAAQ,CAAES,OAAQ,KAAMH,KAAMyb,KAEhC7b,EAAOQ,QAAWC,IAChBX,EAAQ,CAAES,OAAQ,SAAUG,MAAOD,KAErCT,EAAOW,QAAU,KACfb,EAAQ,CAAES,OAAQ,SAAUG,MAAO,iBAErCV,EAAOY,mBAAmBf,MAYHic,CAAyBjc,GAChD,GAAmB,OAAfqN,EAAI3M,OACN,OAAO8F,EAAQ,yCAEjBqV,EAAmBxO,EAAI9M,KACvB2K,QAAQC,IAAI,8BACZD,QAAQC,IAAI0Q,GAIdzS,GAAa,SACPkS,EAAgBO,GACtBzS,GAAa,IAYsD6F,QAAM,IACnE,cAACI,EAAA,EAAD,CAAY/I,MAAO,CAAEhC,SAAU,OAAQnB,MAAO,QAA9C,uDAMJ,cAACyQ,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACE,eAACF,EAAA,EAAD,CAAM7U,MAAI,EAACgV,GAAI,GAAIzN,MAAO5D,GAAOoY,mBAAjC,8BAEE,cAAC,KAAD,CAAmB9G,SAAS,aAAa1N,MAAO2N,KAAhD,SACGmH,EAAkBlc,OAAS,EACxBkc,EAAkBc,KAAK,MACvB,kBAIV,cAACC,GAAA,EAAD,IAEA,cAACvI,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACE,eAACF,EAAA,EAAD,CAAM7U,MAAI,EAACgV,GAAI,GAAf,UACE,cAAC1E,EAAA,EAAD,CAAYgG,QAAQ,KAApB,+BACA,cAAC,GAAD,CACE6B,gBAAiB,CACfH,iBAAkB3F,EAClB4F,2BAA0B,OAAE1F,QAAF,IAAEA,OAAF,EAAEA,EAAsBiB,UAClD0E,2BAA0B,OAAE3F,QAAF,IAAEA,OAAF,EAAEA,EAAsB8K,qBCrNhE,MAAM1Z,GAAS,IACVgY,EAEDC,OAAQ,CACNzL,UAAW,QACXrM,OAAQ,QAEV+X,QAAS,CACPzX,MAAO,WAETsI,QAAS,CACPnH,SAAU,QAEZuW,OAAQ,CACNvW,SAAU,OACVtB,MAAO,OACPJ,SAAU,QACVC,OAAQ,OACRS,QAAS,gBACTH,MAAO,SAET2X,mBAAoB,CAClB9X,MAAO,OACPJ,SAAU,QACVC,OAAQ,YACRC,UAAW,OACXwB,SAAU,OACVY,OAAQ,iBACR/B,MAAO,QAET4X,YAAa,CACXjX,cAAe,QAEjBkX,aAAc,CACZhY,MAAO,QACPsB,SAAU,OACVzB,OAAQ,YACRC,UAAW,QAEbmY,6BAA8B,CAC5BjY,MAAO,QACPH,OAAQ,SACRI,UAAW,SAWF,SAASoZ,GAAe/U,GACrC,MAAM,gBAAE4E,EAAF,eAAmBkF,EAAnB,qBAAmCE,GAAyBhK,GAC3DgV,EAAaC,GAAkB3T,mBAAiB,MAChD4T,EAAWC,GAAgB7T,sBAC3B8T,EAAiBC,GAAsB/T,sBACvCgU,EAA2BC,GAChCjU,mBAAiB,IAEnBW,qBAAU,KACJ2C,IACF4Q,IACAC,IACAC,OAED,CAAC9Q,IAEJ,MAcM4Q,EAAiB5S,UACrB,IAAKgC,EAAiB,OACtB,MAAMkB,EAAM,IAAIjM,EAChB,IACE,MAAMkM,QAAYD,EAAI0P,eAAe5Q,GACrC,GAAmB,OAAfmB,EAAI3M,OACN,OAAOwK,QAAQrK,MACZ,kEAAiE1B,KAAKC,UACrEiO,EAAIxM,gBAGJ0b,EAAehb,IAAM7C,YAAY2O,EAAI9M,OAC3C2K,QAAQC,IAAI5J,IAAM7C,YAAY2O,EAAI9M,OAClC,MAAOM,GACPqK,QAAQC,IAAK,2BACbD,QAAQC,IAAItK,GACZ2F,EAAOrH,KAAKC,UAAUyB,MAIpBkc,EAAe7S,UACnB,MAAMkD,EAAM,IAAIjM,EAChB,IACE,MAAMkM,QAAYD,EAAI2P,eAEtB,GADA7R,QAAQC,IAAIkC,GACO,OAAfA,EAAI3M,OACN,OAAOwK,QAAQC,IACZ,6BAA4BhM,KAAKC,UAAUiO,EAAIxM,gBAG9C4b,EAAapP,EAAI9M,KAAK0c,YAC5B,MAAOpc,GACPqK,QAAQC,IAAK,wBACbD,QAAQC,IAAItK,GACZ2F,EAAOrH,KAAKC,UAAUyB,MAIpBmc,EAAqB9S,UACzB,MAAMkD,EAAM,IAAIjM,EAChB,IACE,MAAMkM,QAAYD,EAAI8P,0BAEtB,GADAhS,QAAQC,IAAIkC,GACO,OAAfA,EAAI3M,OACN,OAAOwK,QAAQC,IACZ,6BAA4BhM,KAAKC,UAAUiO,EAAIxM,gBAG9C8b,EAAmBtP,EAAI9M,KAAK4c,cAClC,MAAOtc,GACPqK,QAAQC,IAAK,+BACbD,QAAQC,IAAItK,GACZ2F,EAAOrH,KAAKC,UAAUyB,MA8FpBuc,EAAmB,+BARMH,EAUGT,EAT3BS,EAGHA,EAAW3O,MAAM,EAAG,GAAK,MAAQ2O,EAAW3O,MAAM2O,EAAW/d,OAAS,GAHhD,8BAUZqC,IAAM7C,YAAYge,GAAmB,2CAXpBO,MAe/B,OACE,gCACE,cAACrJ,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACE,cAACF,EAAA,EAAD,CAAM7U,MAAI,EAACgV,GAAI,GAAf,SACE,cAAC1E,EAAA,EAAD,CAAYgG,QAAQ,KAApB,uCAIJ,cAACzB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACE,cAACF,EAAA,EAAD,CAAM7U,MAAI,EAACgV,GAAI,GAAf,SACE,sBAAKzN,MAAO5D,GAAOsY,aAAnB,UACE,qHAIA,sFAEE,mBAAG9G,KAAK,2DAAR,uCAFF,gIAQA,sCACA,mGAGA,qMAGsC,OAEtC,uBACA,+CACA,sSAIoE,OAEpE,+GAEgB,IACd,mBAAGA,KAAK,kGAAR,kBAHF,8FAaN,cAACN,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACE,cAACF,EAAA,EAAD,CAAM7U,MAAI,EAACgV,GAAI,GAAf,SACE,sBAAKzN,MAAO5D,GAAO+I,QAAnB,sBACW,iCAAO6Q,EAAP,mBAKf,cAAC1I,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACE,eAACF,EAAA,EAAD,CAAM7U,MAAI,EAACgV,GAAI,GAAIzN,MAAO5D,GAAOoY,mBAAjC,UACE,qDACA,cAAC,KAAD,CAAmB9G,SAAS,aAAa1N,MAAO2N,KAAhD,SACGmJ,SAKP,cAACxJ,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACE,cAACF,EAAA,EAAD,CAAM7U,MAAI,EAACgV,GAAI,GAAf,SACE,cAACrL,EAAD,CACE4B,KAAM,mBACNL,QAvJSC,UACjB,MAAMkD,EAAM,IAAIjM,EAChB,IACE,MAAMkM,QAAYD,EAAIiQ,aACtBnS,QAAQC,IAAIkC,GACO,OAAfA,EAAI3M,OACN8F,EAAQ,uBAAsB6G,EAAI9M,KAAK0c,aAAc,WAErDzW,EAAOrH,KAAKC,UAAUiO,EAAIxM,MAAO,KAAM,IAEzC,MAAOA,GACP2F,EAAOrH,KAAKC,UAAUyB,MA6IhBmJ,aAActH,GAAOmY,aAK3B,cAACjH,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACE,cAACF,EAAA,EAAD,CAAM7U,MAAI,EAACgV,GAAI,GAAf,SACE,cAACrL,EAAD,CACE4B,KAAM,eACNL,QArLUC,UAClB,IAAKgC,EAAiB,OAAO1F,EAAQ,+BACrC,MAAM4G,EAAM,IAAIjM,EAChB,IACE,MAAMkM,QAAYD,EAAIkQ,aAAapR,GACnChB,QAAQC,IAAIkC,GACO,OAAfA,EAAI3M,QACN8F,EAAQ,oBAAmB6G,EAAI9M,KAAKkC,aAAc,WAClDyI,QAAQC,IACL,iCAAgCkC,EAAI9M,KAAKgd,6BAEtCT,KAENtW,EAAOrH,KAAKC,UAAUiO,EAAIxM,QAE5B,MAAOA,GACP2F,EAAOrH,KAAKC,UAAUyB,MAsKhBmJ,aAActH,GAAOmY,aAK3B,cAACjH,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACE,cAACF,EAAA,EAAD,CAAM7U,MAAI,EAACgV,GAAI,GAAf,SACE,cAACrL,EAAD,CACE4B,KAAM,8BACNL,QA5JuBC,UAC/B,IAAKgC,EACH,OAAO1F,EAAQ,8CAEjB,MAAM4G,EAAM,IAAIjM,EAChB,IACE,MAAMkM,QAAiBD,EAAIoQ,yBAAyBtR,GACjC,OAAfmB,EAAI3M,QAAiB8F,EAAOrH,KAAKC,UAAUiO,EAAIxM,MAAO,KAAM,IAEhE,MAAM4c,EAAiCpQ,EAAI9M,KAC3C2K,QAAQC,IAAIhM,KAAKC,UAAUqe,EAAgC,KAAM,IAEjE,IACE,MAAMjC,EAAoB,CACxBC,MAAO,EACPxC,SAAU,SACVC,IAAK,gBACLC,GAAI,KAAO,IAAIC,OAAO,IACtBC,KAAMxM,OAAOC,SAASZ,gBACtB4C,MAAO,OACPvO,KAAMkd,GAGFnE,EAhIe,MACzB,MAAM5B,EAAwBlW,EAAOiJ,gBAC/BkN,EAAmC,CACvCvG,eAAgBA,GAAkB,GAClCwG,wBAA4C,OAApBtG,QAAoB,IAApBA,OAAA,EAAAA,EAAsBiB,YAAa,GAC3DuF,QAASJ,GAELK,EAAW,IAAIC,KACnBN,EACAC,GAGF,OADW,IAAIM,KAAKF,IAqHHN,GACPuC,QAAkBV,EAAK7K,IAAIwL,gBAAgBuB,GACjDtQ,QAAQC,IAAK,cAAahM,KAAKC,UAAU4a,EAAW,KAAM,MAE1D,MAAM3C,EAAe2C,EAAU0B,gBAE/B,GADAxQ,QAAQC,IAAK,qBAAoBkM,MAC5BA,EACH,OAAO7Q,EACJ,sDAAqDwT,KAG1DxT,EAAQ,0BAAyB6Q,IAAgB,WACjDwF,EAA6BxF,GAC7B,MAAOxW,GAEP,OADAqK,QAAQC,IAAItK,GACL2F,EACJ,4CAA2CrH,KAAKC,UAAUyB,OAG/D,MAAOA,GACP2F,EAAOrH,KAAKC,UAAUyB,MAkHhBmJ,aAActH,GAAOmY,aAK3B,cAACjH,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACE,eAACF,EAAA,EAAD,CAAM7U,MAAI,EAACgV,GAAI,GAAIzN,MAAO5D,GAAOoY,mBAAjC,8BAEE,cAAC,KAAD,CAAmB9G,SAAS,aAAa1N,MAAO2N,KAAhD,SACG2I,GAA6B,8BChV1C,MAAMla,GAAS,IACVgY,EAEDC,OAAQ,CACNzL,UAAW,SAGb0L,QAAS,CACPzX,MAAO,WAETsI,QAAS,CACPtI,MAAO,aACPmB,SAAU,QAEZuW,OAAQ,CACNvW,SAAU,OACVtB,MAAO,OACPJ,SAAU,QACVC,OAAQ,OACRS,QAAS,gBACTH,MAAO,SAET2X,mBAAoB,CAClB9X,MAAO,OACPJ,SAAU,QACVC,OAAQ,YACRC,UAAW,OACXwB,SAAU,OACVY,OAAQ,iBACR/B,MAAO,QAET4X,YAAa,CACXjX,cAAe,QAEjBkX,aAAc,CACZhY,MAAO,QACPsB,SAAU,OACVzB,OAAQ,YACRC,UAAW,QAEbmY,6BAA8B,CAC5BjY,MAAO,QACPH,OAAQ,SACRI,UAAW,SAoGFya,OA/Ff,WACE,MAAOxR,EAAiBC,GAAsBvD,sBAEvCwI,EAAgBC,GAAqBzI,sBACrC0I,EAAsBC,GAC3B3I,sBACKmD,EAAsB4R,GAA2B/U,mBAAiB,GAYzEW,qBAAU,KACRwI,IACAC,MACC,IAEH,MAAMD,EAAoB7H,UACxB,MAAMkD,EAAM,IAAIjM,EAChB,IACE,MAAMkM,QAAYD,EAAI2E,oBACtB,GAAmB,OAAf1E,EAAI3M,OACN,OAAO8F,EACJ,mCAAkCrH,KAAKC,UAAUiO,EAAIxM,UAE1DwQ,EAAkBhE,EAAI9M,MACtB,MAAOM,GACPqK,QAAQC,IAAK,8BACbD,QAAQC,IAAItK,GACZ2F,EAAOrH,KAAKC,UAAUyB,MAIpBmR,EAA0B9H,UAC9B,MAAMkD,EAAM,IAAIjM,EAChB,IACE,MAAMkM,QAAYD,EAAI4E,0BACtB,GAAmB,OAAf3E,EAAI3M,OACN,OAAO8F,EACJ,0CAAyCrH,KAAKC,UAAUiO,EAAIxM,UAEjE0Q,EAAwBlE,EAAI9M,MAC5B,MAAOM,GACPqK,QAAQC,IAAK,8BACbD,QAAQC,IAAItK,GACZ2F,EAAOrH,KAAKC,UAAUyB,MAIpB+c,EAAc,CAClB,cAACzM,GAAD,IACA,cAACwD,GAAD,CAAUC,WAAY,CAAC1I,GAAkBH,qBAjDf,KAC1B4R,EAAwB5R,EAAuB,MAiD/C,cAACmP,GAAD,CACEhP,gBAAiBA,EACjBkF,eAAgBA,EAChBE,qBAAsBA,IAExB,cAAC+K,GAAD,CACEnQ,gBAAiBA,EACjBkF,eAAgBA,EAChBE,qBAAsBA,KAM1B,OACE,8BACE,qBAAKV,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,cAACvK,EAAD,IAEA,eAACuN,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAM7U,MAAI,EAACgV,GAAI,GAAIzN,MAAO5D,GAAOiY,OAAQ7G,QAAS,EAAlD,SACE,cAAC,EAAD,CACElI,sBArEQiS,IAChBA,GACF1R,EAAmB0R,IAoET9R,qBAAsBA,MAG1B,cAAC6H,EAAA,EAAD,CAAM7U,MAAI,EAACgV,GAAI,GAAID,QAAS,EAA5B,SACE,cAAC9D,EAAD,CAAYI,MAhBN,CAAC,aAAc,WAAY,WAAY,oBAgBfC,KAAMuN,iBC/InC,SAASE,GAAexW,GACrC,MAAM,MAAEyW,EAAF,SAASC,GAAa1W,GACrB2W,EAAiBC,GAAsBtV,qBAS9C,OAPAsC,QAAQC,WAAW6S,GAEnBzU,qBAAU,KAC0B2U,EAAV,kBAAbF,EAA0CA,EAC7B7e,KAAKC,UAAU4e,EAAU,KAAM,MACtD,CAACA,IAGF,gCACGD,GAAS,GACV,cAAC,KAAD,CAAmB/J,SAAS,aAAa1N,MAAO2N,KAAhD,SACGgK,GAAmB,QCrBb,SAASE,KACtB,MAAOC,EAASC,GAAczV,sBACvBpH,EAAQ8c,GAAa1V,qBAE5BW,qBAAU,KACRgV,MACC,IAEH,MAAMA,EAAYrU,UAChB,MAAMkD,EAAM,IAAIjM,EACVid,QAAgBhR,EAAIoR,oCACpBhd,QAAe4L,EAAIqR,8BACnBJ,EAAWD,SACXE,EAAU9c,IAGlB,OACE,gCACE,cAACsc,GAAD,CAAgBC,MAAM,iCAAiCC,SAAUI,IACjE,cAACN,GAAD,CAAgBC,MAAM,yBAAyBC,SAAUxc,OCnBhD,SAASkd,KACtB,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,iBAAZ,SACE,cAACR,GAAD,MAEF,cAAC,IAAD,CAAOQ,KAAK,IAAZ,SACE,cAAC,GAAD,WCCKC,OAZUC,IACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,EAAGC,SAAQC,SAAQC,SAAQC,SAAQC,cAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACb,GAAD,MAEFc,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.e09b9691.chunk.js","sourcesContent":["import JSBI from 'jsbi';\nimport { mode } from '../config/constant.json';\n\nexport const convertTimestamp = (ts: string | number) => {\n    if(typeof ts === 'string'){\n        return new Date(parseInt(ts)).toLocaleTimeString();\n    }else{\n        return new Date(ts).toLocaleTimeString();\n    }\n}\n\nexport const hex2dec =  (num: string) => {\n    return BigInt(num).toString(10);\n}\n\nexport const dec2hex = (num: string) => {\n    return BigInt(num).toString(16);\n}\n\nexport const shannon2CKB = (num: number | string | BigInt) => {\n    // return BigInt(num).toString(10).substring(0, BigInt(num).toString(10).length-7) \n    //        + '.' + \n    //        BigInt(num).toString(10).substring(BigInt(num).toString(10).length-7);\n    return JSBI.divide(JSBI.BigInt(num), JSBI.BigInt(100000000)).toString(10);\n}\n\nexport const CKB2shannon = (num: number | string | bigint) => {\n    return BigInt(num).toString(10) + '00000000';\n}\n\n// notice: the order of key-value pair in Object\n// does matter in this funciton.\n// (meaning that they will not be the same and return false)\nexport const isObjectInArray = (item: object, arr: object[]) => {\n   for(let i=0;i<arr.length;i++){\n        if( JSON.stringify(arr[i]) === JSON.stringify(item) ){\n            return true;\n        } \n   }\n   return false;\n}\n\nexport const arrayBufferToBuffer = (ab: ArrayBuffer) => {\n    var buf = Buffer.alloc(ab.byteLength);\n    var view = new Uint8Array(ab);\n    for (var i = 0; i < buf.length; ++i) {\n      buf[i] = view[i];\n    }\n    return buf;\n}\n\nexport const get_env_mode = () => {\n    //todo: maybe auto test using os === 'ubuntu' or something.\n    return mode === 'development' ? 'development' : 'production';\n}\n\nexport const asyncSleep = (ms = 0) => {\n    return new Promise((r) => setTimeout(r, ms));\n}\n\nexport const readDataFromFile = (codefile: Blob) => {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = (event: any) => {\n            const data = event.target.result;\n            resolve({status:'ok', data: data});\n        };\n        reader.onerror = (err) => {\n            resolve({status:'failed', error: err});\n        };\n        reader.onabort = () => {\n          resolve({status:'failed', error: 'user abort.'});\n        }\n        reader.readAsBinaryString(codefile);\n    });\n}\n\nexport const eth2wei = function (num_str: string) {\n    const numbers = parseFloat(num_str) * 1000000;\n    return String(numbers) + \"000000000000\";\n}\n\nexport const wei2eth = function (numbers: string) {\n    return parseInt(BigInt(numbers).toString()) / 1000000000000000000;\n}\n\nexport const eth2gwei = function (num_str: string) {\n    const numbers = parseFloat(num_str) * 1000000;\n    return numbers.toString() + \"000\";\n}\n\nexport const gwei2eth = function (numbers: string) {\n    return parseInt(BigInt(numbers).toString()) / 1000000000;\n}\n\nexport default {\n    convertTimestamp: convertTimestamp,\n    hex2dec: hex2dec,\n    dec2hex: dec2hex,\n    shannon2CKB: shannon2CKB,\n    CKB2shannon: CKB2shannon,\n    isObjectInArray: isObjectInArray,\n    arrayBufferToBuffer: arrayBufferToBuffer,\n    get_env_mode: get_env_mode,\n    asyncSleep: asyncSleep,\n    readDataFromFile: readDataFromFile\n}\n","import { RawL2Transaction } from '@godwoken-polyman/godwoken';\nimport axios from 'axios';\nimport config from '../config/constant.json';\nimport { OpType } from '../types/polyjuice';\nimport utils from '../utils/index';\n\naxios.defaults.withCredentials = true;\n\nclass Api{\n\n    base_url: string;\n\n    constructor(){\n        this.base_url = utils.get_env_mode() === 'development' ? config.development_server_url : config.production_server_url;\n    };\n\n    getUrl(){\n        return this.base_url;\n    }\n\n    async getServerConfig(){\n        let res = await axios.get(`${this.base_url}/get_server_configs`, { \n            params:{\n            }\n        });\n        return res.data;\n    }\n\n    async getGodwokenScriptDeployResultFile(){\n        let res = await axios.get(`${this.base_url}/get_godwoken_script_deploy_result_file`, { \n            params:{\n            }\n        });\n        return res.data;\n    }\n\n    async getGodwokenConfigFile(){\n        let res = await axios.get(`${this.base_url}/get_godwoken_config`, { \n            params:{\n            }\n        });\n        return res.data;\n    }\n\n    async getRollupTypeHash(){\n        let res = await axios.get(`${this.base_url}/get_rollup_type_hash`, { \n            params:{\n            }\n        });\n        return res.data;\n    };\n    \n    async getEthAccountLockConfig(){\n        let res = await axios.get(`${this.base_url}/get_eth_acccount_lock`, {\n            params:{\n            }\n        });\n        return res.data;\n    };\n\n    async getBalance(eth_address: string){\n        let res = await axios.get(`${this.base_url}/get_layer2_balance`, { \n            params:{\n                eth_address: eth_address\n            }\n        });\n        return res.data;\n    };  \n\n    async getSudtBalance(eth_address: string){\n        let res = await axios.get(`${this.base_url}/get_layer2_sudt_balance`, { \n            params:{\n                eth_address: eth_address\n            }\n        });\n        return res.data;\n    };  \n\n    async issueToken(){\n        let res = await axios.get(`${this.base_url}/issue_token`, { \n            params:{\n            }\n        });\n        return res.data; \n    }\n\n    async getSudtToken(){\n        let res = await axios.get(`${this.base_url}/get_sudt_token`, {\n\n        });\n        return res.data;\n    }\n\n    async getSudtTokenTotalAmount(){\n        let res = await axios.get(`${this.base_url}/get_sudt_token_total_amount`, {\n\n        });\n        return res.data;\n    }\n\n    async deposit(eth_address: string){\n        let res = await axios.get(`${this.base_url}/deposit`, { \n            params:{\n                eth_address: eth_address\n            }\n        });\n        return res.data;\n    }; \n\n    async deposit_sudt(eth_address: string){\n        let res = await axios.get(`${this.base_url}/deposit_sudt`, { \n            params:{\n                eth_address: eth_address\n            }\n        });\n        return res.data;\n    }\n\n  async transfer(to_id: string, amount: string, fee: string, eth_address: string) {\n    let res = await axios.post(`${this.base_url}/transfer`, {\n      data: {\n        to_id: to_id,\n        amount: amount,\n        fee: fee,\n        eth_address: eth_address,\n      }\n    });\n    return res.data;\n  }\n\n    async deployContract(contract_code: string, eth_address: string ){\n        let res = await axios.post(`${this.base_url}/deploy_contract`, { \n            data:{\n                contract_code: contract_code,\n                eth_address: eth_address,\n            }\n        });\n        return res.data;\n    };\n\n    async deployErc20ProxyContract(eth_address: string){\n        let res = await axios.post(`${this.base_url}/deploy_erc20_proxy_contract`, { \n            data:{\n                eth_address: eth_address,\n            }\n        });\n        return res.data;\n    }; \n\n    async deploySudtContract() {\n        let res = await axios.post(`${this.base_url}/deploy_sudt_contract`, { \n            data:{\n            }\n        });\n        return res.data; \n    }\n\n    async sendL2Transaction(raw_l2tx: RawL2Transaction, signature: string, type: OpType, l2_script_args?: string){\n        let res = await axios.post(`${this.base_url}/send_l2_tx`, { \n            data:{\n                raw_l2tx: raw_l2tx,\n                signature: signature,\n                type: type,\n                l2_script_args: l2_script_args\n            }\n        });\n        return res.data;\n    };\n\n    async getTransactionReceipt(tx_hash: string){\n        let res = await axios.get(`${this.base_url}/get_tx_receipt`, { \n            params:{\n                tx_hash: tx_hash\n            }\n        });\n        return res.data;\n    }\n    //\n    async getContractAddrByAccountId(account_id: string){\n        let res = await axios.get(`${this.base_url}/get_contract_addr_by_account_id`, { \n            params:{\n                account_id: account_id\n            }\n        });\n        return res.data;\n    }\n\n    async getChainId(){\n        let res = await axios.get(`${this.base_url}/get_chain_id`, { \n            params:{\n                \n            }\n        });\n        return res.data;\n    }\n\n}\n\nexport default Api;\n","const styles = {\n    page: {\n        maxWidth: '700px',\n        margin: 'atuo',\n        textAlign: 'center' as const\n    },\n    content: {\n        width: '100%',\n        marginTop: '20px',\n        textAlign: 'left' as const\n    },\n    main_color: {\n        color: '#3CC68A'\n    },\n    background_color: {\n        color: '#282c34'\n    },\n    wide_card: {\n        padding: '10px',\n        textAlign: 'left' as const\n    },\n    wide_card_title: {\n        color: '#3CC68A',\n        textAlign: 'center' as const\n    },\n    blockquote: {\n        background: '#f9f9f9',\n        borderLeft: '10px solid #3CC68A',\n        margin: '1.5em 10px',\n        padding: '1em 2em',\n        color: 'black',\n    },\n    clear_path: {\n        clear: 'both' as const\n    },\n    li: {\n        listStyleType: 'none',\n        marginLeft: '0'\n    },\n    ul: {\n        listStyleType: 'none',\n        paddingLeft: '0'\n    },\n    status_bar: {\n        width: '100%',\n        padding: '5px',\n        margin: '10px 0px',\n        clear: 'both' as const,\n        justifyContent: 'center' as const,\n    },\n    status_bar_title: {\n        float: 'left' as const,\n        fontSize: '16px',\n        fontWeight: 'bolder' as const\n    },\n    status_bar_btn: {\n        float: 'right' as const,\n        textAlign: 'center' as const,\n        marginRight: '20px'\n    },\n    modal: {\n      maxWidth: '700px',\n      maxHeight: '80%',\n      overflowY: 'scroll' as const,\n      padding: '20px',\n      height: '100%',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      margin: '0 auto'\n    },\n    paper: {\n      backgroundColor: 'gray',\n      border: '2px solid #000',\n      boxShadow: '10px',\n      padding: '10px',\n      width: '100%',\n      outline: 'none'\n    },\n    hidden_btn: {\n      width:'100%', \n      border:'0', \n      backgroundColor: 'rgb(0,0,0, 0)',\n      height: '0',\n      cursor: 'auto'\n    },\n    single_line_code: {\n        background: 'white',\n        color: 'gray',\n        padding: '2px',\n        borderRadius: '5px',\n    },\n    explain_text: {\n        fontSize: '14px',\n        color: 'gray',\n        margin: '20px',\n    },\n    input_wrap: {\n        padding: '2px 5px',\n        marginBottom: '10px',\n        display: 'block',\n        background: 'white',\n    },\n    input: {\n        width: '100%',\n        outline: 'none',\n        fontSize: '14px',\n        border: '0',\n        overflowX: 'scroll' as const,\n        verticalAlign: 'text-bottom',\n    },\n    describe_img_wrapper: {\n        maxWidth: '100px',\n        margin: '40px auto',\n    },\n    describe_img: {\n        width: '100%',\n        height: '100%',\n        background: '#282c34',\n    },\n    describe_img_footnote: {\n        textAlign: 'center' as const,\n        fontSize: '11px',\n    }\n}\n\nexport default styles;","import React, { useRef, useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './notify.css';\nimport commomStyle from '../widget/common_style';\n\nconst styles = {...commomStyle, ...{\n    panel: {\n        //maxWidth: \"700px\",\n    },\n    toast: {\n        padding: '10px',\n        fontSize: '14px',\n        \n    }\n}};\n\nexport default function NotifyPlace(){\n    return(\n        <div>\n            <ToastContainer style={styles.panel} toastStyle={styles.toast} />\n        </div>\n    )\n}\n\nexport type MsgType = 'error' | 'success' | 'info' | 'warning' | 'dark';\n\nconst notify = (message: string, type?: MsgType) => {\n    switch (type) {\n        case 'error':\n            toast.error(message);\n            break;\n        \n        case 'success':\n            toast.success(message);\n            break;\n        \n        case 'warning':\n            toast.warn(message);\n            break;\n        \n        case 'info':\n            toast.info(message);\n            break;\n\n        case 'dark':\n            toast.dark(message);\n            break;\n\n        default:\n            toast.error(message);\n            break;\n    }\n}\n\nexport { notify }","  \nimport { createIcon } from '../utils'\nexport const MetaMaskIcon = createIcon(\n    'MetaMask',\n    <>\n        <path\n            d=\"M0 12C0 5.373 5.373 0 12 0h24c6.627 0 12 5.373 12 12v24c0 6.627-5.373 12-12 12H12C5.373 48 0 42.627 0 36V12z\"\n            fill=\"#fff\"\n        />\n        <path\n            d=\"M38.709 10l-11.8 8.75 2.195-5.157L38.709 10z\"\n            fill=\"#E17726\"\n            stroke=\"#E17726\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n        />\n        <path\n            d=\"M11.493 10l11.694 8.832-2.09-5.239L11.494 10zM34.464 30.288l-3.14 4.807 6.722 1.855 1.926-6.557-5.508-.105zM10.247 30.393l1.914 6.557 6.71-1.855-3.127-4.807-5.497.105z\"\n            fill=\"#E27625\"\n            stroke=\"#E27625\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n        />\n        <path\n            d=\"M18.509 22.168l-1.867 2.824 6.652.303-.222-7.175-4.563 4.048zM31.696 22.168l-4.633-4.13-.152 7.257 6.652-.303-1.867-2.824zM18.872 35.095l4.027-1.948-3.466-2.707-.56 4.655zM27.31 33.147l4.014 1.948-.549-4.655-3.466 2.707z\"\n            fill=\"#E27625\"\n            stroke=\"#E27625\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n        />\n        <path\n            d=\"M31.322 35.095l-4.015-1.948.327 2.613-.035 1.108 3.723-1.773zM18.87 35.095l3.735 1.773-.023-1.108.315-2.613-4.026 1.948z\"\n            fill=\"#D5BFB2\"\n            stroke=\"#D5BFB2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n        />\n        <path\n            d=\"M22.674 28.713l-3.338-.98 2.358-1.085.98 2.065zM27.528 28.713l.98-2.065 2.37 1.085-3.35.98z\"\n            fill=\"#233447\"\n            stroke=\"#233447\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n        />\n        <path\n            d=\"M18.87 35.095l.583-4.806-3.71.104 3.127 4.702zM30.75 30.288l.571 4.807 3.14-4.701-3.712-.105zM33.566 24.992l-6.652.303.618 3.418.98-2.065 2.37 1.085 2.684-2.741zM19.336 27.733l2.357-1.085.98 2.065.619-3.418-6.652-.303 2.696 2.741z\"\n            fill=\"#CC6228\"\n            stroke=\"#CC6228\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n        />\n        <path\n            d=\"M16.64 24.992l2.79 5.448-.094-2.707-2.696-2.741zM30.874 27.733l-.105 2.707 2.79-5.448-2.685 2.741zM23.29 25.295l-.618 3.418.781 4.037.176-5.32-.339-2.135zM26.912 25.295l-.327 2.123.163 5.332.782-4.037-.619-3.418z\"\n            fill=\"#E27525\"\n            stroke=\"#E27525\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n        />\n        <path\n            d=\"M27.528 28.713l-.782 4.037.56.397 3.466-2.707.105-2.707-3.35.98zM19.336 27.733l.094 2.707 3.466 2.707.56-.397-.782-4.037-3.338-.98z\"\n            fill=\"#F5841F\"\n            stroke=\"#F5841F\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n        />\n        <path\n            d=\"M27.6 36.868l.035-1.108-.303-.257h-4.458l-.292.257.023 1.108-3.734-1.773 1.307 1.073L22.827 38h4.54l2.66-1.832 1.296-1.073-3.723 1.773z\"\n            fill=\"#C0AC9D\"\n            stroke=\"#C0AC9D\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n        />\n        <path\n            d=\"M27.308 33.147l-.56-.397h-3.29l-.561.397-.315 2.613.292-.257h4.458l.303.257-.327-2.613z\"\n            fill=\"#161616\"\n            stroke=\"#161616\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n        />\n        <path\n            d=\"M39.211 19.322l.992-4.83L38.71 10l-11.402 8.458 4.388 3.71 6.197 1.809 1.365-1.599-.595-.431.945-.864-.723-.56.945-.723-.619-.478zM10 14.492l1.004 4.83-.642.478.957.723-.724.56.945.864-.595.431 1.366 1.599 6.197-1.809 4.388-3.71L11.494 10 10 14.492z\"\n            fill=\"#763E1A\"\n            stroke=\"#763E1A\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n        />\n        <path\n            d=\"M37.896 23.977L31.7 22.168l1.867 2.824-2.789 5.448 3.688-.047h5.508l-2.077-6.416zM18.51 22.168l-6.198 1.809-2.065 6.416h5.496l3.688.047-2.789-5.448 1.867-2.824zM26.913 25.295l.397-6.837 1.797-4.865h-8.006l1.798 4.865.396 6.837.152 2.147.012 5.308h3.29l.013-5.308.151-2.147z\"\n            fill=\"#F5841F\"\n            stroke=\"#F5841F\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n        />\n    </>,\n    '0 0 48 48',\n)","\nimport SvgIcon from '@material-ui/core/SvgIcon'\nimport { ReactNode, forwardRef, memo } from 'react'\n\n/**\n * Create a icon from svg fragment\n * @internal\n * @param name Name of the Icon\n * @param svg SVG content. Do not include <svg> tag\n * @param viewBox The viewbox\n * @param defaultSize Only use this when the icon is not square. Unit: px\n * @returns A component that same type as icons from @material-ui/icons\n */\nexport function createIcon(\n    name: string,\n    svg: ReactNode,\n    viewBox?: string,\n    defaultSize?: [width: number | undefined, height: number | undefined],\n): typeof SvgIcon {\n    const [width, height] = defaultSize || []\n    if (width === height && typeof width === 'number') throw new Error('Only define this when the icon is not a square')\n    const Icon = function Icon({ sx, ...props }: any, ref: any) {\n        const style = defaultSize ? { width, height, ...sx } : sx\n        return <SvgIcon viewBox={viewBox} {...props} ref={ref} children={svg} sx={style} />\n    } as any\n    Icon.displayName = `Icon (${name})`\n    return memo(forwardRef(Icon)) as unknown as typeof SvgIcon\n}","/**** \n * improve: \n *  - [x] every button instance of this componet  must create its own isLoading and setIsLoading, this is ugly and unacceptable.\n *  - [ ] should provide css customize option for user\n *  - [ ] try export this as a standalone button for re-use\n */\nimport React, {useState, useEffect, useRef, CSSProperties} from \"react\";\nimport commonStyle from \"./common_style\";\nimport { useSpring, animated } from \"react-spring\";\nimport \"./button.css\";\n\nexport type Props = {\n    custom_style?: CSSProperties\n    isLoading?: boolean\n    text: string\n    onClick: () => void\n}\n\nconst styles = {...commonStyle, ...{\n    loader: {\n        border: '4px solid rgba(60, 198, 138, 0.2)',\n        borderLeft: '4px solid',\n        animation: 'load 1s infinite linear',\n        borderRadius: '50%',\n        width: '25px',\n        height: '25px',\n        margin: '0 auto'\n    },\n    btn: {\n        padding: '0.5rem 1rem',\n        fontSize: '12px',\n        color: 'white',\n        borderRadius: '6px',\n        border: '1px solid ' + commonStyle.main_color.color,\n        outline:'none',\n        backgroundColor: 'rgb(255,255,255, 0)',\n        cursor: 'pointer'\n    },\n    btndiv: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        height: '100%'\n    },\n    btn_hover: {\n        padding: '0.5rem 1rem',\n        fontSize: '12px',\n        color: 'white',\n        borderRadius: '6px',\n        border: '1px solid ' + commonStyle.main_color.color,\n        outline:'none',\n        backgroundColor: commonStyle.main_color.color,\n        cursor: 'pointer'\n    }\n}}\n\nconst Loader = () => <div style={styles.loader} />;\n\nexport default function FreshButton(props: Props){\n\n    /* Capture the dimensions of the button before the loading happens\n    so it doesn’t change size when showing the loader */\n    const [width, setWidth] = useState(0);\n    const [height, setHeight] = useState(0);\n    const ref = useRef<HTMLButtonElement>(null);\n\n\n    const isLoadingMissed = props.isLoading === undefined;\n\n    const [showLoader, setShowLoader] = useState(false);\n    const [isLoading, setIsLoading] = useState( isLoadingMissed ? false : props.isLoading);\n    const [isHover, setIsHover] = useState(false);\n\n    const extendedOnClick = async () => {\n      if(isLoadingMissed)setIsLoading(true);\n      await props.onClick();\n      if(isLoadingMissed)setIsLoading(false);\n    }\n\n    useEffect(() => {\n        if(props.isLoading !== undefined)\n          setIsLoading(props.isLoading);\n\n        if (isLoading) {\n          setShowLoader(true);\n        }\n    \n        // Show loader a bits longer to avoid loading flash\n        if (!isLoading && showLoader) {\n          const timeout = setTimeout(() => {\n            setShowLoader(false);\n          }, 400);\n    \n          return () => {\n            clearTimeout(timeout);\n          };\n        }\n      }, [props.isLoading, isLoading, showLoader]);\n  \n    // Hooks used to fade in/out the loader or the button contents\n    const fadeOutProps = useSpring({ opacity: showLoader ? 1 : 0 });\n    const fadeInProps = useSpring({ opacity: showLoader ? 0 : 1 });\n    \n    /*\n    useEffect(() => {\n        if (ref.current && ref.current.getBoundingClientRect().width) {\n          setWidth(ref.current.getBoundingClientRect().width);\n        }\n        if (ref.current && ref.current.getBoundingClientRect().height) {\n          setHeight(ref.current.getBoundingClientRect().height);\n        }\n      }, [props.text]);\n    */\n\n    const toogleHover = () => {\n        setIsHover(!isHover);\n    }\n\n    const wh_style = width && height\n    ? {\n        width: `${width}px`,\n        height: `${height}px`,\n      }\n    : {};\n    const hover_style = isHover ? styles.btn_hover : styles.btn;\n    const btn_style = {...hover_style, ...wh_style};\n    const mystyle = props.custom_style === \"undefined\" ? {} : props.custom_style; \n    const final_style = {...btn_style, ...mystyle};\n\n    return(\n      <button style={final_style} onClick={extendedOnClick} onMouseEnter={toogleHover} onMouseLeave={toogleHover} ref={ref} >\n      {showLoader ? (\n            <animated.div style={fadeOutProps}>\n              <Loader />\n            </animated.div>\n          ) : (\n            <animated.div style={fadeInProps}>{props.text}</animated.div>\n      )}\n      </button>\n    )\n}","import axios from 'axios';\nimport config from '../config/constant.json';\nimport util from '../utils/index';\n\naxios.defaults.withCredentials = false;\n\nexport default class Web3Api{\n\n    url: string;\n\n    constructor(){\n        this.url = config.web3_server_url;\n    };\n\n    async getPolyjucieContractTypeHash(){\n      let response = await axios.post(this.url, {\n          jsonrpc: '2.0',\n          id: + new Date(),\n          method: 'poly_getContractValidatorTypeHash',\n          params: [],\n      }, {\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          \n      });\n      return response.data;\n    }\n\n    \n    async getCreatorId(){\n      let response = await axios.post(this.url, {\n          jsonrpc: '2.0',\n          id: + new Date(),\n          method: 'poly_getCreatorId',\n          params: [],\n      }, {\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          \n      });\n      return response.data;\n    }\n\n    async getChainId(){\n      let response = await axios.post(this.url, {\n          jsonrpc: '2.0',\n          id: + new Date(),\n          method: 'eth_chainId',\n          params: [],\n      }, {\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          \n      });\n      return response.data;\n    }\n\n    async getBalance(eth_address: string){\n        let response = await axios.post(this.url, {\n            jsonrpc: '2.0',\n            id: + new Date(),\n            method: 'eth_getBalance',\n            params: [eth_address, \"pending\"],\n        }, {\n              headers: {\n                'Content-Type': 'application/json',\n              },\n            \n        });\n        return response.data.result;\n    }\n\n    async getTransactionReceipt(tx_hash: string){\n        let response = await axios.post(this.url, {\n            jsonrpc: '2.0',\n            id: + new Date(),\n            method: 'eth_getTransactionReceipt',\n            params: [tx_hash],\n        }, {\n              headers: {\n                'Content-Type': 'application/json',\n              },\n        });\n        return response.data.result;\n    }\n\n    async waitForTransactionReceipt(tx_hash: string, timeout: number = 300, loopInterval = 3){\n      for (let index = 0; index < timeout; index += loopInterval) {\n          \n          const tx_receipt = await this.getTransactionReceipt(\n            tx_hash\n          );\n\n          console.log(`keep fetching tx_receipt with ${tx_hash}, waited for ${index} seconds`);\n          await util.asyncSleep(loopInterval * 1000);\n  \n          if (tx_receipt !== null) {\n            return;\n          }\n        }\n        throw new Error(`cannot fetch tx_receipt with tx ${tx_hash} in ${timeout} seconds`);;\n    }\n}\n","import React, { useEffect, useState } from 'react';\nimport { MetaMaskIcon } from './icon'\nimport MetaMaskOnboarding from '@metamask/onboarding';\nimport { notify } from '../notify';\nimport FreshButton from '../fresh_button';\nimport NetworkCheckIcon from '@material-ui/icons/NetworkCheck';\nimport LinkIcon from '@material-ui/icons/Link';\nimport LinkOffIcon from '@material-ui/icons/LinkOff';\nimport Web3Api from '../../../api/web3';\nimport Api from '../../../api/index';\nimport utils, { asyncSleep } from '../../../utils/index';\n\nconst styles = {\n  wallet_container: {\n    maxWidth: '300px',\n    maxHeigth: '20px',\n    margin: '20px auto',\n    display: 'flex' as const,\n    padding: '5px',\n    alignItems: 'center' as const,\n    borderRadius: '30px',\n    justifyContent: 'center',\n    backgroundColor: 'rgb(60, 198, 138)',\n  },\n  status: {\n    fontSize: '18px', \n    color: 'gray',\n    margin: '20px',\n  },\n  status_item: {\n    boder: '1px solid gray',\n    padding: '5px',\n    marginRight: '10px',\n  },\n  balance: {\n    color: 'whitesmoke',\n    fontSize: '20px',\n  },\n  dark_green: {\n    color: '#065a06'\n  }\n}\n\nexport type WalletStatus = \n   | 'connect-failed' // metamask account status\n   | 'diconnect' // metamask account status \n   | 'connected' // metamask account status\n   | 'not-installed' \n   | 'installed'\n  \nexport interface WalletProps {\n  onUpdateWalletAddress?: (wallet_addr: string | undefined) => void\n  updateBalanceTrigger?: number\n  updateChainId?: (chainId: string) => void\n}\n\nexport default function Wallet (props: WalletProps) {\n\n    const { onUpdateWalletAddress, updateChainId: getChainIdCallback } = props;\n    var { updateBalanceTrigger } = props;\n\n    const [chainId, setChainId] = useState<string>();\n    const [selectedAddress, setSelectedAddress] = useState<string>();\n    const [metamaskStatus, setMetamaskStatus] = useState<WalletStatus>();\n    const [chainIdStatus, setChainIdStatus] = useState<boolean>();\n    const [networkStatus, setNetworkStatus] = useState<boolean>(true); // todo: remove initail value\n    const [balance, setBalance] = useState<string>('0');\n\n    const WrongChainTips = <span style={{color: 'red'}}> <LinkOffIcon />  wrong network </span>\n    const RightChainTips = <span style={{color: styles.dark_green.color}}> <LinkIcon /> Polyjucie ☑️ </span> \n    const DisconnectedNetworkTips = <span style={{color: 'red'}}> <NetworkCheckIcon></NetworkCheckIcon> Disconnected </span>\n    const ConnectedNetworkTips = <span style={{color: styles.dark_green.color}}> <NetworkCheckIcon></NetworkCheckIcon> Connected </span> \n\n    const init = async () => {\n        if( !isMetaMaskOnborad() ){\n            notify(\"please install MetaMask!\");\n            throw new Error(\"please install MetaMask!\");\n        }\n\n        if( window.ethereum.isConnected() ){\n          setNetworkStatus(true);\n        }\n\n        await fetchChainId();\n        \n        await checkChainIdIsOk();\n\n        listenForChainIdChanged();\n        listenForAccountChanged();\n        listenForNetworkChanged();\n\n        connectMetamask();\n    }\n\n    const getProvider = () => {\n        return window.ethereum;   \n    }\n\n    const fetchChainId = async () => {\n      const current_chain_id = await window.ethereum.request({ method: 'eth_chainId' });\n      await setChainId(current_chain_id);\n      if(getChainIdCallback){\n        getChainIdCallback(current_chain_id);\n      }\n      return current_chain_id;\n    }\n\n    const isMetaMaskOnborad = async () => {\n      if (MetaMaskOnboarding.isMetaMaskInstalled()) {\n        await setMetamaskStatus('installed');\n        return true;\n      }else{\n        await setMetamaskStatus('not-installed');\n        return false;\n      }\n    }\n\n    const checkChainIdIsOk = async () => {\n        try {\n          const current_chain_id = await fetchChainId();\n          console.log(`current chain id: ${current_chain_id}`);\n          const api = new Api(); \n          const res = await api.getChainId();\n          console.log(res);\n          const chain_id = res.data;\n          if(current_chain_id !== chain_id){\n            console.error(`current chain id not equals ${current_chain_id} !== polyjuice chain id ${chain_id}`);\n            await setChainIdStatus(false);\n//            notify('wrong network!');\n            return false\n          }\n          await setChainIdStatus(true);\n          return true;\n        } catch (error) {\n          notify(JSON.stringify(error, null, 2));\n          return false;\n        }\n    }\n\n    const listenForChainIdChanged = () => {\n        window.ethereum.on('chainChanged', handleChainChanged);\n        function handleChainChanged(_chainId: string) {\n          console.log('chain_id changed!');\n          setChainId(_chainId);\n          window.location.reload();\n        }\n    }\n\n    const listenForAccountChanged = () => {\n      window.ethereum.on('accountsChanged', handleAccountChanged);\n      function handleAccountChanged(account: string) {\n        if(account.length > 0)\n          setSelectedAddress(account[0]);\n        else{\n          setSelectedAddress(undefined);\n          setMetamaskStatus('diconnect');\n          notify('please reconnect to metamask!');\n        }\n      } \n    }\n\n    // todo: the connect event seems not emit forever\n    const listenForNetworkChanged = () => {\n      window.ethereum.on('connect', handleConnect);\n      function handleConnect() {\n        console.log('connect!!!');\n        setNetworkStatus(true);\n      } \n\n      window.ethereum.on('disconnect', handleDisconnect);\n      function handleDisconnect() {\n        setNetworkStatus(false);\n      } \n    }\n\n    const connectMetamask = async () => {\n      try {\n        await window.ethereum.request({ method: 'eth_requestAccounts' });\n        setMetamaskStatus('connected');\n        setSelectedAddress(window.ethereum.selectedAddress);\n      } catch (error) {\n        notify(JSON.stringify(error, null, 2));\n        setMetamaskStatus('connect-failed');\n        console.error(error);\n      }\n    }\n\n    const getBalance = async () => {\n      if(!selectedAddress)return;\n      const web3Api = new Web3Api(); \n      try {\n        const data = await web3Api.getBalance(selectedAddress);\n        if(!data)\n          return console.log(`balance is undefinded.`);\n        \n        const newBalance = BigInt(data).toString();\n        if(balance === utils.shannon2CKB(newBalance)){\n          // wait 20 secs to refresh balance\n          console.log('balance not changed, wait for 20 secs to re-fetch..');\n\n          await asyncSleep(20000);\n          const data = await web3Api.getBalance(selectedAddress);\n          if(!data)\n            return console.log(`balance is undefinded.`);\n        \n          const newBalance = BigInt(data).toString();\n          await setBalance(utils.shannon2CKB(newBalance));\n          console.log('try refresh balance..', utils.shannon2CKB(newBalance), '');\n          return;\n        }\n\n        await setBalance(utils.shannon2CKB(newBalance));\n        console.log('try refresh balance..', utils.shannon2CKB(newBalance), '');\n      } catch (error) {\n        console.log(`get bablance error`);\n        console.log(error);\n        notify(JSON.stringify(error));\n      }\n    }\n\n    const toEthBalance = (ckb_balance: string) => {\n      const ckb = parseFloat(ckb_balance);\n      const eth = ckb / parseFloat('10000000000');\n      if(eth > 0)\n        return eth.toFixed(10 - ckb_balance.length + 1);\n      else\n        return eth.toFixed(2);\n    }\n\n    useEffect( () => {\n        init();\n        getBalance();\n    }, []);\n\n    useEffect(()=> {\n      getBalance();\n    }, [updateBalanceTrigger]);\n\n    useEffect( () => {\n      if(onUpdateWalletAddress)\n        onUpdateWalletAddress(selectedAddress);\n      \n      getBalance();\n    }, [selectedAddress] );\n\n    const displayShortEthAddress = (eth_address: string) => {\n      const length = eth_address.length;\n      if(length !== 42){\n        return eth_address;\n      }\n      return eth_address.slice(0,8) + '...' + eth_address.slice(length - 6);\n    }\n\n    return(\n        <div>\n          <div style={styles.wallet_container}>\n            <MetaMaskIcon />\n            <FreshButton \n              custom_style={{fontSize: '25px', fontWeight: 'bolder', border: 'none' }}\n              text={ displayShortEthAddress(selectedAddress ? selectedAddress : 'Connect Wallet') } \n              onClick={ selectedAddress ? function(){} : connectMetamask } />\n          </div>\n{/*       <div style={styles.status}>\n            <span style={styles.status_item}>\n              { chainIdStatus ? RightChainTips : WrongChainTips }\n            </span>\n            <span style={styles.status_item}> \n              { networkStatus ?  ConnectedNetworkTips : DisconnectedNetworkTips }\n            </span>\n          </div>\n*/}\n          <div>\n            <div style={styles.balance}> <span>{balance} CKB ( {toEthBalance(balance)}  pETH )</span></div>\n          </div>\n        </div>\n    )\n}\n","import React from \"react\";\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport { Paper } from \"@material-ui/core\";\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      style={{\n        minHeight: \"400px\",\n      }}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction a11yProps(index: any) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.grey[100],\n    color: theme.palette.common.black\n  },\n}));\n\nexport interface SimpleTabsProps {\n  names: string[];\n  tabs: React.ReactNode[];\n}\n\nexport default function SimpleTabs(props: SimpleTabsProps) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const { names, tabs } = props;\n\n  const tabsNameJsx = names.map((name, index) => {\n    return <Tab label={name} {...a11yProps(index)} />;\n  });\n\n  const tabPanelJsx = tabs.map((tab, index) => {\n    return (\n      <TabPanel value={value} index={index}>\n        {tab}\n      </TabPanel>\n    );\n  });\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Paper square>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          aria-label=\"simple tabs example\"\n          centered={true}\n        >\n          {tabsNameJsx}\n        </Tabs>\n      </Paper>\n      { tabPanelJsx } \n    </div>\n  );\n}\n","import {\n  TableContainer,\n  Paper,\n  Table,\n  TableHead,\n  TableRow,\n  TableBody,\n  TableCell,\n  makeStyles,\n  Link,\n  Typography,\n  Grid,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { notify } from \"../notify\";\nimport Web3Api from \"../../../api/web3\";\nimport Api from \"../../../api/index\";\nimport { gruvboxDark } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport common_styles from \"../common_style\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\n\nconst useStyles = makeStyles({\n  root: {\n    textAlign: \"left\" as const,\n  },\n});\n\nexport interface EthAccountLockConfig {\n  code_hash: string;\n  hash_type: \"data\" | \"type\";\n}\n\nexport default function ChainInfo() {\n  const classes = useStyles();\n\n  const [rollupTypeHash, setRollupTypeHash] = useState<string>();\n  const [ethAccountLockConfig, setEthAccountLockConfig] =\n    useState<EthAccountLockConfig>();\n  const [chainId, setChainId] = useState<string>();\n  const [creatorId, setCreatorId] = useState<string>();\n  const [contractTypeHash, setContractTypeHash] = useState<string>();\n  const [serverConfig, setServerConfig] = useState<any>();\n\n  const getChainId = async () => {\n    const web3Api = new Web3Api();\n    try {\n      const data = await web3Api.getChainId();\n      console.log(data);\n      if (data.error) return notify(`failed to get chain id, `, data.error);\n\n      await setChainId(data.result);\n    } catch (error) {\n      console.log(`get chain id error`);\n      console.log(error);\n      notify(error.message);\n    }\n  };\n\n  const getCreatorId = async () => {\n    const web3Api = new Web3Api();\n    try {\n      const data = await web3Api.getCreatorId();\n      console.log(data);\n      if (data.error) return notify(`failed to get creator id, `, data.error);\n\n      await setCreatorId(data.result);\n    } catch (error) {\n      console.log(`get creator id error`);\n      console.log(error);\n      notify(error.message);\n    }\n  };\n\n  const getPolyjuiceContractValidatorTypeHash = async () => {\n    const web3Api = new Web3Api();\n    try {\n      const data = await web3Api.getPolyjucieContractTypeHash();\n      console.log(data);\n      if (data.error)\n        return notify(\n          `failed to get polyjuice contract validator type hash, `,\n          data.error\n        );\n\n      await setContractTypeHash(data.result);\n    } catch (error) {\n      console.log(`get creator id error`);\n      console.log(error);\n      notify(error.message);\n    }\n  };\n\n  const getRollupTypeHash = async () => {\n    const api = new Api();\n    try {\n      const res = await api.getRollupTypeHash();\n      if (res.status !== \"ok\")\n        return notify(\n          `failed to get rollup type hash. ${JSON.stringify(res.error)}`\n        );\n      setRollupTypeHash(res.data);\n    } catch (error) {\n      console.log(`get rollup type hash error`);\n      console.log(error);\n      notify(error.message);\n    }\n  };\n\n  const getEthAccountLockConfig = async () => {\n    const api = new Api();\n    try {\n      const res = await api.getEthAccountLockConfig();\n      if (res.status !== \"ok\")\n        return notify(\n          `failed to get eth_account_lock config. ${JSON.stringify(res.error)}`\n        );\n      setEthAccountLockConfig(res.data);\n    } catch (error) {\n      console.log(`get eth account lock error`);\n      console.log(error);\n      notify(error.message);\n    }\n  };\n\n  const getServerConfig = async () => {\n    const api = new Api();\n    try {\n      const res = await api.getServerConfig();\n      if (res.status !== \"ok\")\n        return notify(\n          `failed to get server config. ${JSON.stringify(res.error)}`\n        );\n      setServerConfig(res.data);\n    } catch (error) {\n      console.log(`get server config error`);\n      console.log(error);\n      notify(error.message);\n    }\n  };\n\n  useEffect(() => {\n    getChainId();\n    getCreatorId();\n    getRollupTypeHash();\n    getEthAccountLockConfig();\n    getPolyjuiceContractValidatorTypeHash();\n    getServerConfig();\n  }, []);\n\n  const AllApis = `\n  ## Web3 Api\n  EndPoint:  ${new Web3Api().url}\n  - ChainInfo: JsonRpc 2.0, poly_getChainInfo\n  - RollupTypeHash: JsonRpc 2.0, poly_getRollupTypeHash \n  - RollupConfigHash: JsonRpc 2.0, poly_getRollupConfigHash\n  - EthAccountLockHash: JsonRpc 2.0, poly_getEthAccountLockHash  \n  - PolyjuiceContractTypeHash: JsonRpc 2.0, poly_getContractValidatorTypeHash\n\n  ## Kicker Api\n  EndPoint:  ${new Api().getUrl()}\n  - RollupTypeHash: Http Get, ${new Api().getUrl()}/get_rollup_type_hash \n  - EthAccountLock: Http Get, ${new Api().getUrl()}/get_eth_account_lock\n  - DepositWithEthAddress: Http Get, ${new Api().getUrl()}/deposit?eth_address=<your eth address>\n  \n  ## Godwoken JsonRpc\n  EndPoint: http://localhost:8119\n\n  ## CKB JsonRpc\n  EndPoint: http://localhost:8114\n  `;\n\n  function createData(name: string, value: string | undefined) {\n    return { name, value };\n  }\n\n  const chainInfoRows = [\n    createData(\"Chain ID\", chainId),\n    createData(\"Polyjuice Creator_id(CKB)\", creatorId),\n    createData(\"Rollup Script Hash\", rollupTypeHash),\n    createData(\"ETH Account Lock Hash\", ethAccountLockConfig?.code_hash),\n    createData(\"Polyjuice Contract Type Hash\", contractTypeHash),\n  ];\n\n  const chainInfoTable = (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow></TableRow>\n        </TableHead>\n        <TableBody>\n          {chainInfoRows.map((row) => (\n            <TableRow key={row.name}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell>{row.value}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n\n  function createSystemWalletData(\n    name: string,\n    addr: string | undefined,\n    pk: string | undefined\n  ) {\n    return { name, addr, pk };\n  }\n\n  const systemWalletRows = [\n    createSystemWalletData(\"Type\", \"CKB Address\", \"Private Key\"),\n    createSystemWalletData(\n      \"the only and lonely CKB miner\",\n      serverConfig?.miner_ckb_devnet_addr,\n      serverConfig?.miner_private_key\n    ),\n    createSystemWalletData(\n      \"the only and lonely Godwoken miner\",\n      serverConfig?.miner_ckb_devnet_addr,\n      serverConfig?.miner_private_key\n    ),\n    createSystemWalletData(\n      \"the meta-user to create everything\",\n      serverConfig?.user_ckb_devnet_addr,\n      serverConfig?.user_private_key\n    ),\n  ];\n\n  const systemWalletTable = (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow></TableRow>\n        </TableHead>\n        <TableBody>\n          {systemWalletRows.map((row) => (\n            <TableRow key={row.name}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell>{row.addr}</TableCell>\n              <TableCell>{row.pk}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n\n  const ApiInfo = (\n    <Grid container spacing={3}>\n      <Grid item xs={12}>\n        <Typography>Some Apis</Typography>\n        <SyntaxHighlighter language=\"md\" style={gruvboxDark}>\n          {AllApis}\n        </SyntaxHighlighter>\n      </Grid>\n    </Grid>\n  );\n\n  return (\n    <div className={classes.root}>\n      <Typography>\n        <Link target=\"_blank\" href={`/godwoken_info`}>\n          Full Rollup Configs\n        </Link>\n      </Typography>\n      <br />\n      {chainInfoTable}\n\n      <br />\n      <br />\n\n      <Typography>System Pre-defined Wallets</Typography>\n      <br />\n      {systemWalletTable}\n\n      <br />\n      <br />\n\n      {ApiInfo}\n    </div>\n  );\n}\n","import {\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Grid,\n  Theme,\n  makeStyles,\n  createStyles,\n  Typography,\n  ThemeProvider,\n  Input,\n  TextField,\n  Paper,\n} from \"@material-ui/core\";\nimport React, { useRef, useState } from \"react\";\nimport Api from \"../../../api\";\nimport FreshButton from \"../fresh_button\";\nimport { notify } from \"../notify\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      fontSize: \"18px\",\n      textAlign: \"center\" as const,\n      minHeight: \"400px\",\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 400,\n      fontSize: \"18px\",\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    formControlButton: {\n      paddingTop: \"20px\",\n      minWidth: 150\n    },\n    hint: {\n      width: \"100%\",\n      textAlign: \"center\" as const,\n      fontSize: \"10px\",\n      color: \"gray\",\n    },\n  })\n);\n\nconst styles = {\n  freshBtn: {\n    fontSize: \"18px\",\n    color: \"black\",\n    height: \"40px\",\n  },\n};\n\nexport interface DepositProps {\n  addressVec: (string | undefined)[];\n  updateBalanceTrigger?: () => void;\n}\n\nexport default function Accounts(props: DepositProps) {\n  const classes = useStyles();\n  const { addressVec, updateBalanceTrigger } = props;\n  const [selectedAddress, setSelectedAddress] = React.useState(\"\");\n  const [hints, setHints] = useState<string>(\"\");\n  const inputEthAddressRef = useRef<HTMLInputElement>();\n\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setSelectedAddress(event.target.value as string);\n  };\n\n  const addressItems = addressVec.map(\n    (addr: string | undefined, index: number) => {\n      return <MenuItem value={addr}>{addr}</MenuItem>;\n    }\n  );\n\n  const deposit = async () => {\n    if (!selectedAddress) return notify(`please select a eth address to deposit.`);\n    await _deposit(selectedAddress);\n  };\n\n  const deposit2 = async () => {\n    const addr = inputEthAddressRef?.current?.value;\n    if (!addr || addr.length != 42) return notify(`invalid eth address.`);\n    await _deposit(addr);\n  };\n\n  const _deposit = async (ethAddress: string) => {\n    const api = new Api();\n    try {\n      setHints(\"try submitting a deposit transaction, might takes couple mitutes...\");\n      const res = await api.deposit(ethAddress);\n      console.log(\"deposit result =>\", res);\n      if (res.status === \"ok\") {\n        notify(\n          `deposit success! your account id: ${res.data.account_id}.`,\n          \"success\"\n        );\n        if(updateBalanceTrigger) updateBalanceTrigger();\n      } else {\n        notify(JSON.stringify(res.error));\n      }\n      setHints(\"\");\n    } catch (error) {\n      notify(JSON.stringify(error));\n      setHints(JSON.stringify(error.message));\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Paper>\n        <Grid container spacing={4}>\n          <Grid item xs={12}>\n            <Typography variant=\"h4\" gutterBottom>\n              Create && Desposit\n            </Typography>\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"demo-simple-select-label\">\n                selectAddress\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={selectedAddress}\n                onChange={handleChange}\n              >\n                {addressItems}\n              </Select>\n            </FormControl>\n            <FormControl className={classes.formControlButton}>\n              <FreshButton\n                custom_style={styles.freshBtn}\n                text={\"Deposit 400 CKB\"}\n                onClick={deposit}\n              />\n            </FormControl>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography>Or Input Other Eth Address: </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <FormControl className={classes.formControl}>\n              <TextField\n                id=\"standard-basic\"\n                label=\"ethAddress\"\n                inputRef={inputEthAddressRef}\n              />\n            </FormControl>\n            <FormControl className={classes.formControlButton}>\n              <FreshButton\n                custom_style={styles.freshBtn}\n                text={\"Deposit 400 CKB\"}\n                onClick={deposit2}\n              />\n            </FormControl>\n          </Grid>\n          <div className={classes.hint}>\n            <Typography>{hints}</Typography>\n          </div>\n        </Grid>\n      </Paper>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { toWei, AbiItem } from 'web3-utils';\nimport Web3Api from '../../../api/web3'\nimport {notify} from '../notify';\nimport commonStyle from '../common_style';\nimport utils from '../../../utils/index';\nimport config from '../../../config/constant.json';\nimport Web3 from 'web3';\nimport { PolyjuiceHttpProvider, PolyjuiceConfig} from \"@polyjuice-provider/web3\";\n\nconst Web3EthAbi = require('web3-eth-abi');\n\ndeclare global {\n    interface Window { ethereum: any; }\n}\n\nconst styles = {...commonStyle, ...{\n    container: {\n        \n    },\n    method_item: {\n        textAlign: 'left' as const,\n        maxWidth: '700px',\n        margin: '0 auto',\n    },\n    method_box: {\n        fontSize: '14px',\n        border: '1px solid gray',\n        padding: '20px',\n        textAlign: 'left' as const,\n        maxWidth: '700px',\n        margin: '0 auto',\n        display: 'block',\n    },\n    method_name: {\n        textAlign: 'left' as const, \n        fontSize: '16px', \n        padding: '10px 0',\n        color: commonStyle.main_color.color\n    },\n    return_value: {\n        border: '1px solid gray', \n        padding: '5px',\n    },\n    param_input: {\n        width: '100%',\n        padding: '5px',\n    },\n    submit_btn: {\n        padding: '5px',\n    },\n    select_abi_file: {\n        fontSize: '14px',\n\n    },\n    contract_addr_input_container: {\n        maxWidth: '600px',\n        margin: '0 auto',\n    },\n    contract_addr_input: {\n        width: '100%',\n        padding: '5px',\n        fontSize: '16px',\n    },\n    setting_container: {\n        maxWidth: '700px',\n        border: '1px solid gray',\n        margin: '10px auto',\n        padding: '10px 0',\n    },\n    log_container: {\n        maxWidth: '700px',\n        border: '1px solid gray',\n        margin: '10px auto',\n        padding: '10px 0',\n        textAlign: 'left' as const,\n    },\n    log_container_title: {\n        fontSize: '16px',\n        color: commonStyle.main_color.color,\n        textAlign: 'center' as const,\n    },\n    log_main_area: {\n        fontSize: '14px',\n        textAlign: 'left' as const,\n        padding: '10px',\n        margin: '5px',\n    }\n}\n}\n\nconst SIMPLE_STORAGE_ABI: AbiItem[] = []\n\nexport type ContractDebbugerProps = {\n    godwoken_config: {\n        rollup_type_hash: string | undefined,\n        eth_account_lock_code_hash: string | undefined,\n        eth_account_lock_hash_type: string | undefined,\n    }\n}\n\nexport default function ContractDebbuger (props: ContractDebbugerProps) {\n\n    const { rollup_type_hash, eth_account_lock_code_hash, eth_account_lock_hash_type } = props.godwoken_config;\n    \n    const web3Api = new Web3Api();\n    const [abi, setAbi] = useState<AbiItem[]>(SIMPLE_STORAGE_ABI);\n    const [contractAddr, setContractAddr] = useState<string>();\n\n    const [callLogs, setCallLogs] = useState<string[]>([]);\n    \n    useEffect(()=> {\n        \n    }, []);\n\n    const init_web3_provider = () => {\n        const godwoken_web3_rpc_url = config.web3_server_url;\n        const provider_config: PolyjuiceConfig = {\n          rollupTypeHash: rollup_type_hash || '',\n          ethAccountLockCodeHash: eth_account_lock_code_hash || '', \n          abiItems: abi,\n          web3Url: godwoken_web3_rpc_url \n        };\n        const provider = new PolyjuiceHttpProvider(\n          godwoken_web3_rpc_url,\n          provider_config,\n        );\n        var web3 = new Web3(provider);\n        return web3;\n    }\n\n    const readContractAbiFile = async (event: any) => {\n        const codefile = event.target.files[0]; \n        const res: any = await utils.readDataFromFile(codefile);\n        console.log(res);\n        if(res.status !== 'ok'){\n          notify(`can not read contract abi from file.`);\n          throw new Error(\"can not read contract abi from file.\");\n        };\n\n        const data = JSON.parse(res.data);\n        if ( Array.isArray(data) ){\n            // todo: validate abi\n            return data;\n        }else if( typeof data === 'object' && data.abi ){\n            // todo: validate abi\n            return data.abi;\n        }else{\n            notify(`not a valid abi file!`);\n            throw new Error(\"not a valid abi file!\");\n        }\n    }\n\n    const handleAbiFileChange = async (event: any) => {\n        const abi = await readContractAbiFile(event);\n        await setAbi(abi);\n    }\n\n    const handleContractAddrChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setContractAddr(event.target.value);\n    }\n\n    const method_list = (abi: AbiItem[]) => {\n        \n        return abi.filter( (item) => item.type === 'function' ).map( (item: AbiItem, item_index: number) => \n        {\n            var input_params: string[] = [];\n            var output_values: string[] = [];\n            var payable_value_in_wei: string = '0';\n\n            const hanleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n                input_params[parseInt(event.target.name)] = event.target.value;\n            }\n\n            const hanlePayableValueChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n                console.log(event.target.value);\n                payable_value_in_wei = toWei(event.target.value);\n            }\n\n            const assemble_tx = async (abi_item: AbiItem, input_params: string[]) => {\n                if (abi_item.type !== 'function')\n                    throw new Error(\"expect a function\");\n        \n                if (abi_item.stateMutability === 'view') {\n                    try {\n                        await assemble_call_view_tx(abi_item, input_params);   \n                    } catch (error) {\n                        console.log(error);\n                        notify(JSON.stringify(error, null, 2));   \n                    }\n                }\n        \n                if (abi_item.stateMutability !== 'view') {\n                    try {\n                        await assemble_send_payable_tx(abi_item, input_params); \n                    } catch (error) {\n                        notify(JSON.stringify(error, null, 2));   \n                    }\n                }\n            }\n        \n            const assemble_call_view_tx = async (item: AbiItem, input_params: string[]) => {\n                const data = Web3EthAbi.encodeFunctionCall(item, input_params);\n                const eth_tx = {\n                  gasPrice: '0x0000', \n                  gas: '0x9184e72a000', \n                  to: contractAddr || '0x'+'0'.repeat(40), \n                  from: window.ethereum.selectedAddress, \n                  data: data, \n                };\n                console.log(eth_tx);\n                // const result = await window.ethereum.request({\n                //   method: 'eth_call',\n                //   params: [eth_tx],\n                // });\n                const web3 = init_web3_provider();\n                const result = await web3.eth.call(eth_tx);\n                console.log(`web3.eth.call result: ${JSON.stringify(result, null, 2)}`);\n                const decode_res_arr = Web3EthAbi.decodeParameters(item.outputs?.map(o=>o.type), result);\n                console.log(decode_res_arr);\n                for(let i = 0; i < decode_res_arr.__length__; i++){\n                    output_values[i] = decode_res_arr[i+'']; \n                }\n                console.log(output_values);\n                 \n                // notify user the result\n                notify(JSON.stringify(output_values, null, 2), 'success');\n                // update return value in the global log state\n                await setCallLogs(oldArray => [...oldArray, `call \"${item.name}\", receive return value: ${JSON.stringify(output_values)}`]);\n            }\n        \n            const assemble_send_payable_tx = async (item: AbiItem, input_params: string[]) => {\n                const data = Web3EthAbi.encodeFunctionCall(item, input_params);\n                console.log(payable_value_in_wei);\n                const value = item.payable ? '0x' + BigInt(payable_value_in_wei).toString(16) : '0x00';\n                const eth_tx = {\n                  gasPrice: '0x0000', // customizable by user during MetaMask confirmation.\n                  gas: '0x9184e72a000', // customizable by user during MetaMask confirmation.\n                  to: contractAddr || '0x'+'0'.repeat(40), // Required except during contract publications.\n                  from: window.ethereum.selectedAddress, // must match user's active address.\n                  value: value, // Only required to send ether to the recipient from the initiating external account.\n                  data: data, // Optional, but used for defining smart contract creation and interaction.\n                };\n                console.log(eth_tx); \n                // const txHash = await window.ethereum.request({\n                //   method: 'eth_sendTransaction',\n                //   params: [eth_tx],\n                // });\n                const web3 = init_web3_provider();\n                const txReceipt = await web3.eth.sendTransaction(eth_tx);\n                console.log(`txReceipt: ${JSON.stringify(txReceipt, null, 2)}`);\n                // notify user the result\n                notify('tx commited. open your console page to check txReceipt.', 'success');\n                // update return value in the global log state\n                await setCallLogs(oldArray => [...oldArray, `call \"${item.name}\", tx ${txReceipt.transactionHash} commited.`]);\n            }\n        \n            const getEthTxReceipt = async (txHash: string) => {\n                console.log(`txHash: ${txHash}`);\n                await web3Api.waitForTransactionReceipt(txHash);\n                const txReceipt = await web3Api.getTransactionReceipt(txHash); \n                console.log(`txReceipt: ${JSON.stringify(txReceipt, null, 2)}`);\n                return txReceipt;\n            }\n\n            return ( \n            <div style={styles.method_item}>\n                <span style={styles.method_name}> {item_index + 1}. {item.name} </span>\n                <li key={item_index} style={styles.method_box}>\n                { item.payable  && (\n                    <p>\n                       <input style={styles.param_input} onChange={hanlePayableValueChange} name={\"value_\"+item_index} type=\"text\" placeholder=\"value: ETH\" />  \n                    </p>\n                )}\n                <p> {item.inputs?.map( (input, i) => {\n                    input_params.push('');\n                    return <li key={\"intputs_\"+i}>\n                     <p> \n                       <input style={styles.param_input} onChange={hanleChange} name={i+''} type=\"text\" placeholder={input.type} /> \n                     </p>\n                    </li>\n                } )} \n                </p>\n\n                <button style={styles.submit_btn} onClick={()=>{assemble_tx(item, input_params)}}> { item.stateMutability === 'view' ? \"call\" : \"send tx\" } </button>\n            </li> </div>)\n        })\n    }\n    \n    return(\n        <div style={styles.container}>\n            <div style={styles.setting_container}>\n                <p style={styles.select_abi_file}>\n                <label>Upload Contract ABI：</label>\n                    <input\n                      type=\"file\"\n                      placeholder=\"abi file\"\n                      onChange={handleAbiFileChange}\n                    />\n                </p>\n                <p style={styles.contract_addr_input_container}>\n                   <input type=\"text\" placeholder=\"enter contract address..\" style={styles.contract_addr_input} onChange={handleContractAddrChange} />\n                </p>\n            </div>\n\n            <div style={styles.log_container}>\n                <div style={styles.log_container_title}> Call Logs </div>\n                <div style={styles.log_main_area}>\n                    {\n                       callLogs.map((log,i)=><li key={i}>{i}: {log}</li>)\n                    }\n                </div>\n            </div>\n            \n           { method_list(abi) } \n        </div>\n    )\n}\n","import { Grid, Typography, Divider } from \"@material-ui/core\";\nimport React, { useRef, useState } from \"react\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { gruvboxDark } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport common_styles from \"../common_style\";\nimport utils from \"../../../utils/index\";\nimport ContractDebugger from \"../contract-debugger/ContractDebugger\";\nimport FreshButton from \"../fresh_button\";\nimport { notify } from \"../notify\";\nimport config from \"../../../config/constant.json\";\nimport Web3 from \"web3\";\nimport {\n  PolyjuiceHttpProvider,\n  PolyjuiceConfig,\n} from \"@polyjuice-provider/web3\";\nimport { EthAccountLockConfig } from \"../chainInfo/ChainInfo\";\n\nconst styles = {\n  ...common_styles,\n  ...{\n    header: {\n      minHeight: \"300px\",\n      margin: \"10px\",\n    },\n    address: {\n      color: \"#a0eec0\",\n    },\n    balance: {\n      color: \"whitesmoke\",\n      fontSize: \"20px\",\n    },\n    button: {\n      fontSize: \"25px\",\n      width: \"100%\",\n      maxWidth: \"700px\",\n      margin: \"10px\",\n      padding: \"0.7rem 1.2rem\",\n      color: \"black\",\n    },\n    contract_container: {\n      width: \"100%\",\n      maxWidth: \"700px\",\n      margin: \"30px auto\",\n      textAlign: \"left\" as const,\n      fontSize: \"15px\",\n      border: \"1px solid gray\",\n      color: \"gray\",\n    },\n    contract_li: {\n      listStyleType: \"none\" as const,\n    },\n    descrip_sudt: {\n      width: \"600px\",\n      fontSize: \"13px\",\n      margin: \"30px auto\",\n      textAlign: \"left\" as const,\n    },\n    placeholder_for_experimental: {\n      width: \"700px\",\n      margin: \"0 auto\",\n      marginTop: \"50px\",\n    },\n  },\n};\n\nexport interface ContractsProps {\n  selectedAddress: string | undefined;\n  rollupTypeHash: string | undefined;\n  ethAccountLockConfig: EthAccountLockConfig | undefined;\n}\n\nexport default function Contracts(props: ContractsProps) {\n  const inputFile = useRef<HTMLInputElement>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [deployedContracts, setDeployedContracts] = useState<string[]>([]);\n  useState<EthAccountLockConfig>();\n  const { selectedAddress, rollupTypeHash, ethAccountLockConfig } = props;\n\n  const init_web3_provider = () => {\n    const godwoken_web3_rpc_url = config.web3_server_url;\n    const provider_config: PolyjuiceConfig = {\n      rollupTypeHash: rollupTypeHash || \"\",\n      ethAccountLockCodeHash: ethAccountLockConfig?.code_hash || \"\",\n      web3Url: godwoken_web3_rpc_url,\n    };\n    const provider = new PolyjuiceHttpProvider(\n      godwoken_web3_rpc_url,\n      provider_config\n    );\n    var web3 = new Web3(provider);\n    return web3;\n  };\n\n  const readContractFileAsArtifacts = async (event: any) => {\n    const codefile = event.target.files[0];\n    const res: any = await utils.readDataFromFile(codefile);\n    console.log(res);\n    if (res.status !== \"ok\") {\n      notify(`can not read contract abi from file.`);\n      throw new Error(\"can not read contract abi from file.\");\n    }\n    const data = JSON.parse(res.data);\n    if (typeof data === \"object\" && data.bytecode) {\n      // todo: validate bytecode\n      return data.bytecode;\n    } else {\n      notify(`not a valid artifacts file!`);\n      throw new Error(\"not a valid artifacts file!\");\n    }\n  };\n\n  const clickUploadContract = async () => {\n    if (!inputFile) return notify(`input ref not found.`);\n    inputFile.current!.click();\n  };\n\n  const _deployContract = async (contractCode: string) => {\n    if (!contractCode)\n      return notify(`upload contract binary file or contract artifacts first!`);\n    if (!selectedAddress)\n      return notify(`window.ethereum.selectedAddress not found.`);\n\n    const web3 = init_web3_provider();\n    try {\n      const transactionObject = {\n        nonce: 0, // ignored by MetaMask\n        gasPrice: \"0x0000\", // customizable by user during MetaMask confirmation.\n        gas: \"0x9184e72a000\", // customizable by user during MetaMask confirmation.\n        to: \"0x\" + \"0\".repeat(40), // Required except during contract publications.\n        from: window.ethereum.selectedAddress, // must match user's active address.\n        value: \"0x00\", // Only required to send ether to the recipient from the initiating external account.\n        data: contractCode, // Optional, but used for defining smart contract creation and interaction.\n      };\n      console.log(transactionObject);\n      const txReceipt = await web3.eth.sendTransaction(transactionObject);\n      console.log(`txReceipt: ${JSON.stringify(txReceipt, null, 2)}`);\n\n      const contractAddr = txReceipt.contractAddress;\n      console.log(`contract address: ${contractAddr}`);\n      if (!contractAddr)\n        return notify(\n          `could not find your contract address in txReceipt: ${txReceipt}`\n        );\n\n      notify(`your contract address: ${contractAddr}`, \"success\");\n      setDeployedContracts((oldArray) => [...oldArray, contractAddr]);\n    } catch (error) {\n      console.log(error);\n      return notify(\n        `could not finished signing process. \\n\\n ${JSON.stringify(error)}`\n      );\n    }\n  };\n\n  const readContractFileAsBinary = (codefile: Blob) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = (event: any) => {\n        const code_hex = `0x${event.target.result}`;\n        resolve({ status: \"ok\", data: code_hex });\n      };\n      reader.onerror = (err) => {\n        resolve({ status: \"failed\", error: err });\n      };\n      reader.onabort = () => {\n        resolve({ status: \"failed\", error: \"user abort.\" });\n      };\n      reader.readAsBinaryString(codefile);\n    });\n  };\n\n  const deployContract = async (e: any) => {\n    const codefile = e.target.files[0];\n    var contractBytecode: string;\n\n    try {\n      contractBytecode = await readContractFileAsArtifacts(e);\n    } catch (error) {\n      // read as binary without '0x'.\n      const res: any = await readContractFileAsBinary(codefile);\n      if (res.status !== \"ok\") {\n        return notify(`can not read contract code from file.`);\n      }\n      contractBytecode = res.data;\n      console.log(\"reading contract code hex:\");\n      console.log(contractBytecode);\n    }\n\n    // start uploading contract\n    setIsLoading(true);\n    await _deployContract(contractBytecode);\n    setIsLoading(false);\n  };\n  return (\n    <div>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <FreshButton\n            text={\"Deploy Contract\"}\n            isLoading={isLoading}\n            onClick={clickUploadContract}\n            custom_style={styles.button}\n          />\n          <input type=\"file\" ref={inputFile} onChange={deployContract} hidden />\n          <Typography style={{ fontSize: \"12px\", color: \"gray\" }}>\n            Select Json File Of Artifacts Or Abi\n          </Typography>\n        </Grid>\n      </Grid>\n\n      <Grid container spacing={3}>\n        <Grid item xs={12} style={styles.contract_container}>\n          Contract Address:\n          <SyntaxHighlighter language=\"javascript\" style={gruvboxDark}>\n            {deployedContracts.length > 0\n              ? deployedContracts.join(\"\\n\")\n              : \"nothing.\"}\n          </SyntaxHighlighter>\n        </Grid>\n      </Grid>\n      <Divider></Divider>\n\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Typography variant=\"h5\">Contract Debugger</Typography>\n          <ContractDebugger\n            godwoken_config={{\n              rollup_type_hash: rollupTypeHash,\n              eth_account_lock_code_hash: ethAccountLockConfig?.code_hash,\n              eth_account_lock_hash_type: ethAccountLockConfig?.hash_type,\n            }}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import { Divider, Grid, Typography } from \"@material-ui/core\";\nimport PolyjuiceHttpProvider, {\n  PolyjuiceConfig,\n} from \"@polyjuice-provider/web3\";\nimport config from \"../../../config/constant.json\";\nimport React, { useEffect, useState } from \"react\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { gruvboxDark } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport Web3 from \"web3\";\nimport Api from \"../../../api\";\nimport common_styles from \"../common_style\";\nimport FreshButton from \"../fresh_button\";\nimport { notify } from \"../notify\";\nimport utils from \"../../../utils/index\";\nimport { EthAccountLockConfig } from \"../chainInfo/ChainInfo\";\n\nconst styles = {\n  ...common_styles,\n  ...{\n    header: {\n      minHeight: \"300px\",\n      margin: \"10px\",\n    },\n    address: {\n      color: \"#a0eec0\",\n    },\n    balance: {\n      fontSize: \"20px\",\n    },\n    button: {\n      fontSize: \"25px\",\n      width: \"100%\",\n      maxWidth: \"700px\",\n      margin: \"10px\",\n      padding: \"0.7rem 1.2rem\",\n      color: \"black\",\n    },\n    contract_container: {\n      width: \"100%\",\n      maxWidth: \"700px\",\n      margin: \"30px auto\",\n      textAlign: \"left\" as const,\n      fontSize: \"15px\",\n      border: \"1px solid gray\",\n      color: \"gray\",\n    },\n    contract_li: {\n      listStyleType: \"none\" as const,\n    },\n    descrip_sudt: {\n      width: \"600px\",\n      fontSize: \"13px\",\n      margin: \"30px auto\",\n      textAlign: \"left\" as const,\n    },\n    placeholder_for_experimental: {\n      width: \"700px\",\n      margin: \"0 auto\",\n      marginTop: \"50px\",\n    },\n  },\n};\n\nexport interface Erc20ProxyDemoProps {\n  selectedAddress: string | undefined;\n  rollupTypeHash: string | undefined;\n  ethAccountLockConfig: EthAccountLockConfig | undefined;\n}\n\nexport default function Erc20ProxyDemo(props: Erc20ProxyDemoProps) {\n  const { selectedAddress, rollupTypeHash, ethAccountLockConfig } = props;\n  const [sudtBalance, setSudtBalance] = useState<string>(\"0\");\n  const [sudtToken, setSudtToken] = useState<string>();\n  const [sudtTotalAmount, setSudtTotalAmount] = useState<string>();\n  const [erc20ProxyContractAddress, setErc20ProxyContractAddress] =\n    useState<string>(\"\");\n\n  useEffect(() => {\n    if (selectedAddress) {\n      getSudtBalance();\n      getSudtToken();\n      getSudtTotalAmount();\n    }\n  }, [selectedAddress]);\n\n  const init_web3_provider = () => {\n    const godwoken_web3_rpc_url = config.web3_server_url;\n    const provider_config: PolyjuiceConfig = {\n      rollupTypeHash: rollupTypeHash || \"\",\n      ethAccountLockCodeHash: ethAccountLockConfig?.code_hash || \"\",\n      web3Url: godwoken_web3_rpc_url,\n    };\n    const provider = new PolyjuiceHttpProvider(\n      godwoken_web3_rpc_url,\n      provider_config\n    );\n    var web3 = new Web3(provider);\n    return web3;\n  };\n  const getSudtBalance = async () => {\n    if (!selectedAddress) return;\n    const api = new Api();\n    try {\n      const res = await api.getSudtBalance(selectedAddress);\n      if (res.status !== \"ok\")\n        return console.error(\n          `failed to get sudt balance from account. issue sudt token then ${JSON.stringify(\n            res.error\n          )}`\n        );\n      await setSudtBalance(utils.shannon2CKB(res.data));\n      console.log(utils.shannon2CKB(res.data));\n    } catch (error) {\n      console.log(`get sudt bablance error`);\n      console.log(error);\n      notify(JSON.stringify(error));\n    }\n  };\n\n  const getSudtToken = async () => {\n    const api = new Api();\n    try {\n      const res = await api.getSudtToken();\n      console.log(res);\n      if (res.status !== \"ok\")\n        return console.log(\n          `failed to get sudt token. ${JSON.stringify(res.error)}`\n        );\n\n      await setSudtToken(res.data.sudt_token);\n    } catch (error) {\n      console.log(`get sudt token error`);\n      console.log(error);\n      notify(JSON.stringify(error));\n    }\n  };\n\n  const getSudtTotalAmount = async () => {\n    const api = new Api();\n    try {\n      const res = await api.getSudtTokenTotalAmount();\n      console.log(res);\n      if (res.status !== \"ok\")\n        return console.log(\n          `failed to get sudt token. ${JSON.stringify(res.error)}`\n        );\n\n      await setSudtTotalAmount(res.data.total_amount);\n    } catch (error) {\n      console.log(`get sudt token amount error`);\n      console.log(error);\n      notify(JSON.stringify(error));\n    }\n  };\n\n  const depositSudt = async () => {\n    if (!selectedAddress) return notify(`metamask account not found.`);\n    const api = new Api();\n    try {\n      const res = await api.deposit_sudt(selectedAddress);\n      console.log(res);\n      if (res.status === \"ok\") {\n        notify(`your account id: ${res.data.account_id}`, \"success\");\n        console.log(\n          `res.data.l2_sudt_script_hash: ${res.data.l2_sudt_script_hash}`\n        );\n        await getSudtBalance();\n      } else {\n        notify(JSON.stringify(res.error));\n      }\n    } catch (error) {\n      notify(JSON.stringify(error));\n    }\n  };\n\n  const issueToken = async () => {\n    const api = new Api();\n    try {\n      const res = await api.issueToken();\n      console.log(res);\n      if (res.status === \"ok\") {\n        notify(`issue a sudt token: ${res.data.sudt_token}`, \"success\");\n      } else {\n        notify(JSON.stringify(res.error, null, 2));\n      }\n    } catch (error) {\n      notify(JSON.stringify(error));\n    }\n  };\n\n  const deployErc20ProxyContract = async () => {\n    if (!selectedAddress)\n      return notify(`window.ethereum.selectedAddress not found.`);\n\n    const api = new Api();\n    try {\n      const res: any = await api.deployErc20ProxyContract(selectedAddress);\n      if (res.status !== \"ok\") notify(JSON.stringify(res.error, null, 2));\n\n      const contract_code_with_constructor = res.data;\n      console.log(JSON.stringify(contract_code_with_constructor, null, 2));\n\n      try {\n        const transactionObject = {\n          nonce: 0, // ignored by MetaMask\n          gasPrice: \"0x0000\", // customizable by user during MetaMask confirmation.\n          gas: \"0x9184e72a000\", // customizable by user during MetaMask confirmation.\n          to: \"0x\" + \"0\".repeat(40), // Required except during contract publications.\n          from: window.ethereum.selectedAddress, // must match user's active address.\n          value: \"0x00\", // Only required to send ether to the recipient from the initiating external account.\n          data: contract_code_with_constructor, // Optional, but used for defining smart contract creation and interaction.\n        };\n\n        const web3 = init_web3_provider();\n        const txReceipt = await web3.eth.sendTransaction(transactionObject);\n        console.log(`txReceipt: ${JSON.stringify(txReceipt, null, 2)}`);\n\n        const contractAddr = txReceipt.contractAddress;\n        console.log(`contract address: ${contractAddr}`);\n        if (!contractAddr)\n          return notify(\n            `could not find your contract address in txReceipt: ${txReceipt}`\n          );\n\n        notify(`your contract address: ${contractAddr}`, \"success\");\n        setErc20ProxyContractAddress(contractAddr);\n      } catch (error) {\n        console.log(error);\n        return notify(\n          `could not finished signing process. \\n\\n ${JSON.stringify(error)}`\n        );\n      }\n    } catch (error) {\n      notify(JSON.stringify(error));\n    }\n  };\n\n  const displayShortSudtToken = (sudt_token: string | undefined) => {\n    if (!sudt_token) return \"undefined\";\n\n    return (\n      sudt_token.slice(0, 6) + \"...\" + sudt_token.slice(sudt_token.length - 4)\n    );\n  };\n\n  const sudt_token_info = `\nsymbol: MLMC\nsudt token: ${displayShortSudtToken(sudtToken)}\ntotal amount: ${utils.shannon2CKB(sudtTotalAmount || \"\")}\ndecimal places: 8 (same with CKB)\n`;\n\n  return (\n    <div>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Typography variant=\"h4\" >Erc20-Sudt Proxy Demo</Typography>\n        </Grid>\n      </Grid>\n\n      <Grid container spacing={5}>\n        <Grid item xs={12}>\n          <div style={styles.descrip_sudt}>\n            <p>\n              below is a simple demo to show how erc20-proxy contract works in\n              godwoken-polyjuice.\n            </p>\n            <p>\n              the purpose of erc20-proxy contract is to mount sudt(\n              <a href=\"https://talk.nervos.org/t/rfc-simple-udt-draft-spec/4333\">\n                simple user defined token\n              </a>\n              ) in CKB with some sort of ERC20 token interface in Ethereum. so you can use\n              ERC20 contract to transfer sudt token in CKB.\n            </p>\n            <p>Note:</p>\n            <p>\n              you should issue sudt token first if sudt token total amount is 0.\n            </p>\n            <p>\n              depositting sudt by defaut will give you 400 sudt each time. and\n              the capacity of ckb required is also 400 ckb, so the balance of\n              your layer2 ckb will also increase.{\" \"}\n            </p>\n            <hr />\n            <p>How to deploy?</p>\n            <p>\n              when you click the third button to deploy erc20-proxy contract,\n              the kicker just return an predefined erc20-proxy contract bytecode\n              and assemble an deployed tx for you. after you sign this tx with\n              metamask(using personal sign method), the proxy will be deployed.{\" \"}\n            </p>\n            <p>\n              then you can take the contract address and the abi file (you can\n              download from{\" \"}\n              <a href=\"https://github.com/nervosnetwork/godwoken-polyjuice/blob/main/solidity/erc20/SudtERC20Proxy.abi\">\n                here\n              </a>\n              ), and interact with the contract through the simple Contract\n              Debugger on kicker.\n            </p>\n          </div>\n        </Grid>\n      </Grid>\n\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <div style={styles.balance}>\n            Balance: <span>{sudtBalance} MLMC </span>\n          </div>\n        </Grid>\n      </Grid>\n\n      <Grid container spacing={3}>\n        <Grid item xs={12} style={styles.contract_container}>\n          <h5>My Little Meow Coin</h5>\n          <SyntaxHighlighter language=\"javascript\" style={gruvboxDark}>\n            {sudt_token_info}\n          </SyntaxHighlighter>\n        </Grid>\n      </Grid>\n\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <FreshButton\n            text={\"Issue Sudt Token\"}\n            onClick={issueToken}\n            custom_style={styles.button}\n          />\n        </Grid>\n      </Grid>\n\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <FreshButton\n            text={\"Deposit Sudt\"}\n            onClick={depositSudt}\n            custom_style={styles.button}\n          />\n        </Grid>\n      </Grid>\n\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <FreshButton\n            text={\"Deploy Erc20-Proxy Contract\"}\n            onClick={deployErc20ProxyContract}\n            custom_style={styles.button}\n          />\n        </Grid>\n      </Grid>\n\n      <Grid container spacing={3}>\n        <Grid item xs={12} style={styles.contract_container}>\n          contract address:\n          <SyntaxHighlighter language=\"javascript\" style={gruvboxDark}>\n            {erc20ProxyContractAddress || \"not deployed yet.\"}\n          </SyntaxHighlighter>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport Api from \"../../api/index\";\nimport NotifyPlace, { notify } from \"../widget/notify\";\nimport { Grid } from \"@material-ui/core\";\nimport common_styles from \"../widget/common_style\";\nimport MetamaskWallet from \"../widget/metamask/Wallet\";\nimport \"./Home.css\";\nimport SimpleTabs from \"../widget/tabs/simpleTabs\";\nimport ChainInfo, { EthAccountLockConfig } from \"../widget/chainInfo/ChainInfo\";\nimport Accounts from \"../widget/features/accounts\";\nimport Contracts from \"../widget/features/contracts\";\nimport Erc20ProxyDemo from \"../widget/features/erc20ProxyDemo\";\nimport BgBanner from \"../../resource/bg-banner.jpeg\";\n\ndeclare global {\n  interface Window {\n    ethereum: any;\n  }\n}\n\nconst styles = {\n  ...common_styles,\n  ...{\n    header: {\n      minHeight: \"300px\",\n      //backgroundImage: \"url('\"+ BgBanner + \"')\"\n    },\n    address: {\n      color: \"#a0eec0\",\n    },\n    balance: {\n      color: \"whitesmoke\",\n      fontSize: \"20px\",\n    },\n    button: {\n      fontSize: \"25px\",\n      width: \"100%\",\n      maxWidth: \"700px\",\n      margin: \"10px\",\n      padding: \"0.7rem 1.2rem\",\n      color: \"black\",\n    },\n    contract_container: {\n      width: \"100%\",\n      maxWidth: \"700px\",\n      margin: \"30px auto\",\n      textAlign: \"left\" as const,\n      fontSize: \"15px\",\n      border: \"1px solid gray\",\n      color: \"gray\",\n    },\n    contract_li: {\n      listStyleType: \"none\" as const,\n    },\n    descrip_sudt: {\n      width: \"600px\",\n      fontSize: \"13px\",\n      margin: \"30px auto\",\n      textAlign: \"left\" as const,\n    },\n    placeholder_for_experimental: {\n      width: \"700px\",\n      margin: \"0 auto\",\n      marginTop: \"50px\",\n    },\n  },\n};\n\nfunction Home() {\n  const [selectedAddress, setSelectedAddress] = useState<string>();\n\n  const [rollupTypeHash, setRollupTypeHash] = useState<string>();\n  const [ethAccountLockConfig, setEthAccountLockConfig] =\n    useState<EthAccountLockConfig>();\n  const [updateBalanceTrigger, setUpdateBalanceTrigger] = useState<number>(0);\n  \n  const updateBalanceCaller = () => {\n    setUpdateBalanceTrigger(updateBalanceTrigger + 1);\n  };\n\n  const updateWallet = (new_wallet_addr?: string) => {\n    if (new_wallet_addr) {\n      setSelectedAddress(new_wallet_addr);\n    }\n  };\n\n  useEffect(() => {\n    getRollupTypeHash();\n    getEthAccountLockConfig();\n  }, []);\n\n  const getRollupTypeHash = async () => {\n    const api = new Api();\n    try {\n      const res = await api.getRollupTypeHash();\n      if (res.status !== \"ok\")\n        return notify(\n          `failed to get rollup type hash. ${JSON.stringify(res.error)}`\n        );\n      setRollupTypeHash(res.data);\n    } catch (error) {\n      console.log(`get rollup type hash error`);\n      console.log(error);\n      notify(JSON.stringify(error));\n    }\n  };\n\n  const getEthAccountLockConfig = async () => {\n    const api = new Api();\n    try {\n      const res = await api.getEthAccountLockConfig();\n      if (res.status !== \"ok\")\n        return notify(\n          `failed to get eth_account_lock config. ${JSON.stringify(res.error)}`\n        );\n      setEthAccountLockConfig(res.data);\n    } catch (error) {\n      console.log(`get eth account lock error`);\n      console.log(error);\n      notify(JSON.stringify(error));\n    }\n  };\n\n  const tabsContent = [\n    <ChainInfo />,\n    <Accounts addressVec={[selectedAddress]} updateBalanceTrigger={updateBalanceCaller} />,\n    <Contracts\n      selectedAddress={selectedAddress}\n      rollupTypeHash={rollupTypeHash}\n      ethAccountLockConfig={ethAccountLockConfig}\n    />,\n    <Erc20ProxyDemo\n      selectedAddress={selectedAddress}\n      rollupTypeHash={rollupTypeHash}\n      ethAccountLockConfig={ethAccountLockConfig}\n    />,\n  ];\n\n  const tabsNames = [\"chain Info\", \"Accounts\", \"Contract\", \"Erc20 Proxy Demo\"];\n\n  return (\n    <div>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <NotifyPlace />\n\n          <Grid container>\n            <Grid item xs={12} style={styles.header} spacing={3}>\n              <MetamaskWallet\n                onUpdateWalletAddress={updateWallet}\n                updateBalanceTrigger={updateBalanceTrigger}\n              />\n            </Grid>\n            <Grid item xs={12} spacing={3}>\n              <SimpleTabs names={tabsNames} tabs={tabsContent} />\n            </Grid>\n          </Grid>\n        </header>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { useParams } from \"react-router\";\nimport { useEffect, useState } from \"react\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { gruvboxDark } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\nexport type SimpleJsonInfoProps = {\n  title?: string;\n  jsonInfo: string | object | undefined;\n};\n\nexport default function SimpleJsonInfo(props: SimpleJsonInfoProps) {\n  const { title, jsonInfo } = props;\n  const [displayJsonInfo, setDisplayJsonInfo] = useState<string>();\n\n  console.log(typeof jsonInfo);\n\n  useEffect(() => {\n    if (typeof jsonInfo === \"string\") setDisplayJsonInfo(jsonInfo);\n    else setDisplayJsonInfo(JSON.stringify(jsonInfo, null, 2));\n  }, [jsonInfo]);\n\n  return (\n    <div>\n      {title || \"\"}\n      <SyntaxHighlighter language=\"javascript\" style={gruvboxDark}>\n        {displayJsonInfo || ''}\n      </SyntaxHighlighter>\n    </div>\n  );\n}\n","import SimpleJsonInfo from \"./SimpleJsonInfo\";\nimport Api from \"../../../api\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nexport default function GodwokenInfo() {\n  const [scripts, setScripts] = useState();\n  const [config, setConfig] = useState();\n\n  useEffect(() => {\n    fetchInfo();\n  }, []);\n\n  const fetchInfo = async () => {\n    const api = new Api();\n    const scripts = await api.getGodwokenScriptDeployResultFile();\n    const config = await api.getGodwokenConfigFile();\n    await setScripts(scripts);\n    await setConfig(config);\n  };\n\n  return (\n    <div>\n      <SimpleJsonInfo title=\"Godwoken Scripts Deploy Result\" jsonInfo={scripts} />\n      <SimpleJsonInfo title=\"Godwoken Rollup Config\" jsonInfo={config} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Home from './components/home/Home';\nimport GodwokenInfo from './components/widget/godwokenInfo/GodwokenInfo';\n\nexport default function MyRouter() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path='/godwoken_info'>\n          <GodwokenInfo></GodwokenInfo>\n        </Route>\n        <Route path='/'>\n          <Home></Home>\n        </Route>\n     </Switch> \n    </BrowserRouter>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MyRouter from './router';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MyRouter />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}