name: Indexer Sync

on:
  schedule:
  - cron: '08 * * * *'
  push:
    branches: [ '*testnet*' ]

env:
  IMAGE_NAME: testnet-polyjuice-api

jobs:
  sync-testnet-indexer:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Cache node_modules
      uses: actions/cache@v2
      with:
        path: |
          node_modules
          packages/*/node_modules
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

    - run: yarn

    - name: Set the datetime
      run: echo "DATETIME=$(date +%F_%H)" >> $GITHUB_ENV
    - name: Cache Testnet Indexer Data
      id: indexer-cache
      uses: actions/cache@v2
      with:
        path: |
          packages/runner/db/ckb-indexer-testnet
          packages/runner/db/backup
        key: Aggron-${{ env.DATETIME }}
        # restore-keys: |
        #   Aggron-

    # TODO: don't copy if cached restored
    - name: Copy the testnet indexer data from testnet-polyjuice-api:latest docker image
      if: steps.indexer-cache.outputs.cache-hit != 'true'
      working-directory: packages/runner
      run: |
        docker run --rm -v`pwd`/db/ckb-indexer-testnet:/ckb-indexer-testnet ghcr.io/flouse/testnet-polyjuice-api bash -c "cp /godwoken-polyman/packages/runner/db/ckb-indexer-testnet/* /ckb-indexer-testnet/"
        ls db
        ls -l db/ckb-indexer-testnet
        sudo chown -R $(whoami) db/ckb-indexer-testnet
        ls -l db/ckb-indexer-testnet

    - name: Testnet Indexer Sync
      working-directory: packages/runner
      run: MIN=20 yarn sync-indexer

  # Push image to GitHub Packages
  build-and-push-image:
    # Ensure test job passes before pushing image.
    needs: sync-testnet-indexer
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache Testnet Indexer Data
        id: indexer-cache
        uses: actions/cache@v2
        with:
          path: |
            packages/runner/db/ckb-indexer-testnet
            packages/runner/db/backup
          key: Aggron
      - name: Build image
        run: docker build . --file Dockerfile.api --tag $IMAGE_NAME
        # restore-keys: |
        #   Aggron-datetime
      - name: Login GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }} # Should create a PAT with `read:packages` and `write:packages` scopes and save it as an Actions secret `CR_PAT` first
      - run: docker images
      # push image
      - name: Push image to GitHub Container Registry
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          TIME_TAG=$(date +%F_%H%M)
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          echo TIME_TAG=$TIME_TAG
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$TIME_TAG
          docker push $IMAGE_ID:$TIME_TAG
          docker tag $IMAGE_NAME $IMAGE_ID:latest
          docker push $IMAGE_ID:latest
