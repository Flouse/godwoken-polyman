name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: '48 19 * * *'
  push:
    branches: [ '*testnet*' ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: Flouse/testnet-polyjuice-api


jobs:
  build-and-push:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      # https://github.com/actions/cache
      - name: Cache Testnet Indexer Data
        id: indexer-cache
        uses: actions/cache@v2
        with:
          path: |
            packages/runner/db/ckb-indexer-testnet
            packages/runner/db/backup
          key: Aggron
      
      - name: Download nervos-ckb-indexer-testnet-snapshot
        if: steps.indexer-cache.outputs.cache-hit != 'true'
        working-directory: packages/runner
        run: |
          # docker pull ghcr.io/flouse/testnet-polyjuice-api:latest
          docker run --rm -v`pwd`/db/ckb-indexer-testnet:/ckb-indexer-testnet ghcr.io/flouse/testnet-polyjuice-api bash -c "cp /godwoken-polyman/packages/runner/db/ckb-indexer-testnet/* /ckb-indexer-testnet/"
          ls db
          ls db/ckb-indexer-testnet

      # TODO: MIN=20 yarn sync-indexer

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=true
          tags: |
            type=schedule,pattern=nightly
            type=schedule,pattern={{date 'YYYYMMDDHHmm'}}
            type=sha
          # type=raw,value=first

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.api
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
